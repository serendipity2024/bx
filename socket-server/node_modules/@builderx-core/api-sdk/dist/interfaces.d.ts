interface APIResponse<T> {
    data: T;
    status: number | undefined;
    message: string;
    headers: object;
}
interface Team {
    id: number;
    owner_id: number;
    name: string | undefined;
    slug: string;
    photo_url: string;
    stripe_id: any;
    current_billing_plan: any;
    vat_id: any;
    trial_ends_at: string;
    created_at: string;
    updated_at: string;
    disable: number;
    billing_email: string;
    extend_trial: number;
    pivot?: {
        user_id: number;
        team_id: number;
        role: string;
    };
    domains?: [{
        id: number;
        name: string;
        team_id: number;
        created_at: string;
        updated_at: string;
    }];
    days_remaining?: number;
    isSubscribed?: number;
    tax_rate?: number;
    owner?: User;
    users?: [User];
}
interface IFile {
    id: number;
    name: string;
    projectId: string;
    contentType: string;
    size: any;
    created_at: string;
    updated_at: string;
    deleted_at: string | any;
    destination: string;
    path: any;
    moved: number;
    content_type: string;
    content?: string;
}
interface User {
    id: number;
    email: string;
    name: string;
    created_at: string;
    updated_at: string;
    google_id: string;
    google: any;
    isAdmin: any;
    active: number;
    config: string;
    deleted_at: any;
    activeTeamId: any;
    email_verified_at: any;
    photo_url: string;
    uses_two_factor_auth: boolean;
    current_team_id: number;
    stripe_id: any;
    current_billing_plan: any;
    billing_state: any;
    vat_id: any;
    trial_ends_at: any;
    last_read_announcements_at: any;
    avatar: string;
    avatar_original: string;
    last_logged_in: string;
    newsletter_unsubscribe: number;
    updates_unsubscribe: number;
    disable: number;
    version: number;
    isSubscribed?: number;
    days_remaining?: number;
    teams?: [Team];
    currentTeam?: Team;
    isSuperAdmin?: boolean;
    isAdminOfCurrentTeam?: boolean;
    tax_rate: number;
    pivot?: {
        team_id: number;
        user_id: number;
        role: string;
        type: string;
    };
}
interface Project {
    id: string;
    userId: number;
    teamId: number;
    name: string;
    updated_at: string;
    created_at: string;
    projectShareability?: any;
    team: Team;
    access: {
        access: string;
        mode: string;
    };
    ownerId?: any | string;
    shareability?: number;
    deleted_at?: any;
    last_edited_by?: any;
    sample?: number;
    last_thumbnail_generated_at?: any;
    last_edited_at?: any;
    session?: any;
    project_shareability?: any;
}
interface Session {
    id: number;
    project_id: string;
    session_id: string;
    user_id: number;
    last_polled_at: string;
    created_at: string;
    updated_at: string;
    user: User;
}
interface Poll {
    sessions: [Session];
    project: Project;
    message: string;
    files?: [];
}
interface FileContent {
    status: boolean;
    message: string;
    fileId: number;
}
interface Auth {
    id: number;
    user: User;
}
declare type ProjectShareability = [{
    id: number;
    project_id: string;
    type: string;
    type_id: any;
    access: string;
    mode: string;
    share_user: any;
}];
declare type File = [IFile];
export default APIResponse;
export { Auth, FileContent, Poll, User, Project, IFile, File, Team, Session, ProjectShareability, };
