interface Points {
    x: number;
    y: number;
}
export interface StopPoints {
    stopColor: string;
    stopOpacity?: string;
    offset: number;
}
export declare class Gradient {
    gradientType: 'LinearGradient' | 'RadialGradient' | 'AngularGradient';
    elipseLength?: number;
    from: Points;
    to: Points;
    stops: Array<StopPoints>;
    activeIndex?: number;
    constructor(gradientType: 'LinearGradient' | 'RadialGradient' | 'AngularGradient', from: Points, to: Points, stops: Array<StopPoints>, activeIndex?: number, elipseLength?: number);
    toJS(): any;
    rotate(cx: number, cy: number, x: number, y: number, angle: number): {
        x: number;
        y: number;
    };
    rotateGradient(angle: number): void;
    getGradientString: (palette?: any) => string;
}
export {};
