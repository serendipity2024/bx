export default abstract class Serializable {
    static fromJS(snapshot: any, classObject?: any): any;
    static getAllFields: (instance: any, fields?: {}) => any;
    static getClassInstanceFromPlainObject(classObject: any, snapshot: any): any;
    abstract getFields(): {
        [key: string]: any;
    };
    toJS(shallow?: boolean): Partial<any>;
    getPlainObjectFromClassInstance(object: any): any;
    MapToPOJO(mapInstance: Map<any, any>): any;
}
export declare const types: {
    literal: {
        type: string;
        children: null;
    };
    array: (type: any) => {
        type: string;
        children: any;
    };
    map: (keyType: any, valueType: any) => {
        type: string;
        keyType: any;
        valueType: any;
    };
    ignore: {
        type: string;
        children: null;
    };
};
