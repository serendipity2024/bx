import { IContext, IDimension } from 'interfaces';
import ArtboardEvent from 'events/ArtboardEvent';
import { Canvas, IPlugin } from '../../';
export default class LayerLabel implements IPlugin {
    name: string;
    canvas: Canvas;
    labeltext: any;
    removeDom: any;
    lastPageX: number;
    lastPageY: number;
    dragStart: any;
    dims: IDimension;
    layerLabelMap: Map<any, any>;
    ghostImageDOM: any;
    handleGhostImage(e: any): void;
    updateLabelLayout(label: any, layer: any): void;
    setLabel(context: IContext, layerLabel: string): void;
    selectedArtboardChanged: (event: ArtboardEvent) => void;
    removeLabel(context: IContext): void;
    hideLabel(context: IContext): void;
    showLabel(context: IContext): void;
    addLabel(context: IContext, layerLabel: string): void;
    init(canvas: Canvas): void;
    activate(): void;
    deactivate(): void;
}
