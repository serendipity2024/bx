import { Canvas, IPlugin, Layer } from '../..';
import RulerLinesAddEvent from '../../plugins/RulerLines/events/RulerLinesAddEvent';
import RulerLinesRemoveEvent from '../../plugins/RulerLines/events/RulerLinesRemoveEvent';
import RulerLinesSetPositionEvent from '../../plugins/RulerLines/events/RulerLinesSetPositionEvent';
import ArtboardEvent from 'events/ArtboardEvent';
import { IContext } from 'interfaces';
declare type RulerLineData = {
    axis: 'x' | 'y';
    axisCoordinate: number;
};
export default class StageDesignerRulerPlugin implements IPlugin {
    name: string;
    canvas: Canvas;
    rulerVisibility: boolean;
    artboardLinesMap: Map<Layer, Array<RulerLineData>>;
    init(canvas: Canvas): void;
    activate(): void;
    showRuler: (context: IContext) => void;
    hideRuler: (context: IContext) => void;
    artboardSelected: (event: ArtboardEvent) => void;
    getAllLines: (context: IContext, selectedArtboard: Layer) => RulerLineData[] | undefined;
    getLineCoordinates: () => {
        x: Array<number>;
        y: Array<number>;
    };
    addLine: (event: RulerLinesAddEvent) => void;
    setPosition: (event: RulerLinesSetPositionEvent) => void;
    removeLine: (event: RulerLinesRemoveEvent) => void;
    deactivate(): void;
}
export {};
