import { IContext, IDimension } from 'interfaces';
import ArtboardEvent from 'events/ArtboardEvent';
import { Canvas, IPlugin, Layer } from '../..';
export default class DeviceFrame implements IPlugin {
    name: string;
    canvas: Canvas;
    labeltext: any;
    wrapperDiv: any;
    deviceName: any;
    deviceOrientation: any;
    dispose: any;
    removeDom: any;
    deviceFrameMap: Map<any, any>;
    lastPageX: number;
    lastPageY: number;
    dragStart: any;
    dims: IDimension;
    DeviceFrameMap: Map<any, any>;
    ghostImageDOM: any;
    selectedArtboardChanged: (event: ArtboardEvent) => void;
    removeFrame(context: IContext): void;
    render: (layer: Layer) => void;
    addFrame(context: IContext, deviceName: string, deviceOrientation: string): void;
    init(canvas: Canvas): void;
    activate(): void;
    deactivate(): void;
}
