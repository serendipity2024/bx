import * as React from 'react';
declare type PathEditorProps = {
    onEvent: (event: any) => void;
    pathProps?: any;
    newPath?: boolean;
    bounds: any;
    dimensions: any;
    canvas: any;
    layer: any;
};
export default class PathEditor extends React.PureComponent<PathEditorProps, any> {
    paper: any;
    path: paper.Path | null;
    segment: paper.Segment | null | any;
    tool: paper.Tool | null;
    handle: string | null;
    xFactor: number;
    yFactor: number;
    oldBounds: any;
    isFirstClick: boolean;
    onUpdate: (keys: any) => void;
    componentDidMount(): void;
    ready(): void;
    componentDidUpdate(prevProps: PathEditorProps): void;
    componentWillUnmount(): void;
    init(): void;
    getRotation: () => number;
    finishEditing: () => void;
    closePath: () => void;
    deleteSelectedPoint: () => void;
    straightenSelectedPoint: () => void;
    disconnectSelectedPoint: () => void;
    emitUpdatedJSON: () => void;
    render(): JSX.Element;
    private onMouseUp;
    private onMouseDrag;
    private pathEditorOnEnd;
    private onMouseDown;
    private onMouseMove;
}
export {};
