import * as React from 'react';
import { Layer, TextEditorEvent } from '../../';
import './Draft.css';
import { IDimensionWithRoot } from 'interfaces';
declare type propType = {
    layer: Layer;
    onEvent: (event: TextEditorEvent) => void;
};
export default class TextEditor extends React.Component<propType, any> {
    isBlurred: boolean;
    text: string;
    dims: IDimensionWithRoot;
    editorRef: any;
    isText: boolean;
    isAuto: boolean;
    constructor(props: any);
    componentDidMount(): void;
    isNumpadEnter(e: any): boolean;
    onBlur: () => void;
    onFocus: () => void;
    handleNumpadEnter: (e: any) => void;
    removePositionalAttribute: (style: any) => any;
    onChange: (editorState: any) => void;
    myBlockStyleFn: (contentBlock: any) => "" | "defaultTextStyle";
    getStringStyle: (propertyName: string) => any;
    handleTab: (event: any) => void;
    handleKeyBinding: (event: any) => "code" | "redo" | "split-block" | "undo" | "delete" | "delete-word" | "backspace" | "backspace-word" | "backspace-to-start-of-line" | "bold" | "italic" | "strikethrough" | "underline" | "transpose-characters" | "move-selection-to-start-of-block" | "move-selection-to-end-of-block" | "secondary-cut" | "secondary-paste" | null;
    render(): JSX.Element;
}
export {};
