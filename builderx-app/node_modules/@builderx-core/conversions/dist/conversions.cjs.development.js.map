{"version":3,"file":"conversions.cjs.development.js","sources":["../src/fromPaperPath.ts","../src/toPaperPath.ts","../src/getRadiusAdjustedPoints.ts","../src/pathUtils.ts","../src/toSVGPath.ts","../src/pointsFromSVGPath.ts"],"sourcesContent":["//@ts-ignore\nimport paper from \"paper\";\nif (typeof document !== \"undefined\") {\n  let canvasDOMElement = document.createElement(\"canvas\");\n  canvasDOMElement.style.position = \"absolute\";\n  canvasDOMElement.setAttribute(\"height\", \"1000px\");\n  canvasDOMElement.setAttribute(\"width\", \"1000px\");\n  canvasDOMElement.style.top = \"0px\";\n  canvasDOMElement.style.left = \"0px\";\n  paper.setup(canvasDOMElement as HTMLCanvasElement);\n  paper.settings[\"insertItems\"] = false;\n} else {\n  // @ts-ignore\n  paper.setup([640, 480]);\n}\nexport function convertPaperPointToBxObj(finalPaperPath: any) {\n  return {\n    closed: finalPaperPath.closed,\n    points: convertPaperToBx(finalPaperPath.exportJSON()),\n  };\n}\nexport function convertPaperToBx(finalPathPaper: any) {\n  let finalPaperPoints: any = [];\n  let finalPathPaperJson = JSON.parse(finalPathPaper);\n  if (\n    finalPathPaperJson[0] !== \"CompoundPath\" &&\n    finalPathPaperJson[1] &&\n    finalPathPaperJson[1].segments\n  ) {\n    finalPaperPoints = finalPaperPoints.concat(\n      getPaperPoints(finalPathPaperJson[1].segments)\n    );\n  } else if (\n    finalPathPaperJson[1] &&\n    finalPathPaperJson[1].children &&\n    finalPathPaperJson[1].children.length > 0\n  ) {\n    for (let k = 0; k < finalPathPaperJson[1].children.length; k++) {\n      finalPaperPoints = finalPaperPoints.concat(\n        getPaperPoints(finalPathPaperJson[1].children[k][1].segments)\n      );\n      // Jugaad: using 776 and 777 for closed and no-closed paths\n      let filler = finalPathPaperJson[1].children[k][1].closed ? 776 : 777;\n      // Adding Filler Point\n      finalPaperPoints.push(\n        createPointObject(filler, filler, false, false, 0, 0, 0, 0, 0, 0)\n      );\n    }\n  }\n  return finalPaperPoints;\n}\n\nfunction getPaperPoints(segments: any) {\n  let finalPaperPoints = [];\n  for (let j = 0; j < segments.length; j++) {\n    let point: any = {};\n    let curveFrom: any = {};\n    let curveTo: any = {};\n    let pointObject = {};\n    if (segments[j][0] && segments[j][0].constructor === Array) {\n      point.x = segments[j][0][0];\n      point.y = segments[j][0][1];\n      curveTo.x = segments[j][1][0] + segments[j][0][0];\n      curveTo.y = segments[j][1][1] + segments[j][0][1];\n      curveFrom.x = segments[j][2][0] + segments[j][0][0];\n      curveFrom.y = segments[j][2][1] + segments[j][0][1];\n      pointObject = createPointObject(\n        0,\n        0,\n        true,\n        true,\n        curveFrom.x,\n        curveFrom.y,\n        curveTo.x,\n        curveTo.y,\n        point.x,\n        point.y\n      );\n    } else {\n      point.x = segments[j][0];\n      point.y = segments[j][1];\n      pointObject = createPointObject(\n        0,\n        0,\n        false,\n        false,\n        point.x,\n        point.y,\n        point.x,\n        point.y,\n        point.x,\n        point.y\n      );\n    }\n    finalPaperPoints.push(pointObject);\n  }\n  return finalPaperPoints;\n}\n\nfunction createPointObject(\n  cornerRadius: number,\n  curveMode: number,\n  hasCurveFrom: boolean,\n  hasCurveTo: boolean,\n  curveFromX: number,\n  curveFromY: number,\n  curveToX: number,\n  curveToY: number,\n  px: number,\n  py: number\n) {\n  return {\n    cornerRadius: cornerRadius,\n    curveMode: curveMode,\n    hasCurveTo: hasCurveTo,\n    hasCurveFrom: hasCurveFrom,\n    curveFrom: {\n      x: curveFromX,\n      y: curveFromY,\n    },\n    curveTo: {\n      x: curveToX,\n      y: curveToY,\n    },\n    point: {\n      x: px,\n      y: py,\n    },\n  };\n}\n","//@ts-ignore\nimport paper from \"paper\";\nif (typeof document !== \"undefined\") {\n  let canvasDOMElement = document.createElement(\"canvas\");\n  canvasDOMElement.style.position = \"absolute\";\n  canvasDOMElement.setAttribute(\"height\", \"1000px\");\n  canvasDOMElement.setAttribute(\"width\", \"1000px\");\n  canvasDOMElement.style.top = \"0px\";\n  canvasDOMElement.style.left = \"0px\";\n  paper.setup(canvasDOMElement as HTMLCanvasElement);\n  paper.settings[\"insertItems\"] = false;\n} else {\n  // @ts-ignore\n  paper.setup([640, 480]);\n}\nexport function getPaperPathFromPoints(pointsInPath: any, isClosed: boolean) {\n  let segments = getSegmentFromPoints(pointsInPath);\n  let paperPath = new paper.Path(segments);\n  paperPath.closed = isClosed;\n  return paperPath;\n}\n\nexport function getSegmentFromPoints(pointsInPath: any) {\n  let segments = [];\n  for (let pointIndex = 0; pointIndex < pointsInPath.length; pointIndex++) {\n    let handleInPoint = new paper.Point(\n      pointsInPath[pointIndex].curveTo.x - pointsInPath[pointIndex].point.x,\n      pointsInPath[pointIndex].curveTo.y - pointsInPath[pointIndex].point.y\n    );\n    let handleOutPoint = new paper.Point(\n      pointsInPath[pointIndex].curveFrom.x - pointsInPath[pointIndex].point.x,\n      pointsInPath[pointIndex].curveFrom.y - pointsInPath[pointIndex].point.y\n    );\n    let handleIn = pointsInPath[pointIndex].hasCurveFrom\n      ? handleInPoint\n      : undefined;\n    let handleOut = pointsInPath[pointIndex].hasCurveTo\n      ? handleOutPoint\n      : undefined;\n    let point = new paper.Point(\n      pointsInPath[pointIndex].point.x,\n      pointsInPath[pointIndex].point.y\n    );\n    let segment = new paper.Segment({\n      point,\n      handleIn,\n      handleOut,\n      radius: pointsInPath[pointIndex].Radius,\n    });\n    segments.push(segment);\n  }\n  return segments;\n}\n","import { Point, Coordinate } from \"./types\";\nimport { getRadiusAdjustment } from \"./pathUtils\";\n\nexport default function getRadiusAdjustedPoints(\n  pointsArray: Array<Point>,\n  viewBox: string\n) {\n  const dims: Array<any> =\n    viewBox && viewBox.split ? viewBox.split(\" \") : [0, 0, 100, 100];\n  const maxRadius = Math.min(dims[2] - dims[0], dims[3] - dims[1]) / 2;\n  let newPoints: Array<Point> = [];\n  pointsArray.forEach((oldPoint: Point, i: number) => {\n    if (oldPoint.cornerRadius) {\n      let d: Coordinate = { x: 0, y: 0 };\n      let point: Coordinate;\n      let additionalPoint: Point;\n      if (i === 0) {\n        d = getRadiusAdjustment(pointsArray, i, i + 1, maxRadius);\n        point = {\n          x: Number(oldPoint.point.x + d.x),\n          y: Number(oldPoint.point.y + d.y),\n        };\n        newPoints.push({\n          ...oldPoint,\n          cornerRadius: 0,\n          point,\n        });\n      }\n      const nextIndex = i === pointsArray.length - 1 ? 0 : i + 1;\n      const nextToNextIndex =\n        i === pointsArray.length - 1 ? 1 : pointsArray[i + 2] ? i + 2 : 0;\n      d = getRadiusAdjustment(pointsArray, i, nextIndex, maxRadius);\n      point = {\n        x: Number(pointsArray[nextIndex].point.x - d.x),\n        y: Number(pointsArray[nextIndex].point.y - d.y),\n      };\n      newPoints.push({\n        ...oldPoint,\n        cornerRadius: 0,\n        hasCurveFrom: true,\n        curveFrom: point,\n        curveTo: point,\n        point,\n      });\n      const d2 = getRadiusAdjustment(\n        pointsArray,\n        nextIndex,\n        nextToNextIndex,\n        maxRadius\n      );\n      additionalPoint = {\n        curveMode: 1,\n        hasCurveFrom: true,\n        hasCurveTo: true,\n        cornerRadius: 0,\n        curveFrom: {\n          x: pointsArray[nextIndex].point.x + d2.x,\n          y: pointsArray[nextIndex].point.y + d2.y,\n        },\n        curveTo: {\n          x: pointsArray[nextIndex].point.x,\n          y: pointsArray[nextIndex].point.y,\n        },\n        point: {\n          x: pointsArray[nextIndex].point.x + d2.x,\n          y: pointsArray[nextIndex].point.y + d2.y,\n        },\n      };\n      newPoints.push(additionalPoint);\n    } else {\n      newPoints.push(oldPoint);\n    }\n  });\n  return newPoints;\n}\n","//@ts-ignore\nimport paper from \"paper\";\nimport { getSegmentFromPoints } from \"./toPaperPath\";\nimport { Point, Coordinate } from \"./types\";\nimport getRadiusAdjustedPoints from \"./getRadiusAdjustedPoints\";\n\nif (typeof document !== \"undefined\") {\n  let canvasDOMElement = document.createElement(\"canvas\");\n  canvasDOMElement.style.position = \"absolute\";\n  canvasDOMElement.setAttribute(\"height\", \"1000px\");\n  canvasDOMElement.setAttribute(\"width\", \"1000px\");\n  canvasDOMElement.style.top = \"0px\";\n  canvasDOMElement.style.left = \"0px\";\n  paper.setup(canvasDOMElement as HTMLCanvasElement);\n  paper.settings[\"insertItems\"] = false;\n} else {\n  // @ts-ignore\n  paper.setup([640, 480]);\n}\n\nfunction getManipulatedPath(layer: any, paperPath: any) {\n  // TODO: keep this order, otherwise malfunctions\n  // adds roatation\n  if (layer.rotation) {\n    paperPath.rotate(-layer.rotation);\n  }\n  // checks for flip\n  if (layer.isFlippedHorizontal || layer.isFlippedVertical) {\n    paperPath.scale(\n      layer.isFlippedHorizontal ? -1 : 1,\n      layer.isFlippedVertical ? -1 : 1\n    );\n  }\n  paperPath.closed = layer.isClosed;\n  return paperPath;\n}\n\nexport function applyBooleanOpsOnPaths(\n  layers: any,\n  frame: any,\n  scalingFactor: number,\n  viewBox: string\n) {\n  if (!layers) {\n    return [];\n  }\n  try {\n    // to keep track of hidden layers and exclude them\n    let firstValidIndex = 0;\n    // check for first valid index, shapes might be hidden which are not to be counted\n    while (firstValidIndex < layers.length - 1) {\n      if (layers[firstValidIndex] && layers[firstValidIndex].isVisible) {\n        break;\n      } else if (\n        firstValidIndex === layers.length - 1 &&\n        layers[firstValidIndex] &&\n        !layers[firstValidIndex].isVisible\n      ) {\n        firstValidIndex = -1;\n        return [];\n      } else {\n        firstValidIndex++;\n      }\n    }\n    let zeroPointInPath: any = getRadiusAdjustedPoints(\n      convertPointsArrayBool(\n        layers[firstValidIndex].points,\n        layers[firstValidIndex].frame,\n        frame,\n        scalingFactor\n      ),\n      viewBox\n    );\n    const segments = getSegmentFromPoints(zeroPointInPath);\n    let finalPaperPath: any = new paper.Path(segments);\n    finalPaperPath = getManipulatedPath(\n      layers[firstValidIndex],\n      finalPaperPath\n    );\n    if (firstValidIndex < layers.length - 1) {\n      for (let index = firstValidIndex + 1; index < layers.length; index++) {\n        if (layers[index].isVisible) {\n          let pointsInPath = getRadiusAdjustedPoints(\n            convertPointsArrayBool(\n              layers[index].points,\n              layers[index].frame,\n              frame,\n              scalingFactor\n            ),\n            viewBox\n          );\n          let paperPath = new paper.Path(getSegmentFromPoints(pointsInPath));\n          paperPath = getManipulatedPath(layers[index], paperPath);\n          switch (layers[index].booleanOperation) {\n            case 0:\n              finalPaperPath = finalPaperPath.unite(paperPath);\n              break;\n            case 1:\n              finalPaperPath = finalPaperPath.subtract(paperPath);\n              break;\n            case 2:\n              finalPaperPath = finalPaperPath.intersect(paperPath);\n              break;\n            default:\n              finalPaperPath = finalPaperPath.exclude(paperPath);\n              break;\n          }\n        }\n      }\n    }\n\n    return finalPaperPath.exportJSON();\n  } catch (error) {\n    console.log(\"JSON read error in Boolean Operations\", error);\n    return [];\n    // throw new Error(\"JSON read error in Boolean Operations\");\n  }\n}\n\nfunction convertPointsArrayBool(\n  points: any,\n  frame: any,\n  referenceFrame: any,\n  scalingFactor: number\n) {\n  let newPoints = [];\n  if (points && points.length > 0) {\n    let pointsApplied =\n      points[0].point !== points[points.length - 1].point\n        ? points\n        : getValidPoints(points);\n    for (let i = 0; i < pointsApplied.length; i++) {\n      let tempPoint: any = {};\n      tempPoint.cornerRadius = pointsApplied[i].cornerRadius;\n      tempPoint.curveMode = pointsApplied[i].curveMode;\n      tempPoint.hasCurveTo = pointsApplied[i].hasCurveTo;\n      tempPoint.hasCurveFrom = pointsApplied[i].hasCurveFrom;\n      tempPoint.curveFrom = convertPointBool(\n        pointsApplied[i].curveFrom,\n        frame,\n        referenceFrame,\n        scalingFactor\n      );\n      tempPoint.curveTo = convertPointBool(\n        pointsApplied[i].curveTo,\n        frame,\n        referenceFrame,\n        scalingFactor\n      );\n      tempPoint.point = convertPointBool(\n        pointsApplied[i].point,\n        frame,\n        referenceFrame,\n        scalingFactor\n      );\n      newPoints.push(tempPoint);\n    }\n  }\n  return newPoints;\n}\n\nfunction convertPointBool(\n  point: any,\n  frame: any,\n  // @ts-ignore\n  referenceFrame: any,\n  scalingFactor: any\n) {\n  let tempP1 = point.split(\",\");\n  let px = tempP1[0].slice(1);\n  let py = tempP1[1].slice(0, -1);\n  px = (px * frame.width + frame.x) * scalingFactor;\n  py = (py * frame.height + frame.y) * scalingFactor;\n\n  return {\n    x: parseFloat(px.toFixed(4)),\n    y: parseFloat(py.toFixed(4)),\n  };\n}\n\n// function to convert Sketch points json to Bx json\nexport function convertPointsArray(\n  points: any,\n  frame: any,\n  referenceFrame: any,\n  maskingDisplacement: any,\n  scalingFactor: number\n) {\n  let newPoints = [];\n  if (points && points.length > 0) {\n    for (let i = 0; i < points.length; i++) {\n      let tempPoint: any = {};\n      tempPoint.cornerRadius = points[i].cornerRadius;\n      tempPoint.curveMode = points[i].curveMode;\n      tempPoint.hasCurveTo = points[i].hasCurveTo;\n      tempPoint.hasCurveFrom = points[i].hasCurveFrom;\n      tempPoint.curveFrom = convertPoint(\n        points[i].curveFrom,\n        frame,\n        referenceFrame,\n        maskingDisplacement,\n        scalingFactor\n      );\n      tempPoint.curveTo = convertPoint(\n        points[i].curveTo,\n        frame,\n        referenceFrame,\n        maskingDisplacement,\n        scalingFactor\n      );\n      tempPoint.point = convertPoint(\n        points[i].point,\n        frame,\n        referenceFrame,\n        maskingDisplacement,\n        scalingFactor\n      );\n      newPoints.push(tempPoint);\n    }\n  }\n  return newPoints;\n}\n\nfunction convertPoint(\n  point: any,\n  frame: any,\n  referenceFrame: any,\n  maskingDisplacement: any,\n  scalingFactor: number\n) {\n  let tempP1 = point.split(\",\");\n  let px = tempP1[0].slice(1);\n  let py = tempP1[1].slice(0, -1);\n  px =\n    ((px * frame.width + maskingDisplacement.x) * frame.width * scalingFactor) /\n    referenceFrame.width;\n  py =\n    ((py * frame.height + maskingDisplacement.y) *\n      frame.height *\n      scalingFactor) /\n    referenceFrame.height;\n\n  return {\n    x: parseFloat(px.toFixed(4)),\n    y: parseFloat(py.toFixed(4)),\n  };\n}\n\nfunction getValidPoints(points: any) {\n  let newPoints = points.slice(1, points.length - 1);\n  let obj = {\n    _class: \"curvePoint\",\n    cornerRadius: points[0].cornerRadius,\n    curveMode: points[0].curveMode,\n    curveTo: points[0].hasCurveTo\n      ? points[0].curveTo\n      : points[points.length - 1].curveTo,\n    curveFrom: points[0].hasCurveFrom\n      ? points[0].curveFrom\n      : points[points.length - 1].curveFrom,\n    hasCurveFrom: points[0].hasCurveFrom\n      ? true\n      : points[points.length - 1].hasCurveFrom,\n    hasCurveTo: points[0].hasCurveTo\n      ? true\n      : points[points.length - 1].hasCurveTo,\n    point: points[0].point,\n  };\n  newPoints.unshift(obj);\n  return newPoints;\n}\n\nexport function getRadiusAdjustment(\n  pointsArray: Array<Point>,\n  currentIndex: number,\n  nextIndex: number,\n  maxRadius: number\n): Coordinate {\n  if (!pointsArray[currentIndex] || !pointsArray[nextIndex]) {\n    return { x: 0, y: 0 };\n  }\n  const radius =\n    maxRadius > pointsArray[currentIndex].cornerRadius\n      ? pointsArray[currentIndex].cornerRadius\n      : maxRadius;\n  const x0 = pointsArray[currentIndex].point.x;\n  const y0 = pointsArray[currentIndex].point.y;\n  const x1 = pointsArray[nextIndex].point.x;\n  const y1 = pointsArray[nextIndex].point.y;\n  if (x1 === x0 && y1 === y0) {\n    return { x: 0, y: 0 };\n  } else if (x1 === x0) {\n    return {\n      x: 0,\n      y: y1 > y0 ? radius : -radius,\n    };\n  } else {\n    let angle: any = Math.atan2(y1 - y0, x1 - x0);\n    return {\n      x: Math.cos(angle) * radius,\n      y: Math.sin(angle) * radius,\n    };\n  }\n}\n","import { Point, Coordinate } from \"./types\";\nimport { getRadiusAdjustment } from \"./pathUtils\";\nexport default function generateSVGPath(\n  pointsArray: Array<Point>,\n  strokeWidthOffset: number,\n  isClosed: boolean,\n  viewBox: string\n) {\n  let generatedPath = \"\";\n  if (!pointsArray) {\n    return \"\";\n  }\n  // console.log(\"*** pointsArray\", JSON.stringify(pointsArray));\n  const dims: Array<any> =\n    viewBox && viewBox.split ? viewBox.split(\" \") : [0, 0, 100, 100];\n  const maxRadius = Math.min(dims[2] - dims[0], dims[3] - dims[1]) / 2;\n  strokeWidthOffset = strokeWidthOffset <= 1 ? 0 : strokeWidthOffset / 2;\n  let initialIndex = 0; // Maintains track of each shape start after combining\n  let d1: Coordinate = { x: 0, y: 0 }; // Distance with radius\n  for (let i = 0; i < pointsArray.length; i++) {\n    if (i === initialIndex) {\n      // Moving to initial points with \"M\"\n      let xy0 = pointsArray[i].point;\n      if (pointsArray[i].cornerRadius) {\n        d1 = getRadiusAdjustment(pointsArray, i, i + 1, maxRadius);\n      }\n      let x0 = (strokeWidthOffset + xy0.x + d1.x).toFixed(2);\n      let y0 = (strokeWidthOffset + xy0.y + d1.y).toFixed(2);\n      generatedPath += \"M\" + x0 + \" \" + y0 + \" \";\n      generatedPath += getNextPathPoint(\n        pointsArray,\n        i,\n        strokeWidthOffset,\n        initialIndex,\n        maxRadius\n      );\n    } else if (isFillerCondition(pointsArray[i])) {\n      initialIndex = i + 1;\n      if (i !== pointsArray.length - 1 && isFillerClosed(pointsArray[i])) {\n        generatedPath += \"Z \";\n      }\n    } else if (\n      i === pointsArray.length - 1 ||\n      (i !== pointsArray.length - 1 && isFillerCondition(pointsArray[i + 1]))\n    ) {\n      // adding additional point in the end of string\n      if (\n        isClosed &&\n        pointsArray[i].point.x !== pointsArray[initialIndex].point.x &&\n        pointsArray[i].point.y !== pointsArray[initialIndex].point.y\n      ) {\n        let pointTo = pointsArray[initialIndex].point;\n        let radiusPoint;\n        if (pointsArray[i].cornerRadius) {\n          d1 = getRadiusAdjustment(pointsArray, i, initialIndex, maxRadius);\n          const passedPointIndex = pointsArray[initialIndex + 1]\n            ? initialIndex + 1\n            : initialIndex;\n          let d2 = getRadiusAdjustment(\n            pointsArray,\n            initialIndex,\n            passedPointIndex,\n            maxRadius\n          );\n          let px0 = (strokeWidthOffset + pointTo.x + d2.x).toFixed(2);\n          let py0 = (strokeWidthOffset + pointTo.y + d2.y).toFixed(2);\n          let curveFromX0 = (strokeWidthOffset + pointTo.x - d1.x / 2).toFixed(\n            2\n          );\n          let curveFromY0 = (strokeWidthOffset + pointTo.y - d1.y / 2).toFixed(\n            2\n          );\n          let curveToX0 = (strokeWidthOffset + pointTo.x + d2.x / 2).toFixed(2);\n          let curveToY0 = (strokeWidthOffset + pointTo.y + d2.y / 2).toFixed(2);\n          radiusPoint =\n            \"C\" +\n            curveFromX0 +\n            \" \" +\n            curveFromY0 +\n            \" \" +\n            curveToX0 +\n            \" \" +\n            curveToY0 +\n            \" \" +\n            px0 +\n            \" \" +\n            py0 +\n            \" \";\n        }\n        let px = (strokeWidthOffset + pointTo.x - d1.x).toFixed(2);\n        let py = (strokeWidthOffset + pointTo.y - d1.y).toFixed(2);\n        let curveFromPoint = pointsArray[i].curveFrom;\n        let curveFromX = (strokeWidthOffset + curveFromPoint.x).toFixed(2);\n        let curveFromY = (strokeWidthOffset + curveFromPoint.y).toFixed(2);\n        let curveTo = pointsArray[initialIndex].curveTo;\n        let curveToX = (strokeWidthOffset + curveTo.x).toFixed(2);\n        let curveToY = (strokeWidthOffset + curveTo.y).toFixed(2);\n        if (\n          (pointsArray[initialIndex] && pointsArray[initialIndex].hasCurveTo) ||\n          pointsArray[i].hasCurveFrom\n        ) {\n          generatedPath +=\n            \"C\" +\n            curveFromX +\n            \" \" +\n            curveFromY +\n            \" \" +\n            curveToX +\n            \" \" +\n            curveToY +\n            \" \" +\n            px +\n            \" \" +\n            py +\n            \" \" +\n            (radiusPoint || \"\");\n        } else {\n          generatedPath += \"L\" + px + \" \" + py + \" \" + (radiusPoint || \"\");\n        }\n      }\n    } else {\n      generatedPath += getNextPathPoint(\n        pointsArray,\n        i,\n        strokeWidthOffset,\n        initialIndex,\n        maxRadius\n      );\n    }\n  }\n  if (isClosed) {\n    generatedPath += \"Z\";\n  }\n  // console.log(\"*** generatedPath\", generatedPath);\n  return generatedPath;\n}\n\nfunction getNextPathPoint(\n  pointsArray: Array<Point>,\n  i: number,\n  strokeWidthOffset: number,\n  initialIndex: number,\n  maxRadius: number\n) {\n  if (i + 1 >= pointsArray.length) {\n    return \"\";\n  }\n  let nextPoint = \"\";\n  let pointTo = pointsArray[i + 1].point;\n  let d1: Coordinate = { x: 0, y: 0 };\n  let radiusPoint;\n  if (pointsArray[i].cornerRadius) {\n    d1 = getRadiusAdjustment(pointsArray, i, i + 1, maxRadius);\n    const passedPointIndex = pointsArray[i + 2] ? i + 2 : initialIndex;\n    const d2 = getRadiusAdjustment(\n      pointsArray,\n      i + 1,\n      passedPointIndex,\n      maxRadius\n    );\n    let px0 = (strokeWidthOffset + pointTo.x + d2.x).toFixed(2);\n    let py0 = (strokeWidthOffset + pointTo.y + d2.y).toFixed(2);\n    let curveFromX0 = (strokeWidthOffset + pointTo.x - d1.x / 2).toFixed(2);\n    let curveFromY0 = (strokeWidthOffset + pointTo.y - d1.y / 2).toFixed(2);\n    let curveToX0 = (strokeWidthOffset + pointTo.x + d2.x / 2).toFixed(2);\n    let curveToY0 = (strokeWidthOffset + pointTo.y + d2.y / 2).toFixed(2);\n    radiusPoint =\n      \"C\" +\n      curveFromX0 +\n      \" \" +\n      curveFromY0 +\n      \" \" +\n      curveToX0 +\n      \" \" +\n      curveToY0 +\n      \" \" +\n      px0 +\n      \" \" +\n      py0 +\n      \" \";\n  }\n  let px = (strokeWidthOffset + pointTo.x - d1.x).toFixed(2);\n  let py = (strokeWidthOffset + pointTo.y - d1.y).toFixed(2);\n\n  let curveFromPoint = pointsArray[i].curveFrom;\n  let curveFromX = (strokeWidthOffset + curveFromPoint.x).toFixed(2);\n  let curveFromY = (strokeWidthOffset + curveFromPoint.y).toFixed(2);\n\n  let curveTo = pointsArray[i + 1].curveTo;\n  let curveToX = (strokeWidthOffset + curveTo.x).toFixed(2);\n  let curveToY = (strokeWidthOffset + curveTo.y).toFixed(2);\n  if (\n    (pointsArray[i + 1] && pointsArray[i + 1].hasCurveTo) ||\n    pointsArray[i].hasCurveFrom\n  ) {\n    nextPoint +=\n      \"C\" +\n      curveFromX +\n      \" \" +\n      curveFromY +\n      \" \" +\n      curveToX +\n      \" \" +\n      curveToY +\n      \" \" +\n      px +\n      \" \" +\n      py +\n      \" \" +\n      (radiusPoint || \"\");\n  } else {\n    nextPoint += \"L\" + px + \" \" + py + \" \" + (radiusPoint || \"\");\n  }\n  return nextPoint;\n}\n\nfunction isFillerCondition(point: any): boolean {\n  return (\n    (point.cornerRadius === 777 && point.curveMode === 777) ||\n    (point.cornerRadius === 776 && point.curveMode === 776)\n  );\n}\nfunction isFillerClosed(point: any): boolean {\n  return point.cornerRadius === 776 && point.curveMode === 776;\n}\n","import { isEmpty } from \"lodash\";\n// CAUTION: First read about SVG paths before making any changes in this file.\nexport default function getPointsArrayFromPath(\n  path: string,\n  strokeWidthOffset: number,\n  isClosed: boolean\n) {\n  strokeWidthOffset = strokeWidthOffset <= 1 ? 0 : strokeWidthOffset / 2;\n  let pointsArray: any = [];\n  let pathArray: any = path.split(\"M\"); // stores initial split path string\n  let pathArray2: any = []; // storing each point in this array\n  for (let i = 0; i < pathArray.length; i++) {\n    pathArray2[i] = [];\n    let tempPath = \"\";\n    if (!isEmpty(pathArray)) {\n      for (let j = 0; j < pathArray[i].length; j++) {\n        if (pathArray[i].charAt(j) === \"C\" || pathArray[i].charAt(j) === \"L\") {\n          pathArray2[i].push(tempPath.split(\" \"));\n          tempPath = pathArray[i].charAt(j);\n        } else {\n          tempPath += pathArray[i].charAt(j);\n        }\n      }\n    }\n    if (tempPath !== \"Z\" && tempPath !== \"z\") {\n      pathArray2[i].push(tempPath.split(\" \"));\n    }\n  }\n  for (let i = 1; i < pathArray2.length; i++) {\n    let tempPointsArray = [];\n    for (let j = 0; j < pathArray2[i].length; j++) {\n      if (\n        !isEmpty(pathArray2[i]) &&\n        pathArray2[i][j] &&\n        !isEmpty(pathArray2[i][j]) &&\n        pathArray2[i][j][0]\n      ) {\n        if (\n          pathArray2[i][j].length > 6 ||\n          (pathArray2[i][j].length > 2 && pathArray2[i][j][0].charAt(0) === \"L\")\n        ) {\n          let tempPoint = getPropsOnCondition(\n            pathArray2[i],\n            j,\n            strokeWidthOffset\n          );\n          let obj = createPointObject(\n            0,\n            0,\n            tempPoint.hasCurveFrom,\n            pathArray2[i][j].length > 6,\n            tempPoint.curveFromX,\n            tempPoint.curveFromY,\n            tempPoint.curveToX,\n            tempPoint.curveToY,\n            tempPoint.pointToX,\n            tempPoint.pointToY\n          );\n          if (isClosed && j === pathArray2[i].length - 1) {\n            tempPointsArray.unshift(obj);\n          } else {\n            tempPointsArray.push(obj);\n          }\n        } else {\n          if (i !== 1) {\n            // DOC: checking the previous shape for closed path and adding corresponding filler,\n            // DOC: 776 for closed and 777 for non-closed\n            let filler =\n              pathArray2[i - 1] &&\n              pathArray2[i - 1][pathArray2[i - 1].length - 1].length > 3 &&\n              (pathArray2[i - 1][pathArray2[i - 1].length - 1][\n                pathArray2[i - 1][pathArray2[i - 1].length - 1].length - 2\n              ] === \"Z\" ||\n                pathArray2[i - 1][pathArray2[i - 1].length - 1][\n                  pathArray2[i - 1][pathArray2[i - 1].length - 1].length - 2\n                ] === \"z\")\n                ? 776\n                : 777;\n            pointsArray.push(\n              createPointObject(filler, filler, true, true, 0, 0, 0, 0, 0, 0)\n            );\n          }\n          if (\n            !isClosed &&\n            pathArray2[i][j][0].charAt(0) !== \"C\" &&\n            pathArray2[i][j][0].charAt(0) !== \"L\"\n          ) {\n            let tempPoint = getPropsOnCondition(\n              pathArray2[i],\n              j,\n              strokeWidthOffset\n            );\n            let obj = createPointObject(\n              0,\n              0,\n              tempPoint.hasCurveFrom,\n              pathArray2[i][j].length > 6,\n              tempPoint.curveFromX,\n              tempPoint.curveFromY,\n              tempPoint.curveToX,\n              tempPoint.curveToY,\n              tempPoint.pointToX,\n              tempPoint.pointToY\n            );\n            // console.log(\"*** obj\", obj, isClosed);\n            tempPointsArray.unshift(obj);\n          }\n        }\n      }\n    }\n    pointsArray = pointsArray.concat(tempPointsArray);\n  }\n  return pointsArray;\n}\n\nfunction getPropsOnCondition(\n  pathSubArray: any,\n  j: number,\n  strokeWidthOffset: number\n) {\n  let tempPoint: any = {};\n  let nextIndex = j === pathSubArray.length - 1 ? 1 : j + 1;\n  let hasCurveFrom =\n    !isEmpty(pathSubArray) &&\n    pathSubArray[nextIndex] &&\n    !isEmpty(pathSubArray[nextIndex]) &&\n    pathSubArray[nextIndex][0] &&\n    pathSubArray[nextIndex][0].charAt(0) === \"C\";\n  // DOC: checking whether next point has curve and setting curveFrom point acc. to that only\n  if (\n    !isEmpty(pathSubArray) &&\n    pathSubArray[j] &&\n    !isEmpty(pathSubArray[j]) &&\n    pathSubArray[j][0] &&\n    !isEmpty(pathSubArray[j][0])\n  ) {\n    if (pathSubArray[j][0].charAt(0) === \"C\") {\n      tempPoint.hasCurveFrom = hasCurveFrom;\n      tempPoint.curveFromX =\n        hasCurveFrom &&\n        pathSubArray[nextIndex] &&\n        !isEmpty(pathSubArray[nextIndex])\n          ? pathSubArray[nextIndex][0].substring(1) - strokeWidthOffset\n          : pathSubArray[j][0].substring(1) - strokeWidthOffset;\n      tempPoint.curveFromY =\n        hasCurveFrom &&\n        pathSubArray[nextIndex] &&\n        !isEmpty(pathSubArray[nextIndex])\n          ? pathSubArray[nextIndex][1] - strokeWidthOffset\n          : pathSubArray[j][1] - strokeWidthOffset;\n      tempPoint.curveToX = pathSubArray[j][2] - strokeWidthOffset;\n      tempPoint.curveToY = pathSubArray[j][3] - strokeWidthOffset;\n      tempPoint.pointToX = pathSubArray[j][4] - strokeWidthOffset;\n      tempPoint.pointToY = pathSubArray[j][5] - strokeWidthOffset;\n    } else if (pathSubArray[j][0].charAt(0) === \"L\") {\n      tempPoint.hasCurveFrom = hasCurveFrom;\n      tempPoint.curveFromX =\n        hasCurveFrom &&\n        pathSubArray[nextIndex] &&\n        !isEmpty(pathSubArray[nextIndex])\n          ? pathSubArray[nextIndex][0].substring(1) - strokeWidthOffset\n          : pathSubArray[j][0].substring(1) - strokeWidthOffset;\n      tempPoint.curveFromY =\n        hasCurveFrom &&\n        pathSubArray[nextIndex] &&\n        !isEmpty(pathSubArray[nextIndex])\n          ? pathSubArray[nextIndex][1] - strokeWidthOffset\n          : pathSubArray[j][1] - strokeWidthOffset;\n\n      tempPoint.curveToX = pathSubArray[j][0].substring(1) - strokeWidthOffset;\n      tempPoint.curveToY = pathSubArray[j][1] - strokeWidthOffset;\n\n      tempPoint.pointToX = pathSubArray[j][0].substring(1) - strokeWidthOffset;\n      tempPoint.pointToY = pathSubArray[j][1] - strokeWidthOffset;\n    } else {\n      tempPoint.hasCurveFrom = true;\n      tempPoint.curveFromX =\n        pathSubArray[nextIndex] && !isEmpty(pathSubArray[nextIndex])\n          ? pathSubArray[nextIndex][0].substring(1) - strokeWidthOffset\n          : 0;\n      tempPoint.curveFromY =\n        pathSubArray[nextIndex] && !isEmpty(pathSubArray[nextIndex])\n          ? pathSubArray[nextIndex][1] - strokeWidthOffset\n          : 0;\n      tempPoint.curveToX = pathSubArray[j][0] - strokeWidthOffset;\n      tempPoint.curveToY = pathSubArray[j][1] - strokeWidthOffset;\n      tempPoint.pointToX = pathSubArray[j][0] - strokeWidthOffset;\n      tempPoint.pointToY = pathSubArray[j][1] - strokeWidthOffset;\n    }\n  }\n  return tempPoint;\n}\n\nfunction createPointObject(\n  cornerRadius: number,\n  curveMode: number,\n  hasCurveFrom: boolean,\n  hasCurveTo: boolean,\n  curveFromX: number,\n  curveFromY: number,\n  curveToX: number,\n  curveToY: number,\n  px: number,\n  py: number\n) {\n  return {\n    cornerRadius: cornerRadius,\n    curveMode: curveMode,\n    hasCurveTo: hasCurveTo,\n    hasCurveFrom: hasCurveFrom,\n    curveFrom: {\n      x: curveFromX,\n      y: curveFromY,\n    },\n    curveTo: {\n      x: curveToX,\n      y: curveToY,\n    },\n    point: {\n      x: px,\n      y: py,\n    },\n  };\n}\n"],"names":["document","canvasDOMElement","createElement","style","position","setAttribute","top","left","paper","setup","settings","convertPaperPointToBxObj","finalPaperPath","closed","points","convertPaperToBx","exportJSON","finalPathPaper","finalPaperPoints","finalPathPaperJson","JSON","parse","segments","concat","getPaperPoints","children","length","k","filler","push","createPointObject","j","point","curveFrom","curveTo","pointObject","constructor","Array","x","y","cornerRadius","curveMode","hasCurveFrom","hasCurveTo","curveFromX","curveFromY","curveToX","curveToY","px","py","getPaperPathFromPoints","pointsInPath","isClosed","getSegmentFromPoints","paperPath","Path","pointIndex","handleInPoint","Point","handleOutPoint","handleIn","undefined","handleOut","segment","Segment","radius","Radius","getRadiusAdjustedPoints","pointsArray","viewBox","dims","split","maxRadius","Math","min","newPoints","forEach","oldPoint","i","d","additionalPoint","getRadiusAdjustment","Number","nextIndex","nextToNextIndex","d2","getManipulatedPath","layer","rotation","rotate","isFlippedHorizontal","isFlippedVertical","scale","applyBooleanOpsOnPaths","layers","frame","scalingFactor","firstValidIndex","isVisible","zeroPointInPath","convertPointsArrayBool","index","booleanOperation","unite","subtract","intersect","exclude","error","console","log","referenceFrame","pointsApplied","getValidPoints","tempPoint","convertPointBool","tempP1","slice","width","height","parseFloat","toFixed","convertPointsArray","maskingDisplacement","convertPoint","obj","_class","unshift","currentIndex","x0","y0","x1","y1","angle","atan2","cos","sin","generateSVGPath","strokeWidthOffset","generatedPath","initialIndex","d1","xy0","getNextPathPoint","isFillerCondition","isFillerClosed","pointTo","radiusPoint","passedPointIndex","px0","py0","curveFromX0","curveFromY0","curveToX0","curveToY0","curveFromPoint","nextPoint","getPointsArrayFromPath","path","pathArray","pathArray2","tempPath","isEmpty","charAt","tempPointsArray","getPropsOnCondition","pointToX","pointToY","pathSubArray","substring"],"mappings":"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"}