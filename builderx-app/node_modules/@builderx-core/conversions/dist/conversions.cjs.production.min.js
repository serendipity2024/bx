"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,r=(e=require("paper"))&&"object"==typeof e&&"default"in e?e.default:e,t=require("lodash");if("undefined"!=typeof document){var o=document.createElement("canvas");o.style.position="absolute",o.setAttribute("height","1000px"),o.setAttribute("width","1000px"),o.style.top="0px",o.style.left="0px",r.setup(o),r.settings.insertItems=!1}else r.setup([640,480]);function n(e){var r=[],t=JSON.parse(e);if("CompoundPath"!==t[0]&&t[1]&&t[1].segments)r=r.concat(i(t[1].segments));else if(t[1]&&t[1].children&&t[1].children.length>0)for(var o=0;o<t[1].children.length;o++){r=r.concat(i(t[1].children[o][1].segments));var n=t[1].children[o][1].closed?776:777;r.push(u(n,n,!1,!1,0,0,0,0,0,0))}return r}function i(e){for(var r=[],t=0;t<e.length;t++){var o={},n={},i={},s={};e[t][0]&&e[t][0].constructor===Array?(o.x=e[t][0][0],o.y=e[t][0][1],i.x=e[t][1][0]+e[t][0][0],i.y=e[t][1][1]+e[t][0][1],n.x=e[t][2][0]+e[t][0][0],n.y=e[t][2][1]+e[t][0][1],s=u(0,0,!0,!0,n.x,n.y,i.x,i.y,o.x,o.y)):(o.x=e[t][0],o.y=e[t][1],s=u(0,0,!1,!1,o.x,o.y,o.x,o.y,o.x,o.y)),r.push(s)}return r}function u(e,r,t,o,n,i,u,s,a,c){return{cornerRadius:e,curveMode:r,hasCurveTo:o,hasCurveFrom:t,curveFrom:{x:n,y:i},curveTo:{x:u,y:s},point:{x:a,y:c}}}if("undefined"!=typeof document){var s=document.createElement("canvas");s.style.position="absolute",s.setAttribute("height","1000px"),s.setAttribute("width","1000px"),s.style.top="0px",s.style.left="0px",r.setup(s),r.settings.insertItems=!1}else r.setup([640,480]);function a(e){for(var t=[],o=0;o<e.length;o++){var n=new r.Point(e[o].curveTo.x-e[o].point.x,e[o].curveTo.y-e[o].point.y),i=new r.Point(e[o].curveFrom.x-e[o].point.x,e[o].curveFrom.y-e[o].point.y),u=e[o].hasCurveFrom?n:void 0,s=e[o].hasCurveTo?i:void 0,a=new r.Point(e[o].point.x,e[o].point.y),c=new r.Segment({point:a,handleIn:u,handleOut:s,radius:e[o].Radius});t.push(c)}return t}function c(){return(c=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}function p(e,r){var t=r&&r.split?r.split(" "):[0,0,100,100],o=Math.min(t[2]-t[0],t[3]-t[1])/2,n=[];return e.forEach((function(r,t){if(r.cornerRadius){var i,u={x:0,y:0};0===t&&(u=y(e,t,t+1,o),i={x:Number(r.point.x+u.x),y:Number(r.point.y+u.y)},n.push(c({},r,{cornerRadius:0,point:i})));var s=t===e.length-1?0:t+1,a=t===e.length-1?1:e[t+2]?t+2:0;u=y(e,t,s,o),i={x:Number(e[s].point.x-u.x),y:Number(e[s].point.y-u.y)},n.push(c({},r,{cornerRadius:0,hasCurveFrom:!0,curveFrom:i,curveTo:i,point:i}));var p=y(e,s,a,o);n.push({curveMode:1,hasCurveFrom:!0,hasCurveTo:!0,cornerRadius:0,curveFrom:{x:e[s].point.x+p.x,y:e[s].point.y+p.y},curveTo:{x:e[s].point.x,y:e[s].point.y},point:{x:e[s].point.x+p.x,y:e[s].point.y+p.y}})}else n.push(r)})),n}if("undefined"!=typeof document){var v=document.createElement("canvas");v.style.position="absolute",v.setAttribute("height","1000px"),v.setAttribute("width","1000px"),v.style.top="0px",v.style.left="0px",r.setup(v),r.settings.insertItems=!1}else r.setup([640,480]);function h(e,r){return e.rotation&&r.rotate(-e.rotation),(e.isFlippedHorizontal||e.isFlippedVertical)&&r.scale(e.isFlippedHorizontal?-1:1,e.isFlippedVertical?-1:1),r.closed=e.isClosed,r}function l(e,r,t,o){var n=[];if(e&&e.length>0)for(var i=e[0].point!==e[e.length-1].point?e:function(e){var r=e.slice(1,e.length-1);return r.unshift({_class:"curvePoint",cornerRadius:e[0].cornerRadius,curveMode:e[0].curveMode,curveTo:e[0].hasCurveTo?e[0].curveTo:e[e.length-1].curveTo,curveFrom:e[0].hasCurveFrom?e[0].curveFrom:e[e.length-1].curveFrom,hasCurveFrom:!!e[0].hasCurveFrom||e[e.length-1].hasCurveFrom,hasCurveTo:!!e[0].hasCurveTo||e[e.length-1].hasCurveTo,point:e[0].point}),r}(e),u=0;u<i.length;u++){var s={};s.cornerRadius=i[u].cornerRadius,s.curveMode=i[u].curveMode,s.hasCurveTo=i[u].hasCurveTo,s.hasCurveFrom=i[u].hasCurveFrom,s.curveFrom=x(i[u].curveFrom,r,0,o),s.curveTo=x(i[u].curveTo,r,0,o),s.point=x(i[u].point,r,0,o),n.push(s)}return n}function x(e,r,t,o){var n=e.split(","),i=n[0].slice(1),u=n[1].slice(0,-1);return i=(i*r.width+r.x)*o,u=(u*r.height+r.y)*o,{x:parseFloat(i.toFixed(4)),y:parseFloat(u.toFixed(4))}}function d(e,r,t,o,n){var i=e.split(","),u=i[0].slice(1),s=i[1].slice(0,-1);return u=(u*r.width+o.x)*r.width*n/t.width,s=(s*r.height+o.y)*r.height*n/t.height,{x:parseFloat(u.toFixed(4)),y:parseFloat(s.toFixed(4))}}function y(e,r,t,o){if(!e[r]||!e[t])return{x:0,y:0};var n=o>e[r].cornerRadius?e[r].cornerRadius:o,i=e[r].point.x,u=e[r].point.y,s=e[t].point.x,a=e[t].point.y;if(s===i&&a===u)return{x:0,y:0};if(s===i)return{x:0,y:a>u?n:-n};var c=Math.atan2(a-u,s-i);return{x:Math.cos(c)*n,y:Math.sin(c)*n}}function m(e,r,t,o,n){if(r+1>=e.length)return"";var i,u=e[r+1].point,s={x:0,y:0};if(e[r].cornerRadius){s=y(e,r,r+1,n);var a=y(e,r+1,e[r+2]?r+2:o,n),c=(t+u.x+a.x).toFixed(2),p=(t+u.y+a.y).toFixed(2);i="C"+(t+u.x-s.x/2).toFixed(2)+" "+(t+u.y-s.y/2).toFixed(2)+" "+(t+u.x+a.x/2).toFixed(2)+" "+(t+u.y+a.y/2).toFixed(2)+" "+c+" "+p+" "}var v=(t+u.x-s.x).toFixed(2),h=(t+u.y-s.y).toFixed(2),l=e[r].curveFrom,x=(t+l.x).toFixed(2),d=(t+l.y).toFixed(2),m=e[r+1].curveTo,f=(t+m.x).toFixed(2),F=(t+m.y).toFixed(2);return e[r+1]&&e[r+1].hasCurveTo||e[r].hasCurveFrom?"C"+x+" "+d+" "+f+" "+F+" "+v+" "+h+" "+(i||""):"L"+v+" "+h+" "+(i||"")}function f(e){return 777===e.cornerRadius&&777===e.curveMode||776===e.cornerRadius&&776===e.curveMode}function F(e,r,o){var n={},i=r===e.length-1?1:r+1,u=!t.isEmpty(e)&&e[i]&&!t.isEmpty(e[i])&&e[i][0]&&"C"===e[i][0].charAt(0);return t.isEmpty(e)||!e[r]||t.isEmpty(e[r])||!e[r][0]||t.isEmpty(e[r][0])||("C"===e[r][0].charAt(0)?(n.hasCurveFrom=u,n.curveFromX=u&&e[i]&&!t.isEmpty(e[i])?e[i][0].substring(1)-o:e[r][0].substring(1)-o,n.curveFromY=u&&e[i]&&!t.isEmpty(e[i])?e[i][1]-o:e[r][1]-o,n.curveToX=e[r][2]-o,n.curveToY=e[r][3]-o,n.pointToX=e[r][4]-o,n.pointToY=e[r][5]-o):"L"===e[r][0].charAt(0)?(n.hasCurveFrom=u,n.curveFromX=u&&e[i]&&!t.isEmpty(e[i])?e[i][0].substring(1)-o:e[r][0].substring(1)-o,n.curveFromY=u&&e[i]&&!t.isEmpty(e[i])?e[i][1]-o:e[r][1]-o,n.curveToX=e[r][0].substring(1)-o,n.curveToY=e[r][1]-o,n.pointToX=e[r][0].substring(1)-o,n.pointToY=e[r][1]-o):(n.hasCurveFrom=!0,n.curveFromX=e[i]&&!t.isEmpty(e[i])?e[i][0].substring(1)-o:0,n.curveFromY=e[i]&&!t.isEmpty(e[i])?e[i][1]-o:0,n.curveToX=e[r][0]-o,n.curveToY=e[r][1]-o,n.pointToX=e[r][0]-o,n.pointToY=e[r][1]-o)),n}function g(e,r,t,o,n,i,u,s,a,c){return{cornerRadius:e,curveMode:r,hasCurveTo:o,hasCurveFrom:t,curveFrom:{x:n,y:i},curveTo:{x:u,y:s},point:{x:a,y:c}}}exports.applyBooleanOpsOnPaths=function(e,t,o,n){if(!e)return[];try{for(var i=0;i<e.length-1&&(!e[i]||!e[i].isVisible);){if(i===e.length-1&&e[i]&&!e[i].isVisible)return i=-1,[];i++}var u=a(p(l(e[i].points,e[i].frame,0,o),n)),s=new r.Path(u);if(s=h(e[i],s),i<e.length-1)for(var c=i+1;c<e.length;c++)if(e[c].isVisible){var v=p(l(e[c].points,e[c].frame,0,o),n),x=new r.Path(a(v));switch(x=h(e[c],x),e[c].booleanOperation){case 0:s=s.unite(x);break;case 1:s=s.subtract(x);break;case 2:s=s.intersect(x);break;default:s=s.exclude(x)}}return s.exportJSON()}catch(e){return console.log("JSON read error in Boolean Operations",e),[]}},exports.convertPaperPointToBxObj=function(e){return{closed:e.closed,points:n(e.exportJSON())}},exports.convertPaperToBx=n,exports.convertPointsArray=function(e,r,t,o,n){var i=[];if(e&&e.length>0)for(var u=0;u<e.length;u++){var s={};s.cornerRadius=e[u].cornerRadius,s.curveMode=e[u].curveMode,s.hasCurveTo=e[u].hasCurveTo,s.hasCurveFrom=e[u].hasCurveFrom,s.curveFrom=d(e[u].curveFrom,r,t,o,n),s.curveTo=d(e[u].curveTo,r,t,o,n),s.point=d(e[u].point,r,t,o,n),i.push(s)}return i},exports.generateSVGPath=function(e,r,t,o){var n="";if(!e)return"";var i=o&&o.split?o.split(" "):[0,0,100,100],u=Math.min(i[2]-i[0],i[3]-i[1])/2;r=r<=1?0:r/2;for(var s,a=0,c={x:0,y:0},p=0;p<e.length;p++)if(p===a){var v=e[p].point;e[p].cornerRadius&&(c=y(e,p,p+1,u)),n+="M"+(r+v.x+c.x).toFixed(2)+" "+(r+v.y+c.y).toFixed(2)+" ",n+=m(e,p,r,a,u)}else if(f(e[p]))a=p+1,p!==e.length-1&&776===(s=e[p]).cornerRadius&&776===s.curveMode&&(n+="Z ");else if(p===e.length-1||p!==e.length-1&&f(e[p+1])){if(t&&e[p].point.x!==e[a].point.x&&e[p].point.y!==e[a].point.y){var h=e[a].point,l=void 0;if(e[p].cornerRadius){c=y(e,p,a,u);var x=y(e,a,e[a+1]?a+1:a,u),d=(r+h.x+x.x).toFixed(2),F=(r+h.y+x.y).toFixed(2);l="C"+(r+h.x-c.x/2).toFixed(2)+" "+(r+h.y-c.y/2).toFixed(2)+" "+(r+h.x+x.x/2).toFixed(2)+" "+(r+h.y+x.y/2).toFixed(2)+" "+d+" "+F+" "}var g=(r+h.x-c.x).toFixed(2),T=(r+h.y-c.y).toFixed(2),C=e[p].curveFrom,b=(r+C.x).toFixed(2),P=(r+C.y).toFixed(2),R=e[a].curveTo,A=(r+R.x).toFixed(2),M=(r+R.y).toFixed(2);n+=e[a]&&e[a].hasCurveTo||e[p].hasCurveFrom?"C"+b+" "+P+" "+A+" "+M+" "+g+" "+T+" "+(l||""):"L"+g+" "+T+" "+(l||"")}}else n+=m(e,p,r,a,u);return t&&(n+="Z"),n},exports.getPaperPathFromPoints=function(e,t){var o=a(e),n=new r.Path(o);return n.closed=t,n},exports.getPointsArrayFromPath=function(e,r,o){r=r<=1?0:r/2;for(var n=[],i=e.split("M"),u=[],s=0;s<i.length;s++){u[s]=[];var a="";if(!t.isEmpty(i))for(var c=0;c<i[s].length;c++)"C"===i[s].charAt(c)||"L"===i[s].charAt(c)?(u[s].push(a.split(" ")),a=i[s].charAt(c)):a+=i[s].charAt(c);"Z"!==a&&"z"!==a&&u[s].push(a.split(" "))}for(var p=1;p<u.length;p++){for(var v=[],h=0;h<u[p].length;h++)if(!t.isEmpty(u[p])&&u[p][h]&&!t.isEmpty(u[p][h])&&u[p][h][0])if(u[p][h].length>6||u[p][h].length>2&&"L"===u[p][h][0].charAt(0)){var l=F(u[p],h,r),x=g(0,0,l.hasCurveFrom,u[p][h].length>6,l.curveFromX,l.curveFromY,l.curveToX,l.curveToY,l.pointToX,l.pointToY);o&&h===u[p].length-1?v.unshift(x):v.push(x)}else{if(1!==p){var d=u[p-1]&&u[p-1][u[p-1].length-1].length>3&&("Z"===u[p-1][u[p-1].length-1][u[p-1][u[p-1].length-1].length-2]||"z"===u[p-1][u[p-1].length-1][u[p-1][u[p-1].length-1].length-2])?776:777;n.push(g(d,d,!0,!0,0,0,0,0,0,0))}if(!o&&"C"!==u[p][h][0].charAt(0)&&"L"!==u[p][h][0].charAt(0)){var y=F(u[p],h,r),m=g(0,0,y.hasCurveFrom,u[p][h].length>6,y.curveFromX,y.curveFromY,y.curveToX,y.curveToY,y.pointToX,y.pointToY);v.unshift(m)}}n=n.concat(v)}return n},exports.getRadiusAdjustedPoints=p,exports.getSegmentFromPoints=a;
//# sourceMappingURL=conversions.cjs.production.min.js.map
