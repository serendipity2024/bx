export declare const packageJSON: {
    private: boolean;
    main: string;
    scripts: {
        start: string;
        android: string;
        ios: string;
        web: string;
        eject: string;
    };
    dependencies: {
        '@builderx/utils': string;
        expo: string;
        'expo-font': string;
        lodash: string;
        react: string;
        'react-dom': string;
        'react-native': string;
        'react-native-gesture-handler': string;
        'react-native-reanimated': string;
        'react-native-screens': string;
        'react-native-svg': string;
        'react-native-web': string;
        'react-native-web-maps': string;
        'react-navigation': string;
        'react-navigation-drawer': string;
        'react-navigation-stack': string;
    };
    devDependencies: {
        'babel-plugin-module-resolver': string;
        'babel-preset-expo': string;
    };
};
export declare const appJSON: {
    expo: {
        name: string;
        slug: string;
        privacy: string;
        sdkVersion: string;
        platforms: string[];
        version: string;
        orientation: string;
        updates: {
            fallbackToCacheTimeout: number;
        };
        ios: {
            supportsTablet: boolean;
        };
    };
};
export declare const babelConfigJSContent = "module.exports = function (api) {\n  api.cache(true);\n  return {\n    presets: [\"babel-preset-expo\"],\n    plugins: [\n      [\n        \"module-resolver\",\n        {\n          root: [\"./src\"],\n          alias: {\n            \"react-native-maps\": \"react-native-web-maps\",\n          },\n        },\n      ],\n    ],\n  };\n};\n";
export declare const indexHTML = "<!DOCTYPE html>\n<html lang=\"%LANG_ISO_CODE%\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <!-- \n      This viewport works for phones with notches.\n      It's optimized for gestures by disabling global zoom.\n     -->\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1.00001, viewport-fit=cover\"\n    />\n    <title>%WEB_TITLE%</title>\n    <script src=\"https://maps.googleapis.com/maps/api/js?key=<YOUR_GOOGLE_API_KEY>\"></script>\n    <style>\n      /**\n       * Extend the react-native-web reset:\n       * https://github.com/necolas/react-native-web/blob/master/packages/react-native-web/src/exports/StyleSheet/initialRules.js\n       */\n      html,\n      body,\n      #root {\n        width: 100%;\n        /* To smooth any scrolling behavior */\n        -webkit-overflow-scrolling: touch;\n        margin: 0px;\n        padding: 0px;\n        /* Allows content to fill the viewport and go beyond the bottom */\n        min-height: 100%;\n      }\n      #root {\n        flex-shrink: 0;\n        flex-basis: auto;\n        flex-grow: 1;\n        display: flex;\n        flex: 1;\n      }\n\n      html {\n        scroll-behavior: smooth;\n        /* Prevent text size change on orientation change https://gist.github.com/tfausak/2222823#file-ios-8-web-app-html-L138 */\n        -webkit-text-size-adjust: 100%;\n        height: 100%;\n      }\n\n      body {\n        display: flex;\n        /* Allows you to scroll below the viewport; default value is visible */\n        overflow-y: auto;\n        overscroll-behavior-y: none;\n        text-rendering: optimizeLegibility;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        -ms-overflow-style: scrollbar;\n      }\n      /* Enable for apps that support dark-theme */\n      /*@media (prefers-color-scheme: dark) {\n        body {\n          background-color: black;\n        }\n      }*/\n    </style>\n  </head>\n\n  <body>\n    <!-- \n      A generic no script element with a reload button and a message.\n      Feel free to customize this however you'd like.\n    -->\n    <noscript>\n      <form\n        action=\"\"\n        style=\"\n          background-color: #fff;\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          z-index: 9999;\n        \"\n      >\n        <div\n          style=\"\n            font-size: 18px;\n            font-family: Helvetica, sans-serif;\n            line-height: 24px;\n            margin: 10%;\n            width: 80%;\n          \"\n        >\n          <p>Oh no! It looks like JavaScript is not enabled in your browser.</p>\n          <p style=\"margin: 20px 0;\">\n            <button\n              type=\"submit\"\n              style=\"\n                background-color: #4630eb;\n                border-radius: 100px;\n                border: none;\n                box-shadow: none;\n                color: #fff;\n                cursor: pointer;\n                font-weight: bold;\n                line-height: 20px;\n                padding: 6px 16px;\n              \"\n            >\n              Reload\n            </button>\n          </p>\n        </div>\n      </form>\n    </noscript>\n    <!-- The root element for your Expo app. -->\n    <div id=\"root\"></div>\n  </body>\n</html>\n\n";
export declare const flowConfigContent = "[ignore]\n; We fork some components by platform\n.*/*[.]android.js\n\n; Ignore templates for 'react-native init'\n<PROJECT_ROOT>/node_modules/react-native/local-cli/templates/.*\n\n; Ignore RN jest\n<PROJECT_ROOT>/node_modules/react-native/jest/.*\n\n; Ignore RNTester\n<PROJECT_ROOT>/node_modules/react-native/RNTester/.*\n\n; Ignore the website subdir\n<PROJECT_ROOT>/node_modules/react-native/website/.*\n\n; Ignore the Dangerfile\n<PROJECT_ROOT>/node_modules/react-native/danger/dangerfile.js\n\n; Ignore Fbemitter\n<PROJECT_ROOT>/node_modules/fbemitter/.*\n\n; Ignore \"BUCK\" generated dirs\n<PROJECT_ROOT>/node_modules/react-native/.buckd/\n\n; Ignore unexpected extra \"@providesModule\"\n.*/node_modules/.*/node_modules/fbjs/.*\n\n; Ignore polyfills\n<PROJECT_ROOT>/node_modules/react-native/Libraries/polyfills/.*\n\n; Ignore various node_modules\n<PROJECT_ROOT>/node_modules/react-native-gesture-handler/.*\n<PROJECT_ROOT>/node_modules/expo/.*\n<PROJECT_ROOT>/node_modules/react-navigation/.*\n<PROJECT_ROOT>/node_modules/xdl/.*\n<PROJECT_ROOT>/node_modules/reqwest/.*\n<PROJECT_ROOT>/node_modules/metro-bundler/.*\n\n[include]\n\n[libs]\nnode_modules/react-native/Libraries/react-native/react-native-interface.js\nnode_modules/react-native/flow/\nnode_modules/expo/flow/\n\n[options]\nemoji=true\n\nmodule.system=haste\n\nmodule.file_ext=.js\nmodule.file_ext=.jsx\nmodule.file_ext=.json\nmodule.file_ext=.ios.js\n\nmunge_underscores=true\n\nmodule.name_mapper='^[./a-zA-Z0-9$_-]+.(bmp|gif|jpg|jpeg|png|psd|svg|webp|m4v|mov|mp4|mpeg|mpg|webm|aac|aiff|caf|m4a|mp3|wav|html|pdf)$' -> 'RelativeImageStub'\n\nsuppress_type=$FlowIssue\nsuppress_type=$FlowFixMe\nsuppress_type=$FlowFixMeProps\nsuppress_type=$FlowFixMeState\nsuppress_type=$FixMe\n\nsuppress_comment=\\(.\\|\n\\)*\\$FlowFixMe\\($\\|[^(]\\|(\\(>=0\\.\\(5[0-6]\\|[1-4][0-9]\\|[0-9]\\).[0-9]\\)? *\\(site=[a-z,_]*react_native_oss[a-z,_]*\\)?)\\)\nsuppress_comment=\\(.\\|\n\\)*\\$FlowIssue\\((\\(>=0\\.\\(5[0-6]\\|[1-4][0-9]\\|[0-9]\\).[0-9]\\)? *\\(site=[a-z,_]*react_native_oss[a-z,_]*\\)?)\\)?:? #[0-9]+\nsuppress_comment=\\(.\\|\n\\)*\\$FlowFixedInNextDeploy\nsuppress_comment=\\(.\\|\n\\)*\\$FlowExpectedError\n\nunsafe.enable_getters_and_setters=true\n\n[version]\n^0.56.0\n";
export declare const watchmanConfigContent = "{}\n";
export declare const gitIgnoreContent = "# See https://help.github.com/ignore-files/ for more about ignoring files.\n\n# expo\n.expo/\n\n# dependencies\n/node_modules\n\n# misc\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local\n\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n";
export declare const componentReadme = "This component was created with [BuilderX](https://builderx.io/).\n\n## BuilderX uses third party libraries for some of the react-native components such as\n\n```\n@builderx/utils@0.1.6\nlodash\nreact-navigation@4.0.10\nreact-native-svg\nreact-native-maps\n```\n\nYou can add these packages by running `yarn add [packageName]` or `npm install [packageName]`.\n\n## Please add the extracted component folder in your project and import the component folder.\n\nE.g. import Component from `[folder path]`.\n\n**Note: You might need to load custom fonts that have been used in the component. Font files are available in the `assets/fonts` folder. You can add this code to load these fonts**\n\n### For Expo project\n\n```\nimport { Font } from \"expo\";\n\nasync componentDidMount(){\n  await Font.loadAsync({\n    <font-name>:require(<relative-path-to-font-file>)\n  })\n}\n```\n\n### For React-Native project\n\n1. Add rnpm to package.json providing the path to the font files.\n```\n\"rnpm\": {\n  \"assets\": [\n    \"./src/assets/fonts/\"\n  ]\n}\n```\n2. Run react-native link.\n";
export declare const projectReadme = "This project was created with [BuilderX](https://builderx.io/).\n\n## BuilderX uses third party libraries for some of the react-native components such as\n\n```\n@builderx/utils@0.1.6\nlodash\nreact-navigation@4.0.10\nreact-native-svg\nreact-native-maps\n```\n\nThese packages are included as dependencies in package.json file\n\n## Steps to run project\n\nIn the project directory, you can run:\n\n### `yarn` or `npm install`\n\nThis will add the dependencies required to run the project.\n\n### `yarn start` or `npm start`\n\nThis will start the project.\n\n**Note: BuilderX generates Expo project at the moment, if you want to add custom fonts in your create-react-native-app project please refer these steps**\n\n1. Add Fonts to an \"assets/fonts\" folder in the root of your project.\n2. Add rnpm to package.json providing the path to the font files:\n\n```\n\"rnpm\": {\n  \"assets\": [\n    \"./assets/fonts/\"\n  ]\n}\n```\n\n3. Run react-native link\n\n##### This should add your custom fonts in the react native project.\n\n";
