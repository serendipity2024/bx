import * as React from "react";
import { Domain, File, Layer } from "../lib";
import DomainLayer from "../lib/models/Base/Domain/Layer";
// import LayerFactory from "../lib/services/LayerFactory";
// import conditionalResolver from "../lib/services/conditionalResolver";
// import ConditionalExpression from "../lib/models/Common/ConditionalExpression";
import DomainFile from "../lib/models/Base/Domain/File";
// const fileJSON: any = {
//   path: "/src/screens/Untitled.js",
//   content: "",
//   isDirty: true,
//   props: {
//     style: {
//       left: 50,
//       top: 100,
//       width: 375,
//       height: 812,
//       position: "absolute"
//     }
//   },
//   layer: {
//     type: "root",
//     import: {
//       layerName: "View",
//       packageName: "native",
//       isDefaultImport: false,
//       asName: ""
//     },
//     template: {
//       centerVertical: false,
//       centerHorizontal: false
//     },
//     styleName: "root",
//     props: { style: { backgroundColor: "white", flex: 1 } },
//     children: [],
//     locked: false
//   }
// };

// const layerJSON = {
//   type: "conditionalExpression",
//   test: {
//     type: "binaryExpression",
//     operator: ">",
//     left: 3,
//     right: 2
//   },
//   consequent: {
//     type: "view",
//     children: [],
//     import: {
//       layerName: "View",
//       packageName: "native",
//       isDefaultImport: false,
//       asName: ""
//     },
//     template: {
//       centerVertical: false,
//       centerHorizontal: false
//     },
//     styleName: "view",
//     props: {
//       style: {
//         top: {
//           type: "expression",
//           expression: "this.props.top"
//         },
//         left: {
//           type: "conditionalExpression",
//           test: {
//             type: "binaryExpression",
//             operator: ">",
//             left: 3,
//             right: 2
//           },
//           consequent: 150,
//           alternate: 200
//         },
//         width: 150,
//         height: 150,
//         position: "absolute",
//         backgroundColor: "blue"
//       }
//     }
//   },
//   alternate: {
//     type: "view",
//     children: [],
//     import: {
//       layerName: "View",
//       packageName: "native",
//       isDefaultImport: false,
//       asName: ""
//     },
//     template: {
//       centerVertical: false,
//       centerHorizontal: false
//     },
//     styleName: "view",
//     props: {
//       style: {
//         top: 150,
//         left: {
//           type: "conditionalExpression",
//           test: {
//             type: "binaryExpression",
//             operator: ">",
//             left: 3,
//             right: 2
//           },
//           consequent: 150,
//           alternate: 200
//         },
//         width: 150,
//         height: 150,
//         position: "absolute",
//         backgroundColor: "red"
//       }
//     }
//   }
// };

// // const viewDomainLayer = DomainLayerFactory.createDomainLayer(layerJSON);

// // console.log(layerJSON, "domain compiled 33");
// // // if (viewDomainLayer instanceof DomainLayer) {
// // //   viewDomainLayer.props.sets
// // // }

// // const viewDomainLayerForCompiled = DomainLayerFactory.createDomainLayer(
// //   layerJSON,
// //   true
// // );

// // console.log(viewDomainLayerForCompiled, "domain compiled 222");

const layerJSON = {
  type: "view",
  children: [],
  import: {
    layerName: "View",
    packageName: "native",
    isDefaultImport: false,
    asName: ""
  },
  template: {
    centerVertical: false,
    centerHorizontal: false
  },
  styleName: "view1",
  props: {
    style: {
      top: 0,
      left: 0,
      height: 100,
      width: 100,
      position: "absolute",
      backgroundColor: "#121212"
    }
  }
};

class App extends React.Component {
  layer: Layer;
  // domain = new Domain();
  // file: File;
  // symbolFile: File;
  // compiledFile: CompiledFile;
  constructor(props: any) {
    super(props);
    // layer = new Layer(layerJSON);
  }
  //     const layerJso = {
  //       type: "conditionalExpression",
  //       test: {
  //         type: "binaryExpression",
  //         operator: ">",
  //         left: 3,
  //         right: 2
  //       },
  //       consequent: {
  //         type: "view",
  //         children: [],
  //         import: {
  //           layerName: "View",
  //           packageName: "native",
  //           isDefaultImport: false,
  //           asName: ""
  //         },
  //         template: {
  //           centerVertical: false,
  //           centerHorizontal: false
  //         },
  //         styleName: "view",
  //         props: {
  //           style: {
  //             top: {
  //               type: "expression",
  //               expression: "this.props.top"
  //             },
  //             left: {
  //               type: "conditionalExpression",
  //               test: {
  //                 type: "binaryExpression",
  //                 operator: ">",
  //                 left: 3,
  //                 right: 2
  //               },
  //               consequent: 150,
  //               alternate: 200
  //             },
  //             width: 150,
  //             height: 150,
  //             position: "absolute",
  //             backgroundColor: "blue"
  //           }
  //         }
  //       },
  //       alternate: {
  //         type: "view",
  //         children: [],
  //         import: {
  //           layerName: "View",
  //           packageName: "native",
  //           isDefaultImport: false,
  //           asName: ""
  //         },
  //         template: {
  //           centerVertical: false,
  //           centerHorizontal: false
  //         },
  //         styleName: "view",
  //         props: {
  //           style: {
  //             top: 150,
  //             left: {
  //               type: "conditionalExpression",
  //               test: {
  //                 type: "binaryExpression",
  //                 operator: ">",
  //                 left: 3,
  //                 right: 2
  //               },
  //               consequent: 150,
  //               alternate: 200
  //             },
  //             width: 150,
  //             height: 150,
  //             position: "absolute",
  //             backgroundColor: "red"
  //           }
  //         }
  //       }
  //     };

  //     let branchLayer = LayerFactory.createDomainLayer(
  //       layerJso
  //     ) as ConditionalExpression;

  //     // forEach(this.layerJSON.children, (child: any, jsonIndex: number) => {
  //     //   this.session.commandManager.executeAndSkip(
  //     //     new AddLayer(this.session, this.domainLayer, child, jsonIndex)
  //     //   );
  //     // });

  //     // console.log(this.domain, "domain compiled ***** ___");

  //     this.addFile();
  //     // console.log(this.file, "090909");

  //     // this.domain.getSymbolFileFromSymbolInstance({
  //     //   import: { packageName: "/src/screens/Untitled1.js" }
  //     // } as any);
  //   }

  //   addLayer(parent: any, layerJson: any, key?: string) {
  //     let domainLayer = LayerFactory.createDomainLayer(layerJson);

  //     if (key) {
  //       parent[key] = domainLayer;
  //     } else {
  //       parent.appendChild(domainLayer);
  //     }

  //     // console.log(layerJSON, "hello text layer");
  //     if (layerJson.type !== "literal") {
  //       if (layerJson.type === "conditionalExpression") {
  //         // layerJSON.children.forEach((child: any) => {
  //         //
  //         // console.log(domainLayer, child, "090909");
  //         this.addLayer(domainLayer, layerJson.consequent, "consequent");
  //         this.addLayer(domainLayer, layerJson.alternate, "alternate");
  //         // domainLayer.appendChild(child);
  //       } else {
  //         layerJson.children.forEach((child: any) => {
  //           //
  //           // console.log(domainLayer, child, "090909");
  //           this.addLayer(domainLayer, child);
  //           // textLayer.appendChild(child);
  //         });
  //       }
  //     }
  //   }

  //   addFile() {
  //     this.file = this.domain.addFile(fileJSON);

  //     // window["domain"] = this.domain;

  //     var rootLayerJSON = {
  //       type: "view",
  //       children: [],
  //       import: {
  //         layerName: "View",
  //         packageName: "native",
  //         isDefaultImport: false,
  //         asName: ""
  //       },
  //       template: {
  //         centerVertical: false,
  //         centerHorizontal: false
  //       },
  //       styleName: "view",
  //       props: {
  //         style: {
  //           top: 0,
  //           left: 0,
  //           width: 150,
  //           height: 150,
  //           position: "absolute",
  //           backgroundColor: "blue"
  //         }
  //       }
  //     };
  //     // if (this.file.layer instanceof DomainLayer) {
  //     this.file.layer = LayerFactory.createDomainLayer(rootLayerJSON);
  //     // this.file.layer.appendChild(textDomainLayer);
  //     // }

  //     // console.log(this.file, "hello domain");

  //     const layerJson = {
  //       type: "text",
  //       // children: [{ type: "literal", value: "Text added" }],
  //       children: [
  //         {
  //           type: "conditionalExpression",
  //           test: {
  //             type: "binaryExpression",
  //             operator: ">",
  //             left: 3,
  //             right: 2
  //           },
  //           consequent: {
  //             type: "literal",
  //             value: "consequent"
  //           },
  //           alternate: {
  //             type: "literal",
  //             value: "alternate"
  //           }
  //         }
  //       ],
  //       import: {
  //         layerName: "Text",
  //         packageName: "native",
  //         isDefaultImport: false,
  //         asName: ""
  //       },
  //       template: {
  //         centerVertical: false,
  //         centerHorizontal: false
  //       },
  //       styleName: "text",
  //       props: {
  //         style: {
  //           top: 150,
  //           left: 10,
  //           width: 150,
  //           height: 150,
  //           position: "absolute",
  //           fontSize: 16,
  //           color: "red"
  //         }
  //       }
  //     };

  //     this.addLayer(this.file.layer, layerJson);
  //     // return new layerClass.Domain(layerJSON, ...constructorArgs);

  //     // let domainForCompiledFile = new DomainFile({ ...this.file.toJS() });
  //     // let domainCompiledFile = new CompiledFile(domainForCompiledFile);
  //     // DomainLayerFactory.createDomainLayer({
  //     //   ...this.file.toJS()
  //     // });
  //     // const compiledFile = this.domainCompiled.addFile(domainForCompiledFile);

  //     // const dims = compiledFile.layer.computeYogaNode();
  //     // const fileDims = compiledFile.yogaNode.getComputedLayout();
  //     // const dimension: Dimension = {
  //     //   x: fileDims.left,
  //     //   y: fileDims.top,
  //     //   width: fileDims.width,
  //     //   height: fileDims.height,
  //     //   rotation: 0
  //     // };

  //     // console.log(layerJSON, "hello compiled");

  //     // const domainForCompiledLayer = DomainLayerFactory.createDomainLayer({
  //     //   layerJSON,
  //     //   children: []
  //     // });

  //   }

  public render() {
    // console.log(this.file);

    // conditionalResolver(
    //   layerJSON,
    //   undefined,
    //   "",
    //   true, // resolveWithTest
    //   (obj: any, parent: any, property: string) => {
    //     parent[property] = LayerFactory.createDomainLayer(obj);
    //     console.log(parent[property], "******____");
    //   }
    // );

    // console.log(layerJSON, "*****");

    return (
      <div>
        <p>Use this sample project from test.</p>
      </div>
    );
  }
}

export default App;
