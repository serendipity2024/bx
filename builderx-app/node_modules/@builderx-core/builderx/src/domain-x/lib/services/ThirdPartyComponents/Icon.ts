import { ComponentDefinition } from "common-interfaces";
import { IconOptions } from "bx-constants";
const iconSchema: ComponentDefinition = {
  version: "0.0.1",
  template: {
    type: "thirdParty",
    children: [],
    import: {
      layerName: "Icon",
      packageName: "@builderx/icons",
      isDefaultImport: true,
      asName: ""
    },
    locked: false,
    template: {
      centerVertical: false,
      centerHorizontal: false
    },
    props: {
      style: {
        top: 150,
        left: 150,
        position: "absolute",
        color: "rgba(128,128,128,1)",
        fontSize: 40
      },
      type: "MaterialCommunityIcons",
      name: "home"
    }
  },
  thumbnail: "",
  name: "Icon",
  controlsProperty: [
    {
      type: "AlignmentEditor",
      title: "Alignment Editor",
      value: {},
      showForMultiple: true
    },
    {
      type: "OrientationEditor",
      title: "Orientation Editor",
      value: {},
      showForMultiple: true,
      additionalOptions: {
        hideSize: true
      }
    },
    {
      type: "ResizingTypeEditor",
      title: "ResizingType Editor",
      value: {},
      additionalOptions: {
        hideSize: true
      }
    },
    {
      type: "IconEditor",
      title: "Icon Editor",
      value: {}
    },
    {
      type: "group",
      title: "Layout",
      value: {},
      properties: [
        {
          type: "FlexboxEditor",
          title: "Flexbox Editor",
          value: {}
        },
        {
          type: "MarginPaddingEditor",
          title: "MarginPadding Editor",
          value: {}
        }
        /*{
          type: "LoopEditor",
          title: "Loop Editor",
          value: {}
       }*/
      ]
    },
    {
      type: "group",
      title: "Styling",
      value: {},
      properties: [
        {
          propertyName: "color",
          type: "color",
          title: "Color",
          value: {
            defaultValue: "rgba(128,128,128,1)"
          },
          category: "style"
        },
        {
          propertyName: "fontSize",
          type: "range",
          title: "Size",
          value: {
            defaultValue: 40,
            min: 0,
            max: 200
          },
          category: "style"
        },
        {
          propertyName: "opacity",
          type: "range",
          title: "Opacity",
          value: {
            defaultValue: 1,
            min: 0,
            max: 1
          },
          category: "style"
        },
        {
          propertyName: "overflow",
          title: "Overflow",
          type: "enum",
          value: {
            options: [
              "hidden",
              "auto",
              "visible",
              "scroll",
              "inherit",
              "initial",
              "overlay"
            ],
            defaultValue: "hidden"
          }
        }
      ]
    }
  ],
  componentRenderDefinition: `class ThirdPartyFlatList extends React.Component {    constructor() {      super();
      const ds = new ListView.DataSource({ rowHasChanged: (r1, r2) => r1 !== r2 });      this.state = {
        dataSource: ds.cloneWithRows([\"row 1\", \"row 2\"]) };    }    render() {      const props = {
          ...this.props,        style:{ ...this.props.style},          dataSource:this.state.dataSource,
                    renderRow:rowData => <Text>{rowData}</Text>      };      return (
                      <ListView          {...props}        />      );    }  }`
};

export default iconSchema;
