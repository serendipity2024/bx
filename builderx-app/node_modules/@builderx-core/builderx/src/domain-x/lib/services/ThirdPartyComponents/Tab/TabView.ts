import { ComponentDefinition } from "common-interfaces";

const tabViewSchema: ComponentDefinition = {
  version: "0.0.1",
  template: {
    type: "thirdParty",
    import: {
      layerName: "TabView",
      packageName: "@builderx/tab-view",
      isDefaultImport: false,
      asName: ""
    },
    locked: false,
    template: {
      centerVertical: false,
      centerHorizontal: false
    },
    props: {
      activeTabIndex: 0,
      style: {
        position: "absolute",
        top: 50,
        left: 50
      },
      tabBarStyle: {
        backgroundColor: "#3F51B5"
      },
      indicatorStyle: {
        backgroundColor: "#ffffff",
        elevation: 3,
        shadowColor: "#000",
        shadowOffset: {
          width: 0,
          height: 2
        },
        shadowOpacity: 0.2,
        shadowRadius: 1.2
      }
    },
    children: [
      {
        type: "thirdParty",
        import: {
          layerName: "TabContent",
          packageName: "@builderx/tab-view",
          isDefaultImport: false,
          asName: ""
        },
        locked: false,
        template: {
          centerVertical: false,
          centerHorizontal: false
        },
        props: {
          title: "Tab1",
          style: {
            flex: 1
          }
        },
        children: [
          {
            type: "view",
            children: [],
            import: {
              layerName: "View",
              packageName: "native",
              isDefaultImport: false,
              asName: ""
            },
            locked: false,
            template: {
              centerVertical: false,
              centerHorizontal: false
            },
            props: {
              style: {
                flex: 1,
                backgroundColor: "#eeeeee"
              }
            }
          }
        ]
      },
      {
        type: "thirdParty",
        import: {
          layerName: "TabContent",
          packageName: "@builderx/tab-view",
          isDefaultImport: false,
          asName: ""
        },
        locked: false,
        template: {
          centerVertical: false,
          centerHorizontal: false
        },
        props: {
          title: "Tab2",
          style: {
            flex: 1
          }
        },
        children: [
          {
            type: "view",
            children: [],
            import: {
              layerName: "View",
              packageName: "native",
              isDefaultImport: false,
              asName: ""
            },
            locked: false,
            template: {
              centerVertical: false,
              centerHorizontal: false
            },
            props: {
              style: {
                flex: 1,
                backgroundColor: "#eeeeee"
              }
            }
          }
        ]
      }
    ]
  },
  thumbnail: "",
  name: "TabView",
  controlsProperty: [
    {
      type: "AlignmentEditor",
      title: "Alignment Editor",
      value: {},
      showForMultiple: true
    },
    {
      type: "OrientationEditor",
      title: "Orientation Editor",
      value: {},
      showForMultiple: true
    },
    {
      type: "ResizingTypeEditor",
      title: "ResizingType Editor",
      value: {}
    },
    {
      type: "group",
      title: "Tab View Editor",
      value: {},
      properties: [
        {
          type: "TabViewEditor",
          title: "Tab View Editor",
          value: {}
        }
      ]
    },
    {
      type: "group",
      title: "Tab Style",
      value: {},
      properties: [
        {
          type: "TabStyleEditor",
          title: "Tab Style",
          value: {}
        }
      ]
    }
  ],
  componentRenderDefinition: `class ThirdPartyFlatList extends React.Component {    constructor() {      super();
      const ds = new ListView.DataSource({ rowHasChanged: (r1, r2) => r1 !== r2 });
      this.state = { dataSource: ds.cloneWithRows([\"row 1\", \"row 2\"]) };    }    render() {
        const props = {        ...this.props,        style:{ ...this.props.style},
        dataSource:this.state.dataSource,          renderRow:rowData => <Text>{rowData}</Text>      };
        return (        <ListView          {...props}        />      );    }  }`
};

export default tabViewSchema;
