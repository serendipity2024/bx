import { ComponentDefinition } from "common-interfaces";

const mapViewSchema: ComponentDefinition = {
  version: "0.0.1",
  template: {
    type: "thirdParty",
    import: {
      layerName: "MapView",
      packageName: "expo",
      isDefaultImport: false,
      asName: ""
    },
    locked: false,
    template: {
      centerVertical: false,
      centerHorizontal: false
    },
    props: {
      style: {
        position: "absolute",
        top: 50,
        left: 50
      },
      provider: "MapView.PROVIDER_GOOGLE",
      initialRegion: {
        latitude: 37.78825,
        longitude: -122.4324,
        latitudeDelta: 0.0922,
        longitudeDelta: 0.0421
      },
      customMapStyle: "Standard"
    },
    children: []
  },
  thumbnail: "",
  name: "MapView",
  controlsProperty: [
    {
      type: "AlignmentEditor",
      title: "Alignment Editor",
      value: {},
      showForMultiple: true
    },
    {
      type: "OrientationEditor",
      title: "Orientation Editor",
      value: {},
      showForMultiple: true
    },
    {
      type: "ResizingTypeEditor",
      title: "ResizingType Editor",
      value: {}
    },
    {
      type: "group",
      title: "Styling",
      value: {},
      properties: [
        {
          propertyName: "opacity",
          type: "range",
          title: "Opacity",
          value: {
            defaultValue: 1,
            min: 0,
            max: 1
          },
          category: "style"
        },
        {
          propertyName: "customMapStyle",
          title: "Map View Style",
          type: "enum",
          value: {
            options: [
              "Standard",
              "Silver",
              "Retro",
              "Dark",
              "Night",
              "Aubergine"
            ],
            defaultValue: "Standard"
          },
          category: "props"
        }
      ]
    }
  ],
  componentRenderDefinition: `class ThirdPartyFlatList extends React.Component {
      constructor() {      super();      const ds = new ListView.DataSource({ rowHasChanged: (r1, r2) => r1 !== r2 });
      this.state = { dataSource: ds.cloneWithRows([\"row 1\", \"row 2\"]) };    }    render() {      const props = {
        this.props,        style:{ ...this.props.style},          dataSource:this.state.dataSource,
        renderRow:rowData => <Text>{rowData}</Text>      };      return (        <ListView          {...props}        />
          );    }  }`
};

export default mapViewSchema;
