import * as React from "react";

import { isNil } from "lodash";
import {
  PropertyHeader,
  WrapperDiv,
  Checkbox,
  CheckboxTick,
  FormRow,
  FormCol,
  BorderWidth,
  TopBorderWidth,
  LeftBorderWidth,
  RightBorderWidth,
  BottomBorderWidth,
  BorderWidthLock,
  Icon,
  Slider,
  InputGroupInput,
  Text
} from "components-x";
import { ColorPicker } from "components-x";

class BorderWidthBox extends React.Component<any, any> {
  render() {
    return (
      <>
        <PropertyHeader uiSize="auto" open>
          <WrapperDiv style={{ display: "flex" }}>
            <Checkbox style={{ flex: 0, paddingRight: 7 }}>
              <CheckboxTick
                noMargin
                checked={!this.props.disabled}
                onClick={this.props.handleBorderWidthToggle}
              />
            </Checkbox>
            <Text uiSize="m">Border</Text>
          </WrapperDiv>
        </PropertyHeader>
        <FormRow marginTop={0}>
          <FormCol name="bx-border-colorPicker" first={true} uiSize={2}>
            {/* <ColorPicker
              value={
                this.props.currentValue
                  ? this.props.currentValue.color
                  : "#000000"
              }
              disabled={this.props.disabled}
              onChangeColor={(e: any) => {
                this.props.onChangeEnd(e, "onChange", "color");
              }}
            /> */}
          </FormCol>
          <FormCol uiSize={10}>
            {/* <TooltipText>Border Style</TooltipText> */}
          </FormCol>
        </FormRow>
        <FormRow marginTop={0}>
          <FormCol first={true} uiSize={2}>
            <BorderWidth>
              <TopBorderWidth
                selected={
                  this.props.disabled ? false : this.props.borderWidth.top
                }
              />
              <LeftBorderWidth
                selected={
                  this.props.disabled ? false : this.props.borderWidth.left
                }
              />
              <RightBorderWidth
                selected={
                  this.props.disabled ? false : this.props.borderWidth.right
                }
              />
              <BottomBorderWidth
                selected={
                  this.props.disabled ? false : this.props.borderWidth.bottom
                }
              />
              <BorderWidthLock>
                <Icon
                  name={this.props.borderWidth.lock ? "lock" : "unlock"}
                  size={16}
                />
              </BorderWidthLock>
            </BorderWidth>
          </FormCol>
          <FormCol first={true} uiSize={7}>
            <Slider
              name="bx-borderWidth-slider"
              disabled={this.props.disabled}
              min={0}
              max={100}
              value={
                this.props.currentValue && !isNil(this.props.currentValue.width)
                  ? this.props.currentValue.width
                  : 0
              }
            />
          </FormCol>
          <FormCol uiSize={2}>
            <InputGroupInput
              undo={this.props.session.commandManager.undo}
              redo={this.props.session.commandManager.redo}
              isDisabled={this.props.disabled}
              type="number"
              value={
                this.props.currentValue && !isNil(this.props.currentValue.width)
                  ? this.props.currentValue.width
                  : 0
              }
            />
          </FormCol>
        </FormRow>
      </>
    );
  }
}

export default BorderWidthBox;
