import styled from "styled-components";
import Size from "./types/SizePropType";
import createComponent from "../createComponent";
import * as classNames from "classnames";
import * as React from "react";
interface PropType extends Size {
  bordered?: boolean;
  contentRight?: boolean;
  flexWrap?: boolean;
}

const uiSizes = {
  l: "100%",
  m: "75%",
  s: "50%",
  xs: "25%",
  xl: "auto"
};
export default createComponent(
  `
  .iconBoxGroupX {
    display: flex;

      width: 100%;
      flex: 1;
      flex-wrap:no-wrap;
      border:none;
      border-radius: 2px;
      justify-content:flex-start;
   }
   .iconBoxGroupX.flexWrap {
    flex-wrap:wrap;


   }
   .iconBoxGroupX.contentRight {
    justify-content:flex-end;


   }
  `,
  (props: PropType & React.HTMLProps<HTMLDivElement>) => {
    const {
      bordered,
      contentRight,
      flexWrap,
      uiSize,
      ...remainingProps
    } = props;

    const className = classNames({
      iconBoxGroupX: true,
      contentRight: contentRight ? true : false,
      flexWrap: flexWrap ? true : false
    });

    return (
      <div
        {...remainingProps}
        style={{
          ...remainingProps.style,
          height: uiSize ? uiSizes[uiSize] : uiSizes["m"]
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      />
    );
  }
);
// export default styled.div<PropType & React.HTMLProps<HTMLDivElement>>`
//   display: flex;
//   flex-wrap: ${(props: any) => (props.flexWrap ? "wrap" : "nowrap")};
//   width: 100%;
//   flex: 1;
//   height: ${(props: any) =>
//     props.uiSize ? uiSize[props.uiSize] : uiSize["m"]};

//   border: ${(props: PropType) => {
//     return "none";
//     /*if (props.bordered) return "1px solid" + COLORS[900];
//     else return "none";*/
//   }};
//   justify-content: ${(props: PropType) =>
//     props.contentRight ? "flex-end" : "flex-start"};
//   border-radius: 2px;
// `;
