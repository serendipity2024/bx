import Spinner from "./icons/spinner";
import COLORS from "./constants/COLORS";
import * as React from "react";
import Size from "./types/SizePropType";
import * as classNames from "classnames";
import createComponent from "../createComponent";
import { number } from "prop-types";
interface PropType extends Size {
  uiBackground?: number;
  uiBackgroundDark?: number;
  uiBackgroundLight?: number;
  marginLeft?: number;
  marginRight?: number;
  marginBottom?: number;
  marginTop?: number;
}
const uiSizes = {
  l: "50px",
  m: "35px",
  s: "20px",
  xs: "15px"
};
const SpinnerSvg = createComponent(
  `
  div.spinnerX {
    position: relative;
    display: inline-block;
  }

  div.spinnerX div {
    width: 5%;
    height: 16%;
    background: ${COLORS[200]};
    position: absolute;
    left: 49%;
    top: 43%;
    opacity: 0;
    -webkit-border-radius: 50px;
    -webkit-box-shadow: 0 0 3px rgba(0,0,0,0.2);
    -webkit-animation: fade 1s linear infinite;
  }

  @-webkit-keyframes fade {
    from {opacity: 1;}
    to {opacity: 0.25;}
  }

  div.spinnerX div.bar1 {
    -webkit-transform:rotate(0deg) translate(0, -130%);
    -webkit-animation-delay: 0s;
  }

  div.spinnerX div.bar2 {
    -webkit-transform:rotate(30deg) translate(0, -130%);
    -webkit-animation-delay: -0.9167s;
  }

  div.spinnerX div.bar3 {
    -webkit-transform:rotate(60deg) translate(0, -130%);
    -webkit-animation-delay: -0.833s;
  }
  div.spinnerX div.bar4 {
    -webkit-transform:rotate(90deg) translate(0, -130%);
    -webkit-animation-delay: -0.7497s;
  }
  div.spinnerX div.bar5 {
    -webkit-transform:rotate(120deg) translate(0, -130%);
    -webkit-animation-delay: -0.667s;
  }
  div.spinnerX div.bar6 {
    -webkit-transform:rotate(150deg) translate(0, -130%);
    -webkit-animation-delay: -0.5837s;
  }
  div.spinnerX div.bar7 {
    -webkit-transform:rotate(180deg) translate(0, -130%);
    -webkit-animation-delay: -0.5s;
  }
  div.spinnerX div.bar8 {
    -webkit-transform:rotate(210deg) translate(0, -130%);
    -webkit-animation-delay: -0.4167s;
  }
  div.spinnerX div.bar9 {
    -webkit-transform:rotate(240deg) translate(0, -130%);
    -webkit-animation-delay: -0.333s;
  }
  div.spinnerX div.bar10 {
    -webkit-transform:rotate(270deg) translate(0, -130%);
    -webkit-animation-delay: -0.2497s;
  }
  div.spinnerX div.bar11 {
    -webkit-transform:rotate(300deg) translate(0, -130%);
    -webkit-animation-delay: -0.167s;
  }
  div.spinnerX div.bar12 {
    -webkit-transform:rotate(330deg) translate(0, -130%);
    -webkit-animation-delay: -0.0833s;
  }

  `,
  (props: PropType & React.HTMLProps<HTMLDivElement>) => {
    const {
      marginLeft,
      marginRight,
      marginTop,
      marginBottom,
      uiSize,
      color,
      ...remainingProps
    } = props;

    const height = uiSize === "l" ? 100 : 22;
    const width = uiSize === "l" ? 100 : 22;

    const className = classNames({
      spinnerX: true
    });
    return (
      <div
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
        style={{
          height: height,
          width: width,
          marginLeft: marginLeft ? marginLeft : 0,
          marginRight: marginRight ? marginRight : 0,
          marginTop: marginTop ? marginTop : 0,
          marginBottom: marginBottom ? marginBottom : 0
        }}
        {...remainingProps}
      >
        <div
          className="bar1"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
        <div
          className="bar2"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
        <div
          className="bar3"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
        <div
          className="bar4"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
        <div
          className="bar5"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
        <div
          className="bar6"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
        <div
          className="bar7"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
        <div
          className="bar8"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
        <div
          className="bar9"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
        <div
          className="bar10"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
        <div
          className="bar11"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
        <div
          className="bar12"
          style={{
            background: color ? color : COLORS[500]
          }}
        />
      </div>
    );
  }
);
// const SpinnerSvg = styled.svg`
//   animation: iosIntro 0.6s;
//   width: ${(props: PropType) =>
//     props.uiSize ? uiSize[props.uiSize] : uiSize["xs"]};
//   height: ${(props: PropType) =>
//     props.uiSize ? uiSize[props.uiSize] : uiSize["xs"]};
//   z-index: 9999999;
//   fill: ${(props: PropType) =>
//     props.uiBackground ? COLORS[props.uiBackground] : COLORS[200]};

//   path:nth-of-type(1) {
//     animation: pulse 1s infinite linear;
//   }
//   path:nth-of-type(2) {
//     animation: pulse 1s -0.083s infinite linear;
//   }
//   path:nth-of-type(3) {
//     animation: pulse 1s -0.166s infinite linear;
//   }
//   path:nth-of-type(4) {
//     animation: pulse 1s -0.249s infinite linear;
//   }
//   path:nth-of-type(5) {
//     animation: pulse 1s -0.332s infinite linear;
//   }
//   path:nth-of-type(6) {
//     animation: pulse 1s -0.415s infinite linear;
//   }
//   path:nth-of-type(7) {
//     animation: pulse 1s -0.498s infinite linear;
//   }
//   path:nth-of-type(8) {
//     animation: pulse 1s -0.581s infinite linear;
//   }
//   path:nth-of-type(9) {
//     animation: pulse 1s -0.664s infinite linear;
//   }
//   path:nth-of-type(10) {
//     animation: pulse 1s -0.747s infinite linear;
//   }
//   path:nth-of-type(11) {
//     animation: pulse 1s -0.83s infinite linear;
//   }
//   path:nth-of-type(12) {
//     animation: pulse 1s -0.913s infinite linear;
//   }

//   @keyframes pulse {
//     50% {
//       fill: ${(props: PropType) =>
//         props.uiBackgroundDark ? COLORS[props.uiBackgroundDark] : COLORS[500]};
//     }
//     to {
//       fill: ${(props: PropType) =>
//         props.uiBackgroundLight
//           ? COLORS[props.uiBackgroundLight]
//           : COLORS[400]};
//     }
//   }

//   @keyframes iosIntro {
//     from {
//       transform: scale(0);
//       opacity: 0;
//     }
//     to {
//       transform: scale(1);
//       opacity: 1;
//     }
//   }
// `;

export default class extends React.Component<any, any> {
  render() {
    // const { caption, icon, children, ...otherProps } = this.props;
    return (
      <SpinnerSvg {...this.props}>
        <Spinner />
      </SpinnerSvg>
    );
  }
}
