import styled from "styled-components";
// import COLORS from "./constants/COLORS";
import Color from "./types/ColorPropType";
import createComponent from "../createComponent";
import * as classNames from "classnames";
import * as React from "react";
import { get } from "lodash";
interface PropType extends Color {
  disabled?: boolean;
  thumbTintColor?: string;
  style?: any;
  onTintColor?: string;
}

export default styled.input<PropType & React.HTMLProps<HTMLInputElement>>`
  cursor: ${(props: PropType) =>
    props.disabled !== undefined && props.disabled ? "not-allowed" : "pointer"};
  -webkit-appearance: none;
  font-size: 5px;
  position: relative;
  display: inline-block;
  width: 9em;
  height: 4.6em;
  line-height: 4.6em;
  border-radius: 2.3em;
  margin: 0;
  padding: 0;
  transform: ${(props: PropType) =>
    props.style.transform
      ? `rotate(${props.style.transform[0].rotate})`
      : `rotate(0deg);`};
  box-shadow: ${(props: any) =>
    props.disabled
      ? "inset 0 0 0 0.2em #bbb;"
      : props.tintColor
      ? "inset 0 0 0 0.2em " + props.tintColor
      : "inset 0 0 0 0.2em #ddd;"};
  outline: 1px solid transparent !important;
  border: none;
  background: transparent;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  :checked {
    content: "";
    box-shadow: ${(props: any) =>
      props.disabled
        ? "inset 0 0 0 2.62857em #ddd !important;"
        : props.onTintColor
        ? "inset 0 0 0 2.62857em " + props.onTintColor + "!important;"
        : "inset 0 0 0 2.62857em #00c169 !important;"};
    padding-left: 4.4em;
  }
  :before {
    content: "";
    display: inline-block;
    height: 4.2em;
    width: 4.2em;
    margin: 0.2em 0 0 0.2em;
    background-color: ${(props: any) =>
      props.disabled
        ? "#ccc"
        : props.thumbTintColor
        ? props.thumbTintColor
        : "#fff"};
    border-radius: 2.1em;
    box-shadow: 0 0.2em 0.4em 0 rgba(0, 0, 0, 0.2),
      0 0 0.1em 0.1em rgba(0, 0, 0, 0.1);
  }
`;
