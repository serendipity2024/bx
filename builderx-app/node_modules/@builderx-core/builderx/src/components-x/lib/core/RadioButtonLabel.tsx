import styled from "styled-components";
import COLORS from "./constants/COLORS";
import Color from "./types/ColorPropType";
import Size from "./types/SizePropType";
import createComponent from "../createComponent";
import * as classNames from "classnames";
import * as React from "react";

interface PropType extends Size, Color {
  paddingTop?: number;
  uiSpace?: string;
}
const uiSizes = {
  xl: 16,
  l: 14,
  m: 13,
  s: 12,
  xs: 11
};
export default createComponent(
  `
  .radioButtonLabelX {

  margin-left:5px;
  letter-spacing: -0.27px;
  font-family: Roboto, -apple-system, BlinkMacSystemFont, sans-serif;
  font-weight: 400;
  align-self: center;
    text-overflow: ellipsis;
    white-spacing: no-wrap;

   }

  `,
  (props: PropType & React.HTMLProps<HTMLDivElement>) => {
    const { uiSize, uiColor, paddingTop, uiSpace, ...remainingProps } = props;

    const className = classNames({
      radioButtonLabelX: true
    });

    return (
      <div
        {...remainingProps}
        style={{
          ...remainingProps.style,
          fontSize: uiSize ? uiSizes[uiSize] + "px" : uiSizes["s"] + "px",
          color: uiColor ? COLORS[uiColor] : COLORS[300],
          lineHeight: `calc(uiSize?uiSizes[uiSize]:uiSizes["s"])` + "px" + "3px"
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      />
    );
  }
);
