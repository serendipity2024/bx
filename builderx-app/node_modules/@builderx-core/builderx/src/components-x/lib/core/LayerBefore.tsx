import * as React from "react";
import * as classNames from "classnames";
import { secondary } from "./constants/COLORS";
import Background from "./types/BackgroundPropType";
import createComponent from "../createComponent";

interface PropType extends Background {
  open?: boolean;
  selected?: boolean;
  hover?: boolean;
  dragHoverInside?: boolean;
  dragHoverBefore?: boolean;
  dragHoverAfter?: boolean;
  isGroup?: boolean;
  level?: number;
}

export default createComponent(
  `
    .layerBeforeX {
      height: 2px !important;
    }

`,
  (props: PropType & React.HTMLProps<HTMLDivElement>) => {
    const {
      uiBackground,
      open,
      selected,
      hover,
      dragHoverInside,
      dragHoverBefore,
      dragHoverAfter,
      level,
      isGroup,
      ...remainingProps
    } = props;

    const className = classNames({
      layerBeforeX: true,
      open: open ? true : false,
      selected: selected ? true : false,
      hover: hover ? true : false,
      dragHoverInside: dragHoverInside ? true : false,
      dragHoverBefore: dragHoverBefore ? true : false,
      dragHoverAfter: dragHoverAfter ? true : false
    });

    return (
      <div
        {...remainingProps}
        style={{
          ...remainingProps.style,
          borderBottom: dragHoverBefore ? `2px solid ${secondary[600]}` : "",
          marginRight: 2,
          marginLeft: 10 + (level ? level * 17 : 0)
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      >
        <div
          style={{
            position: "relative",
            width: 10,
            height: 10,
            marginLeft: -10,
            top: -4,
            background: "transparent",
            border: dragHoverBefore ? `2px solid ${secondary[600]}` : undefined,
            zIndex: 10,
            borderRadius: 10
          }}
        />
      </div>
    );
  }
);
