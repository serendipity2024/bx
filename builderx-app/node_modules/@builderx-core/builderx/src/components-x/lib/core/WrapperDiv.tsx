import * as React from "react";
// import styled from "styled-components";
import COLORS from "./constants/COLORS";
import Background from "./types/BackgroundPropType";
import createComponent from "../createComponent";
import classNames from "classnames";

interface PropType extends Background {
  disabled?: boolean;
  hidden?: boolean;
}

export default createComponent(
  `
    .wrapperDiv {
      opacity: 1;
      background:transparent;
      display:default;
    }
    .wrapperDiv.disabled {
      opacity: 0.5;
      pointer-events: none;
      cursor: not-allowed;
    }
    .wrapperDiv.hidden {
      display: none;
    }
  `,
  (props: PropType & React.HTMLProps<HTMLDivElement>) => {
    const { disabled, hidden, uiBackground, style, ...remainingProps } = props;

    const className = classNames({
      wrapperDiv: true,
      disabled: disabled ? true : false,
      hidden: hidden ? true : false
    });

    return (
      <div
        {...remainingProps}
        style={{
          ...style,
          backgroundColor: uiBackground ? COLORS[uiBackground] : "transparent"
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      />
    );
  }
);
