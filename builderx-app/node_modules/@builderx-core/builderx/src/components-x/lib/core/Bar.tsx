import styled from "styled-components";
import COLORS from "./constants/COLORS";
import Background from "./types/BackgroundPropType";
import Size from "./types/SizePropType";
import * as classNames from "classnames";
import createComponent from "../createComponent";
import * as React from "react";

interface PropType extends Background, Size {
  padder?: boolean;
  dragable?: boolean;
}

const uiSizes = {
  l: 40,
  m: 35,
  s: 30,
  xs: 25,
  xxs: 15
};

// const padding = 5;

export default createComponent(
  `
  .barX {
    user-select: none;
    -webkit-app-region: no-drag;
  }
  .barX.padder {
    padding: 0 5px 0 8px
  }
  .barX.dragable {
    -webkit-app-region: drag
  }
  `,
  (props: PropType & React.HTMLProps<HTMLDivElement>) => {
    const { uiSize, uiBackground, dragable, padder, ...remainingProps } = props;

    const className = classNames({
      barX: true,
      padder: padder ? true : false,
      dragable: dragable ? true : false
    });

    const height =
      typeof uiSize === "number"
        ? uiSize
        : uiSize
        ? uiSizes[uiSize]
        : uiSizes["l"];

    return (
      <div
        {...remainingProps}
        style={{
          ...remainingProps.style,
          background: uiBackground ? COLORS[uiBackground] : "transparent",
          height: height
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      />
    );
  }
);
