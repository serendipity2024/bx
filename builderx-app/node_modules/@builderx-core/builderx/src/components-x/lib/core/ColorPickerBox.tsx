import COLORS from "./constants/COLORS";
import Background from "./types/BackgroundPropType";
import createComponent from "../createComponent";
import * as classNames from "classnames";
import * as React from "react";

interface PropType extends Background {
  position?: string;
  alignRight?: boolean;
  width?: number;
}
const ColorPickerBox = createComponent(
  `
  .colorPickerBoxX {
    height: 20px;
      border: 0px solid ${COLORS[600]};
      border-radius: 2px;
      width: 35px;
      position: relative;
}
.colorPickerBoxX.alignRight{
  float:right;
}
  `,
  React.forwardRef(
    (props: PropType & React.HTMLProps<HTMLDivElement>, ref?: any) => {
      const {
        uiBackground,
        position,
        alignRight,
        width,
        ...remainingProps
      } = props;

      const className = classNames({
        colorPickerBoxX: true,
        alignRight: alignRight ? true : false
      });

      return (
        <div
          {...remainingProps}
          ref={ref}
          style={{
            ...remainingProps.style,
            background: uiBackground ? COLORS[uiBackground] : "#FFF"
          }}
          className={
            className +
            (remainingProps.className ? " " + remainingProps.className : "")
          }
        />
      );
    }
  )
);

const ColorPickerContainer = createComponent(
  `
  .colorPickerContainerX {
    position:absolute;
    z-index:99;
}
.colorPickerContainerX.alignRight{


}


  `,
  (props: PropType & React.HTMLProps<HTMLDivElement>) => {
    const {
      uiBackground,
      position,
      alignRight,
      width,
      ...remainingProps
    } = props;

    const className = classNames({
      colorPickerContainerX: true,
      alignRight: alignRight ? true : false
    });

    return (
      <div
        {...remainingProps}
        style={{
          ...remainingProps.style,
          width: width ? width + "px" : "150px",
          right: position === "right" ? "-3px" : "",
          left: position === "left" ? "-3px" : ""
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      />
    );
  }
);

export { ColorPickerBox, ColorPickerContainer };
