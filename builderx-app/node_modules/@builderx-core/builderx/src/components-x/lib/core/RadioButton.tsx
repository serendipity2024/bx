import * as React from "react";
import styled from "styled-components";
// import COLORS from "./constants/COLORS";
import Size from "./types/SizePropType";
import createComponent from "../createComponent";
import * as classNames from "classnames";

interface PropType extends Size {
  transparent?: boolean;
  flexible?: boolean;
  barButton?: boolean;
}

const RadioButton = createComponent(
  `
  .radioButtonX {

   }

  `,
  (props: PropType & React.HTMLProps<HTMLInputElement>) => {
    const { ...remainingProps } = props;

    const className = classNames({
      radioButtonX: true
    });

    return (
      <input
        {...remainingProps}
        style={{
          ...remainingProps.style
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      />
    );
  }
);

interface WrapperPropType extends PropType {
  checked?: boolean;
  onBlur?: (e: any) => void;
  onClick?: (e: any) => void;
  onChange?: (e: any) => void;
  value?: string;
  name?: string;
}
export default class extends React.Component<WrapperPropType, any> {
  render() {
    const { children, ...otherProps } = this.props;
    return <RadioButton type="radio" {...otherProps} />;
  }
}
