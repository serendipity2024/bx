import * as React from "react";
import styled from "styled-components";
import COLORS from "./constants/COLORS";
import Background from "./types/BackgroundPropType";
import createComponent from "../createComponent";
import * as classNames from "classnames";

interface DropdownPropType {
  isOpen?: boolean;
}
interface DropdownExpandedPropType extends Background {
  width?: string;
  height?: string;
  isOpen?: boolean;
  right?: boolean;
  marginRight?: boolean;
}
interface ItemPropType {
  fontFamily?: string;
  selected?: boolean;
  highlighted?: boolean;
  noPadding?: boolean;
}
export default createComponent(
  `
  .dropdownX {
    width: 100%;
    background: ${COLORS[700]};
    color: ${COLORS[300]};
    height: 22px;
    border: none; /*1px solid ${COLORS[900]};*/
    font-size: 11px;
    outline: none;
    letter-spacing: -0.27px;
    font-weight: 400;
    border-bottom-left-radius:2px;
    border-bottom-right-radius:2px;

}
.dropdown:hover+span
{
  visibility:visible;
}
.dropdown.isOpen
{
  -webkit-appearance:none;
  padding-left:8px;
  border-bottom-left-radius:0px;
  border-bottom-right-radius:0px;
}
  `,
  (props: DropdownPropType & React.HTMLProps<HTMLSelectElement>) => {
    const { isOpen, ...remainingProps } = props;

    const className = classNames({
      dropdownX: true,
      isOpen: isOpen ? true : false
    });

    return (
      <select
        {...remainingProps}
        style={{
          ...remainingProps.style
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      />
    );
  }
);
// export default styled.select<
//   DropdownPropType & React.HTMLProps<HTMLInputElement>
// >`
//     :hover + span {
//         visibility: visible;
//     };
//   width: 100%;
//   background: ${COLORS[700]};
//   color: ${COLORS[300]};
//   height: 22px;
//   border: none; /*1px solid ${COLORS[900]};*/
//   font-size: 11px;
//   outline: none;
//   letter-spacing: -0.27px;
//   font-weight: 400;

//   -webkit-appearance: ${(props: DropdownPropType) =>
//     props.isOpen ? "none" : ""};
//   padding-left: ${(props: DropdownPropType) => (props.isOpen ? "8px" : "")};
//   border-bottom-left-radius: ${(props: DropdownPropType) =>
//     props.isOpen ? "0px" : "2px"};
//   border-bottom-right-radius:${(props: DropdownPropType) =>
//     props.isOpen ? "0px" : "2px"};
// `;
const DropdownExpanded = createComponent(
  `
  .dropdownExpandedX {
    position: absolute;
    z-index: 10;
    border-radius: 5px;
    border: transparent;
    overflow:hidden;
    outline: none;
    letter-spacing: -0.27px;
    border-top-left-radius:2px;
    border-top-right-radius:2px;

}
.dropdownExpandedX.right
{
  right:0px;
}
.dropdownExpandedX.isOpen
{
  border-top-left-radius:0px;
  border-top-right-radius:0px;
}
.dropdownExpandedX.marginRight
{
  margin-right:12px;

}
  `,
  (props: DropdownExpandedPropType & React.HTMLProps<HTMLDivElement>) => {
    const {
      uiBackground,
      width,
      height,
      isOpen,
      right,
      marginRight,
      ...remainingProps
    } = props;

    const className = classNames({
      dropdownExpandedX: true,
      isOpen: isOpen ? true : false,
      right: right ? true : false,
      marginRight: marginRight ? true : false
    });

    return (
      <div
        {...remainingProps}
        style={{
          ...remainingProps.style,
          width: width ? width : "100%",
          maxHeight: height ? height : "1000%",
          background: uiBackground ? COLORS[uiBackground] : COLORS[600]
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      />
    );
  }
);
// const DropdownExpanded = styled.div<
//   DropdownExpandedPropType & React.HTMLProps<HTMLDivElement>
// >`
//   position: absolute;
//   z-index: 10;
//   border-radius: 5px;
//   border: transparent;
//   width: ${(props: DropdownExpandedPropType) =>
//     props.width ? props.width : "100%"};
//   right: ${(props: DropdownExpandedPropType) => (props.right ? "0px" : "")};
//   margin-right: ${(props: DropdownExpandedPropType) =>
//     props.marginRight ? "12px" : ""};
//   max-height: ${(props: DropdownExpandedPropType) =>
//     props.height ? props.height : "1000%"};
//   overflow: hidden;
//   background: ${(props: DropdownExpandedPropType) =>
//     props.uiBackground ? COLORS[props.uiBackground] : COLORS[600]};
//   outline: none;
//   letter-spacing: -0.27px;
//   border-top-left-radius: ${(props: DropdownExpandedPropType) =>
//     props.isOpen ? "0px" : "2px"};
//   border-top-right-radius: ${(props: DropdownExpandedPropType) =>
//     props.isOpen ? "0px" : "2px"};
// `;
// const DropdownItem = styled.div<ItemPropType & React.HTMLProps<HTMLDivElement>>`
//   background: transparent;
//   color: ${COLORS[300]};
//   height: 24px;
//   font-size: 12px;
//   font-family: ${(props: ItemPropType) =>
//     props.fontFamily ? props.fontFamily : ""};
//   font-weight: 400;
//   cursor: default;
//   white-space: pre;
//   text-overflow: ellipsis;
//   overflow: hidden;
//   padding: ${(props: ItemPropType) => (props.noPadding ? 0 : 5)}px;
//   background: ${(props: ItemPropType) =>
//     props.selected ? COLORS[700] : props.highlighted ? COLORS[850] : ""};
// `;

// const DropdownItem = styled.div<ItemPropType & React.HTMLProps<HTMLDivElement>>`
//   background: transparent;
//   color: ${COLORS[300]};
//   height: 24px;
//   font-size: 12px;
//   font-family: ${(props: ItemPropType) =>
//     props.fontFamily ? props.fontFamily : ""};
//   font-weight: 400;
//   cursor: default;
//   white-space: pre;
//   text-overflow: ellipsis;
//   overflow: hidden;
//   padding: ${(props: ItemPropType) => (props.noPadding ? 0 : 5)}px;
//   background: ${(props: ItemPropType) =>
//     props.selected ? COLORS[700] : props.highlighted ? COLORS[850] : ""};
// `;
const DropdownItem = createComponent(
  `
  .dropdownItemX {
    background: transparent;
    color: ${COLORS[300]};
    height: 24px;
    font-size: 12px;
    font-weight: 400;
    cursor: default;
    white-space: pre;
    text-overflow: ellipsis;
    overflow: hidden;
    padding: 5px;
    padding-left: 9px;
}
.dropdownItemX.right
{
  right:0px;
}
.dropdownItemX.isOpen
{
  border-top-left-radius:0px;
  border-top-right-radius:0px;
}
.dropdownItemX.marginRight
{
  margin-right:12px;
}
  `,
  (props: ItemPropType & React.HTMLProps<HTMLDivElement>) => {
    const {
      fontFamily,
      selected,
      highlighted,
      noPadding,
      height,
      ...remainingProps
    } = props;

    const className = classNames({
      dropdownItemX: true,
      selected: selected ? true : false,
      highlighted: highlighted ? true : false,
      noPadding: noPadding ? true : false
    });

    return (
      <div
        {...remainingProps}
        style={{
          ...remainingProps.style,
          fontFamily: fontFamily ? fontFamily : "Roboto",
          background: selected ? COLORS[700] : highlighted ? COLORS[850] : "",
          height:
            remainingProps.style && remainingProps.style.height
              ? remainingProps.style.height
              : height
              ? height
              : "24px"
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      />
    );
  }
);
export { DropdownExpanded, DropdownItem };
// import styled, { StyledFunction } from "styled-components";
// import * as React from "react";
// import COLORS from "./constants/COLORS";

// interface PropType {}
// const select: any =
//   styled.select;
// const div: any =
//   styled.div;

// const Dropdown = div`;
//   width: 80%;
//   background: ${COLORS[600]};
// `;
// const DropdownChildren = select`
// width: 100%;
// background: ${COLORS[600]};
// color: #E0E0E0;
// height: 20px;
// border: 1px solid #292929;
// border-radius: 2px;
// font-size: 11px;
// outline: none;
// -webkit-appearance: none;
// -moz-appearance: none;
// padding: 0 5px;
// background-image: url("./icons/downarrow") no-repeat 20px center;
// `;

// interface WrapperPropType {}

// export default class extends React.Component<WrapperPropType, any> {
//   render() {
//     const { children, ...otherProps } = this.props;
//     return (
//       <Dropdown {...otherProps}>
//         <DropdownChildren>{children}</DropdownChildren>
//       </Dropdown>
//     );
//   }
// }
