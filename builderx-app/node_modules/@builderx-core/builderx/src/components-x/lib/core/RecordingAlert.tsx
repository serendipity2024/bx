import styled from "styled-components";
import COLORS, { DANGER } from "./constants/COLORS";
import Background from "./types/BackgroundPropType";
import createComponent from "../createComponent";
import * as classNames from "classnames";
import * as React from "react";

interface PropType extends Background {
  color?: string;
  noPadding?: boolean;
  paddingRight?: number;
  paddingLeft?: number;
}
export default createComponent(
  `
  .recordingAlertX {

    background: ${DANGER};
    border: none;
    width: auto;
  height: 22px;
  outline: none;
  padding:3px 6px;
  border-radius: 2px;
  font-size: 11px;
  align-items: center;
  display: inline-flex;
  justify-content: center;
  position: relative;

   }
   .recordingAlertX.noPadding{
     padding:3px 0px;

   }

  `,
  (props: PropType & React.HTMLProps<HTMLDivElement>) => {
    const {
      uiBackground,
      noPadding,
      paddingRight,
      paddingLeft,
      color,
      ...remainingProps
    } = props;

    const className = classNames({
      recordingAlertX: true,
      noPadding: noPadding ? true : false
    });

    return (
      <div
        {...remainingProps}
        {...console.log("Received props color as", props.color)}
        style={{
          ...remainingProps.style,
          color: color ? COLORS[color] : COLORS[0],
          paddingLeft: paddingLeft ? paddingLeft + "px" : "3px 6px",
          paddingRight: paddingRight ? paddingRight + "px" : "3px 6px"
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      />
    );
  }
);
