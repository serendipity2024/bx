import styled from "styled-components";
import COLORS from "./constants/COLORS";
import Color from "./types/ColorPropType";
import Size from "./types/SizePropType";
import createComponent from "../createComponent";
import * as classNames from "classnames";
import * as React from "react";
import { isNil } from "lodash";

interface PropType extends Size, Color {
  paddingTop?: number;
  uiSpace?: string;
  disabled?: boolean;
  noMargin?: boolean;
  lineHeight?: string;
}
const uiSizes = {
  l: 16,
  m: 14,
  s: 12,
  xs: 11
};
export default createComponent(
  `
  .checkboxLabelX {
  margin:0px 0px 0px 10px;
  letter-spacing: -0.27px;
  font-family: Roboto, -apple-system, BlinkMacSystemFont, sans-serif;
  font-weight: 400;
  align-self: center;
  text-overflow: ellipsis;
  white-spacing: no-wrap;
}
.checkboxLabelX.noMargin{
  margin:0px
}

  `,
  (props: PropType & React.HTMLProps<HTMLDivElement>) => {
    const {
      uiSize,
      paddingTop,
      uiSpace,
      disabled,
      noMargin,
      uiColor,
      lineHeight,
      ...remainingProps
    } = props;

    const className = classNames({
      checkboxLabelX: true,
      disabled: disabled ? true : false,
      noMargin: noMargin ? true : false
    });

    return (
      <div
        {...remainingProps}
        style={{
          ...remainingProps.style,
          fontSize: uiSize ? uiSizes[uiSize] + "px" : uiSizes["m"] + "px",
          color: !isNil(uiColor) ? COLORS[uiColor] : COLORS[300],
          lineHeight: lineHeight
            ? lineHeight
            : `calc(uiSize?uiSizes[uiSize]+"px":uiSizes["m"]+"px")` + "3px",
          opacity: disabled !== undefined && disabled ? 0.5 : 1
        }}
        className={
          className +
          (remainingProps.className ? " " + remainingProps.className : "")
        }
      />
    );
  }
);
// export default styled.div<PropType & React.HTMLProps<HTMLDivElement>>`
//   margin: ${(props: PropType) => (props.noMargin ? "0" : "0px 0px 0px 10px ")};
//   font-size: ${(props: any) =>
//     props.uiSize ? uiSize[props.uiSize] : uiSize["m"]}px;
//   color: ${(props: any) =>
//     props.uiColor ? COLORS[props.uiColor] : COLORS[300]};
//   letter-spacing: -0.27px;
//   font-family: -apple-system, BlinkMacSystemFont, sans-serif;
//   font-weight: 400;
//   line-height: calc(
//     ${(props: any) => (props.uiSize ? uiSize[props.uiSize] : uiSize["m"])}px +
//       3px
//   );
//   align-self: center;
//   text-overflow: ellipsis;
//   white-spacing: no-wrap;
//   opacity: ${(props: any) =>
//     props.disabled !== undefined && props.disabled ? 0.5 : 1};
// `;
