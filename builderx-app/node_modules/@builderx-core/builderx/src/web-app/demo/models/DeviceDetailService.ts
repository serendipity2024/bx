// import { Model } from "model";
// import { IDeviceDetail, IAppLifeCycleService } from "common-interfaces";

// const os = window["require"]("os");
// const uuid = window["require"]("machine-uuid");

// export default class DeviceDetail extends Model implements IDeviceDetail {
//   device: any;
//   appLifeCycleService: IAppLifeCycleService;
//   constructor(appLifeCycleService: IAppLifeCycleService) {
//     super();
//     this.device = {};
//     this.appLifeCycleService = appLifeCycleService;
//   }
//   getDeviceDetails(cb: any) {
//     uuid((id: any) => {
//       const userInfo = os.userInfo();
//       const deviceInfo = os.networkInterfaces();

//       const device = {
//         uuid: id,
//         ip: this.getIpAddress(deviceInfo),
//         os: os.platform(),
//         // build_version: new ElectronUtilsService().getAppVersion(),
//         build_version: this.appLifeCycleService.getAppVersion(),
//         key: null,
//         system_name: userInfo.username
//       };
//       cb(device);
//     });
//   }

//   getIpAddress(device: any) {
//     if (navigator.onLine) {
//       const ipAddr = Object.keys(device)
//         .map(
//           x =>
//             device[x].filter(
//               (deviceName: any) =>
//                 deviceName.family === "IPv4" && !deviceName.internal
//             )[0]
//         )
//         .filter(x => x);

//       if (ipAddr.length > 0) {
//         return ipAddr[0].address;
//       }
//       return;
//     } else {
//       return;
//     }
//   }
// }
