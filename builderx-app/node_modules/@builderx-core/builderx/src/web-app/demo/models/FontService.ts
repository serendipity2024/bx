import { SystemFont } from "common-interfaces";
import { ApiSdk } from "@builderx-core/api-sdk";
type fontByGoogle = {
  kind: string;
  family: string;
  category: string;
  variants: string[];
  subsets: string[];
  version: string;
  Modified: string;
  files: {};
};

export default class FontService {
  apiKey: string;
  fonts: Array<SystemFont>;
  apiSdk: ApiSdk;
  constructor(apiSdk: ApiSdk, fontApiKey: string) {
    this.apiSdk = apiSdk;
    this.apiKey = fontApiKey;
    this.fonts = [];
  }
  async fetchFonts() {
    const response: any = await this.apiSdk.assets.getGoogleFonts(this.apiKey);
    this.insertToArray(response.data);
    return this.fonts;
  }
  async getFontPort(portStart: any, portEnd: any) {
    let rangeStart = portStart;
    let rangeEnd = portEnd;
    let response;
    return new Promise(async (resolve, reject) => {
      for (let i = rangeStart; i < rangeEnd; i++) {
        try {
          response = await this.apiSdk.raw.checkPort(i);
          if (response && response.data === "BuilderX-Tray-App") {
            resolve({ oldVersion: true });
            break;
          }
          if (response && typeof response.data === "object") {
            // TODO: change this to match with latest version of app
            resolve(i);
            break;
          }
        } catch (error) {
          if (i === rangeEnd - 1) {
            resolve(false);
          }
        }
      }
    });
  }
  async fetchLocalFonts() {
    let response: any;
    try {
      response = await this.apiSdk.assets.fetchLocalFonts();
    } catch (error) {
      return [];
    }
    return response.data;
  }
  insertToArray(googleFontData: { items: fontByGoogle[] }) {
    if (googleFontData.items) {
      for (var i: number = 0; i < googleFontData.items.length; i++) {
        var font: fontByGoogle = googleFontData.items[i];
        for (var j: number = 0; j < font.variants.length; j++) {
          var obj: SystemFont = {
            path: font.files[font.variants[j]],
            postscriptName:
              font.family
                .toLowerCase()
                .split(" ")
                .join("-") +
              "-" +
              font.variants[j].toLowerCase(),
            family: font.family,
            style: font.variants[j]
          };
          this.fonts.push(obj);
        }
      }
    }
  }
}
