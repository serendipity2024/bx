import { FlutterContext } from "../types";
import LayerCodeGen from "../LayerCodeGen";
import { wrapIt, generateWrappedChildren, rotateWrap } from "../utils/index";
export default class ScrollViewCodeGen extends LayerCodeGen {
  context: FlutterContext;
  constructor(context: FlutterContext) {
    super();
    this.context = context;
  }

  generate(json: any): string {
    const ChildrenCode = generateWrappedChildren(json, this.context);
    let currentLayer = `

    Container(

      ${this.generateContainerElements(json, "container")}

      child: SingleChildScrollView(
        ${
          json.props.horizontal
            ? `${this.generatePropertiesCode(json.props, ["horizontal"])}`
            : `scrollDirection : Axis.vertical,`
        }
        child: Container(
          ${this.generateContainerElements(json, "scrollable")}
          child:${ChildrenCode})
      )
    )`;
    if (json.props.style.transform) {
      if (!this.context.imports.includes("import 'dart:math';")) {
        this.context.imports.push("import 'dart:math';");
      }
      currentLayer = rotateWrap(json, currentLayer, this);
    }
    return wrapIt(json, currentLayer, this);
  }
}
