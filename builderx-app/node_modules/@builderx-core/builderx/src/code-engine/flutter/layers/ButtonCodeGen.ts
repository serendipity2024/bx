import { FlutterContext } from "../types";
import LayerCodeGen from "../LayerCodeGen";
import { wrapIt, generateWrappedChildren, rotateWrap } from "../utils/index";

export default class ButtonCodeGen extends LayerCodeGen {
  context: FlutterContext;
  constructor(context: FlutterContext) {
    super();
    this.context = context;
  }

  generate(json: any): string {
    const ChildrenCode = generateWrappedChildren(json, this.context);

    console.log(json, "JSON");
    let currentLayer = `

    InkWell(
      ${this.generatePropertiesCode(json.props, ["onPress"])}
      child : Container (
          decoration : BoxDecoration(
            ${this.generatePropertiesCode(json.props.style, [
              "backgroundColor"
            ])}
            ${
              json.props.style.borderColor
                ? `
                border: Border.all(${this.generatePropertiesCode(
                  json.props.style,
                  ["borderColor", "borderWidth"]
                )}),
              ${this.generatePropertiesCode(json.props.style, ["borderRadius"])}
            `
                : ``
            }
          ),
              child: ${ChildrenCode},
              ${this.generatePropertiesCode(json.props.style, [
                "height",
                "width"
              ])}
            ),
        )
      
    `;
    if (json.props.style.transform) {
      if (!this.context.imports.includes("import 'dart:math';")) {
        this.context.imports.push("import 'dart:math';");
      }
      currentLayer = rotateWrap(json, currentLayer, this);
    }
    return wrapIt(json, currentLayer, this);
  }
}
