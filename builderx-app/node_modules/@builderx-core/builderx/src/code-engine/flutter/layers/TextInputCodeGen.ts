import { FlutterContext } from "../types";
import LayerCodeGen from "../LayerCodeGen";
import { generateChildren, wrapIt, rotateWrap } from "../utils/index";

export default class ButtonCodeGen extends LayerCodeGen {
  context: FlutterContext;
  constructor(context: FlutterContext) {
    super();
    this.context = context;
  }
  generate(json: any): string {
    const ChildrenCode = generateChildren(
      json,
      this.context.baseCodeGen.generate
    );
    let currentLayer = `
            Container(
              ${this.generatePropertiesCode(json.props.style, [
                "height",
                "width"
              ])}

              child :TextField(
                ${this.generatePropertiesCode(json.props.style, ["textAlign"])}

                ${this.generatePropertiesCode(json.props, ["maxLength"])}

                style:TextStyle(
                  ${this.generatePropertiesCode(json.props.style, [
                    "color",
                    "fontSize",
                    "fontFamily",
                    "fontStyle",
                    "fontWeight"
                  ])}
                ),
                decoration : InputDecoration(
                  ${this.generatePropertiesCode(json, ["props"])}
                  ${
                    json.props.style.borderColor
                      ? `
                      enabledBorder:OutlineInputBorder(
                        ${this.generatePropertiesCode(json.props.style, [
                          "borderRadius"
                        ])}
                        borderSide : BorderSide(
                          ${this.generatePropertiesCode(json.props.style, [
                            "borderColor",
                            "borderWidth"
                          ])}
                        ),
                      ),
                      focusedBorder:OutlineInputBorder(
                        ${this.generatePropertiesCode(json.props.style, [
                          "borderRadius"
                        ])}
                        borderSide : BorderSide(
                          ${this.generatePropertiesCode(json.props.style, [
                            "borderColor",
                            "borderWidth"
                          ])}
                        ),
                      ),
                    `
                      : ``
                  }
                  ${this.generatePropertiesCode(json.props, [
                    "placeholder",
                    "placeholderTextColor"
                  ])}

                ),
              )
            )
    `;
    if (json.props.style.transform) {
      if (!this.context.imports.includes("import 'dart:math';")) {
        this.context.imports.push("import 'dart:math';");
      }
      currentLayer = rotateWrap(json, currentLayer, this);
    }
    return wrapIt(json, currentLayer, this);
  }
}
