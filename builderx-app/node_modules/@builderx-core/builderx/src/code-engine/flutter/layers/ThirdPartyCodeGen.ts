import { FlutterContext } from "../types";
import LayerCodeGen from "../LayerCodeGen";
import { wrapIt, rotateWrap } from "../utils/index";

export default class ThirdPartyCodeGen extends LayerCodeGen {
  context: FlutterContext;
  constructor(context: FlutterContext) {
    super();
    this.context = context;
  }
  generate(json: any): string {
    if (json.import.layerName === "Icon") {
      if (
        !this.context.imports.includes(
          `import 'package:flutter_icons/flutter_icons.dart';`
        )
      ) {
        this.context.imports.push(
          `import 'package:flutter_icons/flutter_icons.dart';`
        );
      }
      let currentLayer = `Icon(
                  ${this.generatePropertiesCode(json.props, ["type"])}
                  ${this.generatePropertiesCode(json.props, ["name"])}
                  ${this.generatePropertiesCode(json.props.style, ["color"])}
                  ${this.generatePropertiesCode(json.props, ["style"])}
                )`;
      if (json.props.style.transform) {
        if (!this.context.imports.includes("import 'dart:math';")) {
          this.context.imports.push("import 'dart:math';");
        }
        currentLayer = rotateWrap(json, currentLayer, this);
      }
      return wrapIt(json, currentLayer, this);
    }
    return "";
  }
}
