import { FlutterContext } from "../types";
import LayerCodeGen from "../LayerCodeGen";
import { generateChildren, wrapIt, rotateWrap } from "../utils/index";

export default class TextCodeGen extends LayerCodeGen {
  context: FlutterContext;
  constructor(context: FlutterContext) {
    super();
    this.context = context;
  }

  generate(json: any): string {
    const ChildrenCode = generateChildren(
      json,
      this.context.baseCodeGen.generate
    );
    let currentLayer = ` Text(
                 ${ChildrenCode},
                 style:TextStyle(
                   ${this.generatePropertiesCode(json.props.style, [
                     "color",
                     "fontSize",
                     "fontFamily",
                     "fontStyle",
                     "fontWeight",
                     "letterSpacing",
                     "lineHeight"
                   ])}

                 ),
                 ${this.generatePropertiesCode(json.props.style, ["textAlign"])}
                )`;
    if (json.props.style.transform) {
      if (!this.context.imports.includes("import 'dart:math';")) {
        this.context.imports.push("import 'dart:math';");
      }
      currentLayer = rotateWrap(json, currentLayer, this);
    }
    return wrapIt(json, currentLayer, this);
  }
}
