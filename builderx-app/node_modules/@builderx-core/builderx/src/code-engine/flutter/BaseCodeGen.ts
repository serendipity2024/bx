import { entries } from "lodash";
// import DivCodeGen from "./layers/DivCodeGen";
import FileCodeGen from "./layers/FileCodeGen";
import RootCodeGen from "./layers/RootCodeGen";
import LayerCodeGen from "./LayerCodeGen";
import TextCodeGen from "./layers/TextCodeGen";
import LiteralCodeGen from "./specialLayers/LiteralCodeGen";
import ContainerCodeGen from "./layers/ContainerCodeGen";
import ThirdPartyCodeGen from "./layers/ThirdPartyCodeGen";
import ImageCodeGen from "./layers/ImageCodeGen";
import { FlutterContext } from "./types";
import SymbolLayerCodeGen from "./layers/SymbolLayerCodeGen";
import ButtonCodeGen from "./layers/ButtonCodeGen";
import TextInputCodeGen from "./layers/TextInputCodeGen";
import ScrollViewCodeGen from "./layers/ScrollViewCodeGen";
// import ImageCodeGen from "./layers/ImageCodeGen";
// import EllipseCodeGen from "./layers/EllipseCodeGen";
import EllipseCodeGen from "./layers/EllipseCodeGen";
import PathCodeGen from "./layers/PathCodeGen";
// import ScrollViewCodeGen from "./layers/ScrollViewCodeGen";
// import StatusBarCodeGen from "./layers/StatusBarCodeGen";
// import CenterCodeGen from "./specialLayers/CenterCodeGen";
// import ExpressionStatementCodeGen from "./specialLayers/ExpressionStatementCodeGen";
// import BinaryExpressionCodeGen from "./specialLayers/BinaryExpressionCodeGen";
// import ExpressionCodeGen from "./specialLayers/ExpressionCodeGen";
// import ConditionalExpressionCodeGen from "./specialLayers/ConditionalExpressionCodeGen";
// import LogicalExpressionCodeGen from "./specialLayers/LogicalExpressionCodeGen";

// import LoopCodeGen from "./layers/LoopCodeGen";

export default class BaseCodeGen extends LayerCodeGen {
  context: FlutterContext = {
    styles: {},
    imports: [],
    customPaintClasses: [],
    baseCodeGen: this
    // this.
  };

  // TODO: any => LayerCodeGen in next line
  componentCodeGenMap = new Map<string, any>(
    entries({
      view: ContainerCodeGen,
      root: RootCodeGen,
      file: FileCodeGen,
      text: TextCodeGen,
      literal: LiteralCodeGen,
      thirdParty: ThirdPartyCodeGen,
      image: ImageCodeGen,
      symbol: SymbolLayerCodeGen,
      touchableOpacity: ButtonCodeGen,
      textInput: TextInputCodeGen,
      scrollView: ScrollViewCodeGen,
      ellipse: EllipseCodeGen,
      path: PathCodeGen
      // ellipse: EllipseCodeGen,
      // path: PathCodeGen,
      // scrollView: ScrollViewCodeGen,
      // statusBar: StatusBarCodeGen,
      // expressionStatement: ExpressionStatementCodeGen,
      // binaryExpression: BinaryExpressionCodeGen,
      // expression: ExpressionCodeGen,
      // conditionalExpression: ConditionalExpressionCodeGen,
      // logicalExpression: LogicalExpressionCodeGen,
      // loop: LoopCodeGen
    })
  );

  generate = (json: any) => {
    const LayerCodeGenClass = this.componentCodeGenMap.get(json.type);
    // if (
    //   get(json, "template.centerVertical") ||
    //   get(json, "template.centerHorizontal")
    // ) {
    // const layerCodeGen = new CenterCodeGen(this.context);
    // layerCodeGen.config = this.config;
    // return layerCodeGen.generate(json);
    // }
    if (LayerCodeGenClass) {
      const layerCodeGen = new LayerCodeGenClass(this.context);
      // layerCodeGen.config = this.config;
      // const wrapperCodeGen = new WrapperCodeGen(this.context);
      return layerCodeGen.generate(json);
      console.error(json.type + " layer not handled");
    }

    return "";
  };
}
