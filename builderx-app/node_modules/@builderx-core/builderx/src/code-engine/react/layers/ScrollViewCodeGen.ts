import { Context, ExtraParams } from "../types";
import { generateChildren } from "../utils";
import LayerCodeGen from "../LayerCodeGen";
const pascalCase = require("pascal-case");
import { layerNameMap } from "../utils/constants";
export default class ScrollViewCodeGen extends LayerCodeGen {
  context: Context;
  constructor(context: Context) {
    super();
    this.context = context;
  }

  generate(json: any, extraParams: ExtraParams): string {
    // let layerSpecificStyles = "";

    // layerSpecificStyles += `${this.generateStyle(
    //   json,
    //   extraParams,
    //   "contentContainerStyle"
    // )}`;
    let { horizontal } = json.props;
    let scrollDirection = horizontal ? "overflowX" : "overflowY";
    const style = {
      [scrollDirection]: "scroll",
      // ...json.props.contentContainerStyle,
      ...json.props.style,
      display: "flex"
    };

    this.context.styles[json.styleName] = {
      style,
      layerName: layerNameMap[json.import.layerName]
    };
    delete json.props.horizontal;
    return `<${pascalCase(json.styleName)} ${this.generateProps(
      json,
      extraParams
    )} >
      ${generateChildren(json, this.context.baseCodeGen.generate, {
        parent: json
      })}
    </${pascalCase(json.styleName)}>`;
  }
}
