import { Context, ExtraParams } from "../types";
import { generateChildren, addImportToContext } from "../utils";
import LayerCodeGen from "../LayerCodeGen";

export default class SymbolLayerCodeGen extends LayerCodeGen {
  context: Context;
  constructor(context: Context) {
    super();
    this.context = context;
  }

  generate(json: any, extraParams: ExtraParams): string {
    this.context.styles[json.styleName] = {
      style: json.props.style,
      layerName: "Symbol"
    };
    addImportToContext(this.context, json);

    const tagName = json.import.layerName;

    return `<${tagName} ${this.generateProps(
      json,
      extraParams
    )} style={${this.generateJSLiteralCode(
      json.props.style,
      extraParams
    )}} ${this.generateSymbolOverrideProps(json.scopeVariables, extraParams)}>
      ${generateChildren(json, this.context.baseCodeGen.generate, {
        parent: json
      })}
    </${tagName}>`;
  }
}
