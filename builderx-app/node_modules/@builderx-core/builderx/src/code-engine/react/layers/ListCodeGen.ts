import { Context, ExtraParams } from "../types";
import { generateChildren, addImportToContext } from "../utils";
import LayerCodeGen from "../LayerCodeGen";
import { layerNameMap } from "../utils/constants";
const pascalCase = require("pascal-case");

export default class ListCodeGen extends LayerCodeGen {
  context: Context;
  constructor(context: Context) {
    super();
    this.context = context;
  }
  generate(json: any, extraParams: ExtraParams): string {
    extraParams, json;
    console.log("json is ", json);
    addImportToContext(this.context, json);
    let axis = json.props.horizontal ? "x" : "y";
    delete json.props.horizontal;
    this.context.styles[json.styleName] = {
      style: { ...json.props.style, overflow: "auto" },
      layerName: layerNameMap[json.import.layerName]
    };
    return `
  <${pascalCase(json.styleName)}  >
  <ReactList ${this.generateProps(
    json,
    extraParams
  )} axis="${axis}" length={100}>
   ${generateChildren(json, this.context.baseCodeGen.generate, {
     parent: json
   })}
   </ReactList>
   </${pascalCase(json.styleName)}>
  `;
  }
}
