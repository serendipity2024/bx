import { Context, ExtraParams } from "../types";
import { generateChildren, addImportToContext } from "../utils";
import LayerCodeGen from "../LayerCodeGen";

export default class LoaderCodeGen extends LayerCodeGen {
  context: Context;
  constructor(context: Context) {
    super();
    this.context = context;
  }
  generate(json: any, extraParams: ExtraParams): string {
    this.context.styles[json.styleName] = {
      style: json.props.style,
      layerName: "ThirdParty"
    };
    addImportToContext(this.context, json);
    return `<CircularProgress style={${this.generateJSLiteralCode(
      json.props.style,
      extraParams
    )}}>
        ${generateChildren(json, this.context.baseCodeGen.generate, {
          parent: json
        })}
        </CircularProgress>`;
  }
}
