import { Context, ExtraParams } from "../types";
import { generateChildren } from "../utils";
import LayerCodeGen from "../LayerCodeGen";
import { layerNameMap } from "../utils/constants";
const pascalCase = require("pascal-case");

export default class PickerCodeGen extends LayerCodeGen {
  context: Context;
  constructor(context: Context) {
    super();
    this.context = context;
  }
  generate(json: any, extraParams: ExtraParams): string {
    this.context.styles[json.styleName] = {
      style: json.props.style,
      layerName: layerNameMap[json.import.layerName]
    };
    return `<${pascalCase(json.styleName)} ${this.generateProps(
      json,
      extraParams
    )}>
    ${generateChildren(json, this.context.baseCodeGen.generate, {
      parent: json
    })}
    </${pascalCase(json.styleName)}>`;
  }
}
