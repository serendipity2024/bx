import { Context, ExtraParams } from "../types";
import { generateChildren, addImportToContext } from "../utils";
import LayerCodeGen from "../LayerCodeGen";
import { layerNameMap } from "../utils/constants";
const pascalCase = require("pascal-case");

export default class MapCodeGen extends LayerCodeGen {
  context: Context;
  constructor(context: Context) {
    super();
    this.context = context;
  }
  generate(json: any, extraParams: ExtraParams): string {
    addImportToContext(this.context, json);
    this.context.styles[json.styleName] = {
      style: json.props.style,
      layerName: "div"
    };
    let mapStyle =
      this.context.mapDuplicate.lastNumber === 1
        ? "GoogleMapReact"
        : `GoogleMapReact${this.context.mapDuplicate.lastNumber}`;
    return `<${pascalCase(json.styleName)}  >
          <${mapStyle}
          bootstrapURLKeys={{key:"YOUR_API_KEY"}}
          defaultZoom={4}
          ${this.generateProps(json, extraParams)}
          />
          ${generateChildren(json, this.context.baseCodeGen.generate, {
            parent: json
          })}
        </${pascalCase(json.styleName)}>`;
  }
}
