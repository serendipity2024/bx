import { Context, ExtraParams } from "../types";
import { addImportToContext, getFilteredImageStyle } from "../utils";
import LayerCodeGen from "../LayerCodeGen";
import { generateSVGPath } from "conversions";
import { get, forEach } from "lodash";
import * as path from "path";
export default class ImageCodeGen extends LayerCodeGen {
  context: Context;
  constructor(context: Context) {
    super();
    this.context = context;
  }
  getRandomString() {
    let text = "";
    let possible =
      "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    text = possible.charAt(Math.floor(Math.random() * 52));
    for (let i = 0; i < 6; i++) {
      text += possible.charAt(Math.floor(Math.random() * possible.length));
    }
    return text;
  }
  generateDefs(json: any, maskId: string) {
    let defsCode = "";
    let maskCode = "";
    let maskPathCode = `<Path fill="white" d={"${generateSVGPath(
      json.props.mask,
      0,
      true,
      json.props.viewBox
    )}"}/>`;
    // const viewBox = json.props.viewBox.split(" ");
    maskCode = `<Mask id="${maskId}" x={0} y={0}>
      ${maskPathCode}
      </Mask>`;

    if (maskCode) {
      defsCode = `<Defs>
    ${maskCode}
    </Defs>`;
    }
    return defsCode;
  }
  generate(json: any, extraParams: ExtraParams): string {
    addImportToContext(this.context, json);
    this.context.styles[json.styleName] = json.props.style;
    if (json.props.mask) {
      addImportToContext(this.context, {
        import: {
          isDefaultImport: false,
          layerName: "Defs",
          packageName: "react-native-svg"
        }
      });
      addImportToContext(this.context, {
        import: {
          isDefaultImport: false,
          layerName: "Svg",
          packageName: "react-native-svg"
        }
      });
      addImportToContext(this.context, {
        import: {
          isDefaultImport: false,
          layerName: "Path",
          packageName: "react-native-svg"
        }
      });
      addImportToContext(this.context, {
        import: {
          isDefaultImport: false,
          layerName: "Mask",
          packageName: "react-native-svg"
        }
      });
      const { viewBox, style } = json.props;
      const svgJson = { ...json, props: { viewBox, style } };
      const maskId = this.getRandomString();
      return `<Svg ${this.generateProps(svgJson, {
        ...extraParams,
        parent: json
      })} ${this.generateStyle(json, { ...extraParams, parent: json })}>
      ${this.generateDefs(json, maskId)}
      <SvgImage href={require("${this.generateSourcePropCode(
        path.basename(json.props.source.uri),
        "svgImage"
      )}")} x={${json.props.svgDims.x}} y={${json.props.svgDims.y}} width={${
        json.props.svgDims.width
      }} height={${json.props.svgDims.height}} mask={"url(#${maskId})"}>
      ${this.generateChildren(json, { ...extraParams, parent: json })}
      </SvgImage>
      </Svg>`;
    }

    let layerStylePropCode = this.generateStyle(json, {
      ...extraParams,
      parent: json
    });

    let tagName = "Image";
    if (json.children.length !== 0) {
      json.props.imageStyle = getFilteredImageStyle(json.props.style);
      this.context.styles[`${json.styleName}_imageStyle`] =
        json.props.imageStyle;
      tagName = "ImageBackground";
      addImportToContext(this.context, {
        import: {
          isDefaultImport: false,
          layerName: "ImageBackground",
          packageName: "react-native"
        }
      });

      layerStylePropCode += ` ${this.generateStyle(
        json,
        { ...extraParams, parent: json },
        "imageStyle"
      )}`;
    }

    return `<${tagName} ${this.generateProps(json, {
      ...extraParams,
      parent: json
    })} ${layerStylePropCode}>
      ${this.generateChildren(json, { ...extraParams, parent: json })}
    </${tagName}>`;
  }
}
