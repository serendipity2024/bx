import { Context, ExtraParams } from "../types";
import { addImportToContext } from "../utils";
import LayerCodeGen from "../LayerCodeGen";

export default class SymbolLayerCodeGen extends LayerCodeGen {
  context: Context;
  constructor(context: Context) {
    super();
    this.context = context;
  }

  generate(json: any, extraParams: ExtraParams): string {
    this.context.styles[json.styleName] = json.props.style;
    addImportToContext(this.context, json);

    const tagName = json.import.layerName;
    return `<${tagName} ${this.generateProps(json, {
      ...extraParams,
      parent: json
    })} ${this.generateSymbolOverrideProps(json.scopeVariables, {
      ...extraParams,
      parent: json
    })}${this.generateStyle(json, { ...extraParams, parent: json })}>
      ${this.generateChildren(json, { ...extraParams, parent: json })}
    </${tagName}>`;
  }
}
