import { Context, ExtraParams } from "../types";
import { addImportToContext } from "../utils";
import LayerCodeGen from "../LayerCodeGen";

export default class EllipseCodeGen extends LayerCodeGen {
  context: Context;
  constructor(context: Context) {
    super();
    this.context = context;
  }

  generate(json: any, extraParams: ExtraParams): string {
    json.props.viewBox = json.props.viewBox
      .split(" ")
      .map((v: string) => Math.round(parseFloat(v) * 100) / 100)
      .join(" ");
    this.context.styles[json.styleName] = json.props.style;
    addImportToContext(this.context, json);
    addImportToContext(this.context, {
      import: {
        isDefaultImport: true,
        layerName: "Svg",
        packageName: "react-native-svg"
      }
    });

    const { viewBox, style, ...ellipseProps } = json.props;

    const ellipseJson = { ...json, props: ellipseProps };
    const svgJson = { ...json, props: { viewBox, style } };
    return `<Svg ${this.generateProps(svgJson, {
      ...extraParams,
      parent: json
    })} ${this.generateStyle(json, { ...extraParams, parent: json })}>
    <Ellipse ${this.generateProps(ellipseJson, {
      ...extraParams,
      parent: json
    })}>
      ${this.generateChildren(json, { ...extraParams, parent: json })}
    </Ellipse>
    </Svg>`;
  }
}
