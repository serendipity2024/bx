import { Context, ExtraParams } from "../types";
import {
  addImportToContext,
  isTabViewSpecificStyleProp,
  getCurrentFamily
} from "../utils";

import LayerCodeGen from "../LayerCodeGen";
import { forEach } from "lodash";

export default class IconCodeGen extends LayerCodeGen {
  context: Context;
  constructor(context: Context) {
    super();
    this.context = context;
  }

  generate(json: any, extraParams: ExtraParams): string {
    this.context.styles[json.styleName] = json.props.style;
    addImportToContext(this.context, json, this.generateJSLiteralCode);
    let tagName = "";
    let layerSpecificStyles = "";

    let currentFamily = getCurrentFamily(json, this.generateJSLiteralCode);
    tagName =
      this.context.iconCount > 1
        ? `${currentFamily}${json.import.layerName}`
        : json.import.layerName;

    delete json.props.style.fontPostscriptName;

    return `<${tagName} ${this.generateProps(json, {
      ...extraParams,
      parent: json
    })} ${this.generateStyle(json, {
      ...extraParams,
      parent: json
    })} ${layerSpecificStyles}>
      ${this.generateChildren(json, { ...extraParams, parent: json })}
    </${tagName}>`;
  }
}
