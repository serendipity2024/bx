import { File } from "./interfaces";
import grouping from "./grouping";
import absoluteToFlex from "./absoluteToFlex";
import reorder from "./reorder";
import flexGrouping from "./flexGrouping";
import IPC from "../../code-engine/IPC";
import percentageToFixed from "./percentageToFixed";

export default function smartFlex(file: File, ipc?: IPC): File {
  let transformedFile = JSON.parse(JSON.stringify(file));
  let initialTransformedFile = JSON.parse(JSON.stringify(file));
  try {
    transformedFile.layer = percentageToFixed(transformedFile.layer);
    transformedFile.layer = grouping(transformedFile.layer, ipc);
    transformedFile.layer = reorder(transformedFile.layer);
    transformedFile.layer = flexGrouping(transformedFile.layer);
    transformedFile.layer = absoluteToFlex(transformedFile.layer);
    transformedFile.smartFlexTransformed = true;
  } catch (conversionError) {
    transformedFile.layer = initialTransformedFile.layer;
    if (ipc) {
      let errorMessage = `Error in smartFlex in file ${file.path}: `;
      conversionError.message = errorMessage + conversionError.message;
      ipc.executeCommand("captureErrorForSentry", [conversionError]);
    }
  }

  // layer = order(layer);
  // layer = absToFlex(layer)
  return transformedFile;
}
