export interface Point {
  x: number;
  y: number;
}
export interface Style {
  textAlign?: string;
  alignItems?: string;
  justifyContent?: string;
  top?: number | string;
  left?: number | string;
  width?: number | string;
  height?: number | string;
  right?: number | string;
  bottom?: number | string;
  position?: string;
  opacity?: number;
  marginTop?: number | string;
  marginLeft?: number | string;
  marginRight?: number | string;
  marginBottom?: number | string;
  backgroundImage?: string;
  backgroundColor?: string;
  flex?: number;
  color?: string;
  fontSize?: number;
  flexDirection?: string;
  alignSelf?: string;
  display?: string;
}
export interface Props {
  contentContainerStyle?: any;
  style: Style;
  type?: string;
  name?: string;
}

export interface Layer {
  children: Array<Layer>;
  path?: string;
  name?: string;
  type: string;
  import?: any;
  props: Props;
  locked?: boolean;
  gradient?: any;
  overrideKeys?: any;
  template?: any;
  styleName?: string;
  rcDims: Dims;
  _originalWidth?: string;
  _originalHeight?: string;
  _absolute?: boolean;
  _flexParent?: boolean;
  _left?: number;
  _top?: number;
  _height?: number;
  _width?: number;
  _right?: number;
  _bottom?: number;
}

export interface Dims {
  x: number;
  y: number;
  height: number;
  width: number;
}

export interface File {
  layer: Layer;
  type: string;
  path?: string;
}

export type CompareLayersCallback = () => {
  lrlr: (properties: {
    l1: number;
    r1: number;
    l2: number;
    r2: number;
    layer1: Layer;
    layer2: Layer;
  }) => void;
  lrrw: (properties: {
    l1: number;
    r1: number;
    r2: number;
    w2: number;
    layer1: Layer;
    layer2: Layer;
  }) => void;
  lrlw: (properties: {
    l1: number;
    r1: number;
    l2: number;
    w2: number;
    layer1: Layer;
    layer2: Layer;
  }) => void;

  rwlr: (properties: {
    r1: number;
    w1: number;
    l2: number;
    r2: number;
    layer1: Layer;
    layer2: Layer;
  }) => void;
  rwrw: (properties: {
    r1: number;
    w1: number;
    r2: number;
    w2: number;
    layer1: Layer;
    layer2: Layer;
  }) => void;
  rwlw: (properties: {
    r1: number;
    w1: number;
    l2: number;
    w2: number;
    layer1: Layer;
    layer2: Layer;
  }) => void;

  lwlr: (properties: {
    l1: number;
    w1: number;
    l2: number;
    r2: number;
    layer1: Layer;
    layer2: Layer;
  }) => void;
  lwrw: (properties: {
    l1: number;
    w1: number;
    r2: number;
    w2: number;
    layer1: Layer;
    layer2: Layer;
  }) => void;
  lwlw: (properties: {
    l1: number;
    w1: number;
    l2: number;
    w2: number;
    layer1: Layer;
    layer2: Layer;
  }) => void;
};
