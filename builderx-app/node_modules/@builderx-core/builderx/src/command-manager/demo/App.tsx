import * as React from "react";
import ChangeName from "./DemoCommand";

import { CommandManager, ICommand } from "../lib";
class App extends React.Component<any, any> {
  commandManager: CommandManager;

  constructor(props: any) {
    super(props);
    this.state = {
      name: "Hello"
    };
    this.commandManager = new CommandManager();
    // window["commandManager"] = this.commandManager;
  }
  public render() {
    return (
      <div>
        <h1>{this.state.name} is awesome</h1>
        <button
          onClick={async () => {
            await this.commandManager.executeAndForget(
              new ChangeName(this.state, "Drag Start", () => this.forceUpdate())
            );
          }}
        >
          Drag Start
        </button>
        <button
          onClick={() => {
            this.commandManager.executeAndSkip(
              new ChangeName(this.state, "SKip", () => this.forceUpdate())
            );
          }}
        >
          skip
        </button>
        <button
          onClick={() => {
            this.commandManager.executeAndSkip(
              new ChangeName(this.state, "SKip", () => this.forceUpdate())
            );
          }}
        >
          skip
        </button>
        <button
          onClick={() => {
            this.commandManager.execute(
              new ChangeName(this.state, "Drag end", () => this.forceUpdate())
            );
          }}
        >
          Make Drag end Awesome
        </button>
        <br />
        <button
          disabled={!this.commandManager.isUndoable()}
          onClick={() => {
            this.commandManager.undo();
          }}
        >
          Undo
        </button>
        <button
          disabled={!this.commandManager.isRedoable()}
          onClick={() => {
            this.commandManager.redo();
          }}
        >
          Redo
        </button>
        <p>Use this sample project from test. {Text}</p>
      </div>
    );
  }
}

export default App;
