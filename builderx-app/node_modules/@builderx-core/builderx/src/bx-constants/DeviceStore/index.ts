import { devices } from "./deviceDatabase";

import { find } from "lodash";
import { Device } from "./Device";

export default class DeviceStore {
  static getDeviceByName(name: string): Device | undefined {
    const device = find(devices, o => {
      return o.name === name || o.model === name;
    });
    return device;
  }
  static getAllDevices() {
    return devices;
  }
  static getDeviceDimensions(name: string) {
    const deviceData = this.getDeviceByName(name);

    if (deviceData) {
      return {
        height: deviceData.resolution.height / deviceData.pixelRatio,
        width: deviceData.resolution.width / deviceData.pixelRatio,
        found: true
      };
    } else {
      // default IPhone X
      return {
        // Jugaad
        // height: 819,
        // width: 383
        height: 812,
        width: 375,
        found: false
      };
    }
  }
  static getDevicesWithSameOS = (os: string) => {
    let devicesWithSameOs: Array<Device> = [];
    devices.forEach((device: Device, index: number) => {
      if (device.os === os) {
        devicesWithSameOs.push(device);
      }
    });
    return devicesWithSameOs;
  };
  static getOSFromDevice = (deviceName: string) => {
    let os = "iOS";
    devices.map((deviceObj: any) => {
      if (deviceObj.name === deviceName || deviceObj.model === deviceName) {
        os = deviceObj.os;
        return;
      }
    });
    return os;
  };
}
