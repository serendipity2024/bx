import Serializable, { types } from "./Serializable";

class Model extends Serializable {
  eventListenerMap: Map<any, any>;
  getFields(): any {
    return {
      eventListenerMap: types.ignore
    };
  }
}
class Point extends Model {
  x: number;
  y: number;
  getFields(): { [key: string]: any } {
    return {
      x: types.literal,
      y: types.literal
    };
  }
}

class PathPoint extends Model {
  cornerRadius: number;
  curveMode: number;
  hasCurveTo: boolean;
  hasCurveFrom: boolean;
  curveFrom: Point;
  curveTo: Point;
  point: Point;

  getFields(): { [key: string]: any } {
    return {
      cornerRadius: types.literal,
      curveMode: types.literal,
      hasCurveTo: types.literal,
      hasCurveFrom: types.literal,
      curveFrom: Point,
      curveTo: Point,
      point: Point
    };
  }
}

class Style extends Model {
  s1: number;
  getFields(): any {
    return {
      s1: types.literal
    };
  }
}

class PathStyle extends Style {
  s2: number;
  getFields(): any {
    return {
      s2: types.literal
    };
  }
}

class Props extends Model {
  abc: string;
  style: Style;
  getFields(): any {
    return {
      abc: types.literal,
      style: Style
    };
  }
}

class PathProps extends Props {
  c: string;
  style: PathStyle;
  points: Array<PathPoint>;
  getFields() {
    return {
      c: types.literal,
      points: types.array(PathPoint),
      style: PathStyle
    };
  }
}

// abstract class Layer extends Serializable {
//   abstract props: Props;

//   constructor() {
//     super();
//   }
//   getFields(): { [key: string]: any } {
//     return {};
//   }
// }

// class PathLayer extends Layer {
//   props: PathProps;
//   newName: string;
//   getFields(): { [key: string]: any } {
//     return { props: PathProps };
//   }
// }

// class ClassA extends Serializable {
//   name: string;
//   children: any[] | string;
//   obj: Layer;
//   testMap: Map<string, Layer[]>;

//   constructor() {
//     super();
//     // this.name = "Test";
//     this.testMap = new Map();
//   }
//   getFields(): { [key: string]: any } {
//     return {};
//   }
// }

// let instance = new ClassA();

// instance.name = "Sanket";
// instance.children = [];
// instance.children.push(new ClassB("first"));
// instance.children.push(new ClassB("second"));
// instance.obj = new ClassB("third");
// instance.testMap.set("testMap1111", [new ClassB("my")]);
// console.log(instance.toJS());
// console.log(ClassA.fromJS(instance.toJS()));
// let instance1 = new ClassA();
// instance1.name = "Rishab";
// instance1.children = [];
// instance1.children.push("new ClassB()");
// instance1.children.push("new ClassB()");
// instance1.testMap.set("testMap1111", [new ClassB("my")]);
// console.log(instance1.toJS(), "toJS");
// console.log(ClassA.fromJS(instance1.toJS()), "fromJS");

// let aasdfas = new ClassA();
// let c = PathLayer.fromJS({ props: { a: "sdffd", c: "adsda" } });

// window["PathProps"] = PathProps;

// let p1 = PathProps.fromJS({
//   points: [
//     {
//       cornerRadius: 0,
//       curveMode: 0,
//       hasCurveTo: true,
//       hasCurveFrom: true,
//       curveFrom: { x: 1, y: 2 },
//       curveTo: { x: 1, y: 2 },
//       point: { x: 1, y: 2 }
//     }
//   ]
// });

// console.log(
//   c,
//   aasdfas
//   // c.abc(),
// );

// c.abc();
