import { Session } from "session";
import { SessionEvent } from "event-manager";
import { set } from "lodash";
import { DomainFile, DomainLayer } from "domain-x";

export default function addLayerPatch(
  session: Session,
  layerPath: string,
  filePath: string
) {
  let indexOfAddedLayer: string | number = layerPath.slice(
    layerPath.lastIndexOf(".") + 1
  );
  let domainParentLayerPath = layerPath.slice(
    0,
    layerPath.lastIndexOf(".children")
  );
  if (layerPath.endsWith(":0")) {
    domainParentLayerPath = filePath;
  }
  const domainParentLayer = session.getLayerFromLayerPath(
    domainParentLayerPath
  );

  if (indexOfAddedLayer === "-") {
    // "-" means last index for fast-json-patch
    indexOfAddedLayer = domainParentLayer.children.length - 1;
  }
  layerPath =
    layerPath.slice(0, layerPath.lastIndexOf(".") + 1) + indexOfAddedLayer;
  const domainLayer = session.getLayerFromLayerPath(layerPath);

  if (!layerPath.endsWith(":0")) {
    // If parentLayer is a layer and not a file

    domainLayer.parent = domainParentLayer;
    // if (indexOfAddedLayer !== "-") {
    //   // "-" means last index
    //   domainParentLayer.appendChild(domainLayer, indexOfAddedLayer);
    // } else {
    //   domainParentLayer.appendChild(domainLayer);
    // }

    if (domainLayer instanceof DomainLayer) {
      domainLayer.restore();
    }
  } else {
    const file = session.domain.files.get(filePath);
    domainLayer.parent = file;
    // set(file as DomainFile, "layer", domainLayer);
  }

  if (layerPath.endsWith(":0")) {
    domainParentLayer.emit("layer");
  } else {
    domainParentLayer.emit("children");
  }
  const event = new SessionEvent("addLayer", {
    domainLayer,
    parentDomainLayer: domainLayer.parent,
    index:
      domainParentLayer.type === "file" || domainParentLayer.type === "text"
        ? undefined
        : domainLayer.findIndexInParent()
  });
  session.eventManager.dispatchEvent("addLayer", event);
}
