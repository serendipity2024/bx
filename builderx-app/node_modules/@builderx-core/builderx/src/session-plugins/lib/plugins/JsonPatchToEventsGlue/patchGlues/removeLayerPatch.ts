import { DomainLayer, DomainFile } from "domain-x";
import { Session } from "session";
import { SessionEvent } from "event-manager";
import { forEach } from "lodash";

export default function removeLayerPatch(
  session: Session,
  domainLayer: DomainLayer,
  parentDomainLayer: DomainFile | DomainLayer
) {
  const parentNode = domainLayer.parent;
  if (parentNode) {
    domainLayer.parent = undefined;
    if (domainLayer.dispose) {
      domainLayer.dispose();
    }
  } else {
    throw Error("Parent Node not found on Detach");
  }

  if (domainLayer instanceof DomainLayer) {
    parentDomainLayer.emit("children");
  }

  if (domainLayer.selected) {
    forEach(
      session.getLayersFromSelectedLayerCollection(),
      (layer: DomainLayer) => {
        layer.selected = false;
      }
    );

    session.selectedLayers = [];
    session.selectedNodes = [];

    session.currentStage.canvas.selectLayers([]);
  }

  const event = new SessionEvent("removeLayer", {
    layer: domainLayer
  });
  session.eventManager.dispatchEvent("removeLayer", event);
}
