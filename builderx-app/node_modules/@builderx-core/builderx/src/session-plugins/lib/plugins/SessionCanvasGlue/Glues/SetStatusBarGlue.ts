import { DomainLayer, LogicalExpression, DomainFile } from "domain-x";
import { Layer, PathEvent } from "@builderx-core/designer";
import { forEach, find } from "lodash";
import { SessionEvent } from "event-manager";
import { Session, StageArtboard, Mutators } from "session";
import { globalRefMap } from "global-ref-map";

export function updateStatusBar(domainFile: DomainFile, canvasLayer: Layer) {
  if (domainFile.isArtboard()) {
    const variableObj = domainFile.scopeVariables;
    if (
      domainFile.statusBar.display &&
      variableObj["deviceName"] !== "custom"
    ) {
      canvasLayer.executeFunction("StatusBar.add", {
        deviceName: variableObj["deviceName"],
        deviceOS: variableObj["platform"],
        deviceOrientation: variableObj["deviceOrientation"],
        barStyle: domainFile.statusBar.barStyle,
        backgroundColor: domainFile.statusBar.backgroundColor
      });
    } else {
      canvasLayer.executeFunction("StatusBar.remove");
    }
  }
}
function applySideEffects(session: Session, domainFile: DomainFile) {
  //

  const stageArtboards = globalRefMap.get(domainFile);
  const variableObj = domainFile.scopeVariables;
  forEach(stageArtboards, (stageArtboard: StageArtboard) => {
    const compiledLayers = globalRefMap.get(stageArtboard);
    forEach(compiledLayers, (canvasLayer: Layer) => {
      updateStatusBar(domainFile, canvasLayer);
    });
  });
}

export default function SetStatusBarGlue(session: Session, e: SessionEvent) {
  applySideEffects(session, e.payload.file);
}
