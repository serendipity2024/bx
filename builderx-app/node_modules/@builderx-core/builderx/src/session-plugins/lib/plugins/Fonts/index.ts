import { ISessionPlugin, SystemFont } from "common-interfaces";
import { Session } from "session";
import { apiSdk, ApiSdk } from "@builderx-core/api-sdk";
import urljoin from "url-join";
import { isEmpty, get } from "lodash";
import { Project } from "@builderx-core/api-sdk/dist/interfaces";

export default class FontsPlugin implements ISessionPlugin {
  name = "Fonts";
  session: Session;
  apiKey: string;
  fonts: Array<SystemFont>;

  init(session: Session) {
    this.apiKey = window["bxEnv"].fontApiKey;
    this.fonts = [];
  }

  activate() {}

  // async fetchFonts() {
  //   const response: any = await this.session.executeFunction(
  //     "getGoogleFonts",
  //     this.apiKey
  //   );
  //   this.insertToArray(response.data);
  //   return this.fonts;
  // }
  // async getFontPort(portStart: any, portEnd: any) {
  //   let rangeStart = portStart;
  //   let rangeEnd = portEnd;
  //   let response;
  //   return new Promise(async (resolve, reject) => {
  //     for (let i = rangeStart; i < rangeEnd; i++) {
  //       try {
  //         response = await this.apiSdk.raw.checkPort(i);
  //         if (response && response.data === "BuilderX-Tray-App") {
  //           resolve({ oldVersion: true });
  //           break;
  //         }
  //         if (response && typeof response.data === "object") {
  //           // TODO: change this to match with latest version of app
  //           resolve(i);
  //           break;
  //         }
  //       } catch (error) {
  //         if (i === rangeEnd - 1) {
  //           resolve(false);
  //         }
  //       }
  //     }
  //   });
  // }
  // async fetchLocalFonts() {
  //   let response: any;
  //   try {
  //     response = await this.apiSdk.assets.fetchLocalFonts();
  //   } catch (error) {
  //     return [];
  //   }
  //   return response.data;
  // }
  // insertToArray(googleFontData: { items: fontByGoogle[] }) {
  //   if (googleFontData.items) {
  //     for (var i: number = 0; i < googleFontData.items.length; i++) {
  //       var font: fontByGoogle = googleFontData.items[i];
  //       for (var j: number = 0; j < font.variants.length; j++) {
  //         var obj: SystemFont = {
  //           path: font.files[font.variants[j]],
  //           postscriptName:
  //             font.family
  //               .toLowerCase()
  //               .split(" ")
  //               .join("-") +
  //             "-" +
  //             font.variants[j].toLowerCase(),
  //           family: font.family,
  //           style: font.variants[j]
  //         };
  //         this.fonts.push(obj);
  //       }
  //     }
  //   }
  // }

  deactivate() {}
}
