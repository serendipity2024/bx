import { DomainLayer, DomainFile, Style } from "domain-x";
import { Session } from "session";
import { SessionEvent } from "event-manager";
import { forEach, last } from "lodash";

export default function setConfigurationPatch(
  session: Session,
  operation: any
) {
  const pathChunks = operation.path.split("/");

  const key: string = last(pathChunks) as string;
  const value = operation.value;

  if (session.drivers.configuration.userConfigurations) {
    session.drivers.configuration.userConfigurations[key] = value;
  }

  session.drivers.configuration.saveUserConfiguration();

  session.drivers.configuration.emit(key);

  if (key === "editor.grid.row" || key === "editor.grid.column") {
    const gridSizeData = {
      x:
        key === "editor.grid.row"
          ? value
          : session.drivers.configuration.get("editor.grid.row"),
      y:
        key === "editor.grid.column"
          ? value
          : session.drivers.configuration.get("editor.grid.column")
    };
    const event = new SessionEvent("setGridSize", {
      gridSizeData
    });
    session.eventManager.dispatchEvent("setGridSize", event);
  } else if (key === "editor.show.grid") {
    const event = new SessionEvent("setGridVisibility", {
      value
    });
    session.eventManager.dispatchEvent("setGridVisibility", event);
  } else if (key === "editor.show.ruler") {
    const event = new SessionEvent("setRulerVisibility", {
      value
    });
    session.eventManager.dispatchEvent("setRulerVisibility", event);
  } else if (
    key === "app.tutorial.userInitiated" ||
    key === "app.tutorial.skipped"
  ) {
    // const isAppTutorialSkipped =
    //   session.drivers.configuration.get("app.tutorial.skipped") ||
    //   session.drivers.configuration.get("app.tutorial.pageRefreshed");
    // const isUserInitiated = session.drivers.configuration.get(
    //   "app.tutorial.userInitiated"
    // );
    // if (
    //   !(
    //     isAppTutorialSkipped &&
    //     !session.isNewProject &&
    //     session.envConfig.runningContext === "session"
    //   ) &&
    //   !(isAppTutorialSkipped && isUserInitiated)
    //   // No idea how, but the above condition means we should show the tutorial
    // ) {
    //   const event = new SessionEvent("focusArtboard", {
    //     domainFile: session.selectedFile
    //   });
    //   session.eventManager.dispatchEvent("focusArtboard", event);
    // }
  } else if (key === "editor.snap") {
    const event = new SessionEvent("toggleSnap", {
      value
    });
    session.eventManager.dispatchEvent("toggleSnap", event);
  } else if (key.startsWith("editor.snap.")) {
    const event = new SessionEvent("setSnap", {
      key,
      value
    });
    session.eventManager.dispatchEvent("setSnap", event);
  } else {
    const event = new SessionEvent("setConfig", {
      key,
      value
    });

    session.eventManager.dispatchEvent("setConfig", event);
  }
}
