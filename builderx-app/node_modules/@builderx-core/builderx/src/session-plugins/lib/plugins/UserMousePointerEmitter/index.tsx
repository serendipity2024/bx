import { ISessionPlugin } from "common-interfaces";
import { Session } from "session";
import { SessionEvent } from "event-manager";
import { MouseEvent } from "@builderx-core/designer";

export default class UserMousePointerEmitter implements ISessionPlugin {
  name = "UserMousePointerEmitter";
  session: Session;
  init(session: Session) {
    this.session = session;
  }

  activate() {
    this.session.eventManager.addEventListener(
      "addStage",
      (event: SessionEvent) => {
        const stage = !event.payload.thumbnailStage
          ? this.session.stages.get(event.payload.stageId)
          : this.session.thumbnailStages.get(event.payload.stageId);
        if (stage && !event.payload.thumbnailStage) {
          stage.canvas.addEventListener("mousemove", (eve: MouseEvent) => {
            this.session.eventManager.dispatchEvent(
              "userMouseMove",
              new SessionEvent("userMouseMove", {
                stageId: event.payload.stageId,
                position: { x: eve.worldX, y: eve.worldY }
              })
            );
          });
        }
      }
    );
  }
  deactivate() {
    //
  }
}
