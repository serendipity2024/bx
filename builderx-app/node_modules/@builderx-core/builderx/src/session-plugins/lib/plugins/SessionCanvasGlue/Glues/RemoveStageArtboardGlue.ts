import { DomainLayer, LogicalExpression } from "domain-x";
import { Layer, PathEvent } from "@builderx-core/designer";
import { forEach, find } from "lodash";
import { SessionEvent } from "event-manager";
import { Session, StageArtboard, Mutators, Stage } from "session";
import { globalRefMap } from "global-ref-map";

function applySideEffects(
  session: Session,
  stageArtboard: StageArtboard,
  stage: Stage
) {
  // const compiledLayers = globalRefMap.get(stageArtboard);

  // if (compiledLayers) {
  stage.canvas.executeFunction("removeArtboard", stageArtboard.path);

  // compiledLayers.forEach((compiledLayer: Layer) => {
  //   if (compiledLayer.parent) {
  //     compiledLayer.parent.removeChild(compiledLayer);
  //   }
  // });

  globalRefMap.delete(stageArtboard);
}

export default function RemoveStageArtboardGlue(
  session: Session,
  e: SessionEvent
) {
  applySideEffects(session, e.payload.stageArtboard, e.payload.stage);
}
