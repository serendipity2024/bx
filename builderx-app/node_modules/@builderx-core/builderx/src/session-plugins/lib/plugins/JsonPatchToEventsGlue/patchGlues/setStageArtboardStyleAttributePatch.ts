import { DomainLayer, DomainFile, Style } from "domain-x";
import { Session } from "session";
import { SessionEvent } from "event-manager";
import { forEach } from "lodash";

export default function setStageArtboardStyleAttributePatch(
  session: Session,
  operation: any,
  stageId: string
) {
  const pathChunks = operation.path.split("/");

  const stylePropName = pathChunks[pathChunks.length - 2];

  let typeOfStage = pathChunks[1];
  typeOfStage = typeOfStage.slice(0, typeOfStage.indexOf(":::"));
  const stages = session[typeOfStage];
  const stage = stages.get(stageId);

  const indexOfStageArtboard = pathChunks.indexOf("stageArtboards");

  const stageArtboard =
    stage.stageArtboards[pathChunks[indexOfStageArtboard + 1]];

  if (!(stageArtboard.props[stylePropName] instanceof Style)) {
    const style = stageArtboard.props[stylePropName];
    stageArtboard.props[stylePropName] = new Style();

    forEach(style, (value, key) => {
      stageArtboard.props[stylePropName].set(key, value);
    });
  }

  if (session.currentStage.dragging) {
    stageArtboard.emit("onDragstageArtboard");
  } else {
    stageArtboard.props[stylePropName].emit(pathChunks[pathChunks.length - 1]);
  }

  const event = new SessionEvent("setStageArtboardStyleAttribute", {
    stageArtboard,
    key: pathChunks[pathChunks.length - 1],
    value: operation.value
  });
  session.eventManager.dispatchEvent("setStageArtboardStyleAttribute", event);
  // return stageArtboard;
}
