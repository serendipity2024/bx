import { SessionEvent } from "event-manager";
import { Session, StageArtboard, Mutators } from "session";
import { DomainLayer } from "domain-x";
import { forEach } from "lodash";
import { Layer } from "@builderx-core/designer";
import { globalRefMap } from "global-ref-map";

export function applySideEffects(
  session: Session,
  domainLayer: DomainLayer,
  lock: boolean
) {
  const domainCompiledLayers = globalRefMap.get(domainLayer);

  if (domainCompiledLayers) {
    forEach(domainCompiledLayers, (compiledLayer: Layer) => {
      if (lock) {
        compiledLayer.lock();
      } else {
        compiledLayer.unlock();
      }

      if (domainLayer.parent && domainLayer.parent.type === "scrollView") {
        if (
          domainLayer.parent !== session.currentRootLayer ||
          session.currentStage.id === "artboard"
        ) {
          // const compiledScrollViewChild: Layer = domainLayer.getOwnCanvasRef();
          compiledLayer.lock();
        }
      }
    });
  }
}

export default function SetLayerLockGlue(session: Session, e: SessionEvent) {
  applySideEffects(session, e.payload.domainLayer, e.payload.lock);
}
