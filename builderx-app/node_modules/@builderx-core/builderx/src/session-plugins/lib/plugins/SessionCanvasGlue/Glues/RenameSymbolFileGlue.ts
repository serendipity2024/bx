import { DomainLayer, LogicalExpression, DomainFile } from "domain-x";
import { Layer, PathEvent } from "@builderx-core/designer";
import { forEach, find } from "lodash";
import { SessionEvent } from "event-manager";
import { Session, StageArtboard, Mutators } from "session";
import { globalRefMap } from "global-ref-map";

function applySideEffects(session: Session, file: DomainFile, newName: string) {
  const symbolStage = session.stages.get(file.path);
  if (!symbolStage) {
    return;
  }

  const compiledFile = session.executeFunction(
    "getOwnCanvasRef",
    file,
    symbolStage.canvas
  );

  if (compiledFile) {
    // compiledFile.executeFunction("LayerLabel.remove");
    compiledFile.executeFunction("LayerLabel.set", newName + ".js");
  }
}

export default function RenameSymbolFileGlue(
  session: Session,
  e: SessionEvent
) {
  applySideEffects(session, e.payload.file, e.payload.newName);
}
