import * as React from "react";
import {
  Window,
  WindowBody,
  WindowFooter,
  Pane,
  ModalContainer,
  ModalBackdrop,
  ModalContent
} from "components-x";

import { Session } from "session";
export default class WindowsWrapper extends React.PureComponent<
  {
    session: Session;
    windowsData: { windows: Array<any>; currentWindowId: number };
  },
  {}
> {
  onUpdate = (keys: any) => {
    this.forceUpdate();
  };
  componentDidMount() {
    this.props.session.on("WindowProvider", this.onUpdate);
  }
  componentWillUnmount() {
    this.props.session.off("WindowProvider", this.onUpdate);
  }
  render() {
    let { windows, currentWindowId } = this.props.windowsData;
    let currentWindow = windows[currentWindowId];
    if (currentWindowId === -1 || !windows[currentWindowId]) {
      return null;
    }
    const { modalProps, modalFooter, modalFooterProps } = currentWindow;
    return (
      <ModalContainer style={{ pointerEvents: "auto" }}>
        <ModalBackdrop
          uiBackground={modalProps.backdropBackground}
          onClick={() =>
            this.props.session.executeFunction(`WindowProvider.hide`)
          }
        />
        <ModalContent
          uiSize={modalProps.modalSize}
          maxHeight={modalProps.maxHeight}
        >
          <Window uiSize={modalProps.modalSize}>
            <WindowBody uiSize={modalProps.modalSize}>
              <Pane
                height={modalProps.height}
                padder={modalProps.padder}
                uiBackground={modalProps.background}
              >
                {currentWindow.component()}
              </Pane>
            </WindowBody>
            {modalFooter ? (
              <WindowFooter {...modalFooterProps}>
                <Pane
                  height={modalFooterProps.height}
                  padder={modalProps.padder}
                  uiBackground={modalProps.background}
                >
                  {modalFooter()}
                </Pane>
              </WindowFooter>
            ) : null}
          </Window>
        </ModalContent>
      </ModalContainer>
    );
  }
}
