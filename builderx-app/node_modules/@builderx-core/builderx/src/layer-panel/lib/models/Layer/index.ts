// import { Model } from "model";
// import { INode } from "common-interfaces";
// import { types } from "serializable";
// import { findIndex, isNil } from "lodash";
// export default class Layer extends Model implements INode<Layer> {
//   x: number;
//   y: number;
//   width: number;
//   height: number;
//   children: Array<Layer>;
//   ref: any;
//   domainCompiledRefs: any;
//   parent: any;
//   type: string;
//   beforeDisposeCallback?: (ref: any) => void;

//   constructor(layerJson: any) {
//     super();
//     this.x = layerJson.x;
//     this.y = layerJson.y;
//     this.width = layerJson.width;
//     this.height = layerJson.height;
//     this.type = layerJson.type;
//     this.children = [];
//   }
//   getFields() {
//     return {
//       x: types.literal,
//       y: types.literal,
//       width: types.literal,
//       height: types.literal,
//       type: types.literal,
//       children: types.array(Layer)
//     };
//   }

//   beforeDispose(beforeDisposeCallback?: (ref: any) => void) {
//     this.beforeDisposeCallback = beforeDisposeCallback;
//   }

//   dispose() {
//     if (this.beforeDisposeCallback) {
//       this.beforeDisposeCallback(this);
//     }
//     // traverse children and dispose
//   }
//   addLayer(layer: Layer, index?: number): number {
//     return layer.appendTo(this, index);
//   }
//   appendTo(parentNode: Layer, index?: number) {
//     this["parent"] = parentNode;
//     if (!parentNode.children) {
//       throw new Error("layer's children property not defined");
//     }
//     if (index) {
//       parentNode.children.splice(index, 0, this);
//     } else {
//       parentNode.children.push(this);
//       index = parentNode.children.length - 1;
//     }
//     return index;
//   }
//   appendChild(childNode: any, index?: number) {
//     // this["parent"] = parentNode;
//     // if (!parentNode.children) {
//     //   throw new Error("renderCompiled layer's children property not defined");
//     // }
//     if (index) {
//       this.children.splice(index, 0, childNode);
//     } else {
//       this.children.push(childNode);
//       index = this.children.length - 1;
//     }
//     childNode.parent = this;
//     return index;
//   }

//   remove() {
//     const parentNode = this["parent"];
//     if (parentNode) {
//       this["parent"] = undefined;
//       const index = findIndex(parentNode.children, (child: Layer) => {
//         return child === this;
//       });
//       if (!isNil(index)) {
//         parentNode.children.splice(index, 1);
//       }
//       return index;
//     } else {
//       // console.log("Parent Node not found on Detach");
//       return null;
//     }
//   }
//   removeChild(index: number) {
//     this.children[index]["parent"] = undefined;
//     let childNode: Layer;
//     childNode = this.children[index];
//     this.children.splice(index, 1);
//     return childNode;
//   }
//   getPath(node?: any): string {
//     if (!node) {
//       node = this;
//     }
//     if (node.type === "root") {
//       return `0`;
//     } else if (node.type && node.parent && node.parent.children) {
//       const parentChildren: Array<any> = node.parent.children;
//       const childIndex = findIndex(parentChildren, (child: any) => {
//         if (child) {
//           return node === child;
//         }
//         return false;
//       });
//       return `${this.getPath(node.parent)}.${childIndex}`;
//     } else {
//       return "";
//     }
//   }
// }
