import * as React from "react";

import { Model, enableLog } from "../lib";
import { action } from "../lib/model";
enableLog();

class TestModel extends Model {
  x: string = "enwef";
  a: number = 89;
  b: number = 21;
  getFields() {
    return {
      //
    };
  }
  test = () => {
    //
  };
}

class App extends React.Component {
  testModel: TestModel;
  constructor(props: any) {
    super(props);
    this.testModel = new TestModel();
  }

  componentDidMount() {
    this.testModel.on(["a", "b"], this.onUpdate);
    // this.testModel.on(["*"], this.onUpdate2);
  }

  onUpdate = (key: any) => {
    console.log("listener 1 triggered", key);
    this.forceUpdate();
  };

  onUpdate2 = (key: any) => {
    console.log("listener 2 triggered", key);
    this.forceUpdate();
  };

  emitEvent = () => {
    // action(() => {
    this.testModel.emit(["a"]);
    this.testModel.emit(["a"]);
    // });
    // this.testModel.emit(["c"]);
    // this.testModel.emit("b");
  };

  removeListener = () => {
    this.testModel.off(["a", "b"], this.onUpdate);
    this.testModel.off(["*"], this.onUpdate2);
  };

  public render() {
    return (
      <div>
        Check logs for emitted events
        <button
          style={{ backgroundColor: "blue", color: "white" }}
          onClick={this.emitEvent}
        >
          Emit event
        </button>
        <button
          style={{ backgroundColor: "red", color: "white" }}
          onClick={this.removeListener}
        >
          Remove event listener
        </button>
      </div>
    );
  }
}

export default App;
