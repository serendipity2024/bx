export default {
  path: "/src/components/MaterialMessageTextbox.js",
  isDirty: false,
  props: {
    style: {
      width: 375,
      height: 90,
      position: "absolute"
    }
  },
  scopeVariables: {
    deviceName: "iPhone X"
  },
  layer: {
    type: "root",
    styleName: "container",
    import: {
      layerName: "View",
      packageName: "native",
      isDefaultImport: false
    },
    props: {
      style: {
        backgroundColor: "transparent"
      }
    },
    children: [
      {
        type: "text",
        styleName: "label",
        import: {
          layerName: "Text",
          packageName: "native",
          isDefaultImport: false
        },
        props: {
          style: {
            fontFamily: "Roboto",
            fontSize: 12,
            textAlign: "left",
            color: {
              type: "conditionalExpression",
              test: {
                type: "expression",
                expression: "this.props.error"
              },
              consequent: {
                type: "literal",
                value: "red"
              },
              alternate: {
                type: "conditionalExpression",
                test: {
                  type: "expression",
                  expression: "this.props.success"
                },
                consequent: {
                  type: "literal",
                  value: "green"
                },
                alternate: {
                  type: "literal",
                  value: "rgba(0,0,0,0.6)"
                }
              }
            },
            paddingTop: 16
          }
        },
        children: [
          {
            type: "literal",
            value: "Label"
          }
        ],
        locked: false,
        template: {
          centerVertical: false,
          centerHorizontal: false
        }
      },
      {
        type: "textInput",
        styleName: "inputStyle",
        import: {
          layerName: "TextInput",
          packageName: "native",
          isDefaultImport: false
        },
        props: {
          placeholder: "Input",
          style: {
            borderBottomWidth: 1,
            borderColor: "#D9D5DC",
            color: "#000",
            fontFamily: "Roboto",
            fontSize: 16,
            alignSelf: "stretch",
            flex: 1,
            lineHeight: 16,
            paddingTop: 8,
            paddingBottom: 8,
            width: "100%",
            borderBottomColor: {
              type: "conditionalExpression",
              test: {
                type: "expression",
                expression: "this.props.error"
              },
              consequent: {
                type: "literal",
                value: "red"
              },
              alternate: {
                type: "conditionalExpression",
                test: {
                  type: "expression",
                  expression: "this.props.success"
                },
                consequent: {
                  type: "literal",
                  value: "green"
                },
                alternate: {
                  type: "literal",
                  value: "#D9D5DC"
                }
              }
            }
          }
        },
        children: [],
        locked: false,
        template: {
          centerVertical: false,
          centerHorizontal: false
        }
      },
      {
        type: "conditionalExpression",
        test: {
          type: "expression",
          expression: "this.props.error"
        },
        alternate: {
          type: "literal",
          value: {
            type: "unknown",
            children: [],
            import: {
              layerName: ""
            },
            props: {},
            template: {}
          }
        },
        consequent: {
          type: "literal",
          value: {
            type: "text",
            styleName: "helper1",
            import: {
              layerName: "Text",
              packageName: "native",
              isDefaultImport: false
            },
            props: {
              style: {
                fontFamily: "Roboto",
                fontSize: 12,
                textAlign: "left",
                paddingTop: 8,
                color: {
                  type: "conditionalExpression",
                  test: {
                    type: "expression",
                    expression: "this.props.error"
                  },
                  consequent: {
                    type: "literal",
                    value: "red"
                  },
                  alternate: {
                    type: "literal",
                    value: "transparent"
                  }
                }
              }
            },
            children: [
              {
                type: "literal",
                value: "Error message"
              }
            ],
            locked: false,
            template: {
              centerVertical: false,
              centerHorizontal: false
            }
          }
        }
      },
      {
        type: "conditionalExpression",
        test: {
          type: "expression",
          expression: "this.props.success"
        },
        alternate: {
          type: "literal",
          value: {
            type: "unknown",
            children: [],
            import: {
              layerName: ""
            },
            props: {},
            template: {}
          }
        },
        consequent: {
          type: "literal",
          value: {
            type: "text",
            styleName: "helper2",
            import: {
              layerName: "Text",
              packageName: "native",
              isDefaultImport: false
            },
            props: {
              style: {
                fontFamily: "Roboto",
                fontSize: 12,
                textAlign: "left",
                paddingTop: 8,
                color: {
                  type: "conditionalExpression",
                  test: {
                    type: "expression",
                    expression: "this.props.success"
                  },
                  consequent: {
                    type: "literal",
                    value: "green"
                  },
                  alternate: {
                    type: "literal",
                    value: "transparent"
                  }
                }
              }
            },
            children: [
              {
                type: "literal",
                value: "Success message"
              }
            ],
            locked: false,
            template: {
              centerVertical: false,
              centerHorizontal: false
            }
          }
        }
      }
    ],
    locked: false,
    template: {
      centerVertical: false,
      centerHorizontal: false
    }
  }
};
