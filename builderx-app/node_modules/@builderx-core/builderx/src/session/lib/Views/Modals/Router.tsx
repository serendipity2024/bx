import * as React from "react";
import { Session } from "./../../models/Session";

// import FeedbackIssueWrapper from "./FeedbackIssueWrapper";
import WarningModal from "./WarningModal";
import UserSettings from "./Settings/User";
import LicenceKeyForm from "./Licence";
import Shortcuts from "./Shortcuts";
import MissingArtboards from "./MissingArtboards";
import ChangeEmailAddress from "./ChangeEmailAddress";
import NoInternet from "./NoInternet";
import SocketDisconnect from "./SocketDisconnect";

// import MinSizeModal from "./MinSizeModal";
// import MessageCenterContainer from "./MessageCenter";
// import SketchConversionInfo from "./SketchConversionInfo";
// import SelectArtboard from "./SelectArtboard";
// import ExpoExistingUserPanel from "./ExpoExistingUserPanel";
// import ExpoNewUserPanel from "./ExpoNewUserPanel";
// import SketchImportModal from "./SketchImportModal";
// import FileDiffModal from "./FileDiffModal";
// import MissingArtboardImport from "./MissingArtboardsImport";

type propType = {
  session: Session;
};

export default class ModalRouter extends React.PureComponent<propType, any> {
  componentDidMount() {
    this.props.session.modalRouter.on("currentRoute", this.onUpdate);
  }
  componentWillUnmount() {
    this.props.session.modalRouter.off("currentRoute", this.onUpdate);
  }
  onUpdate = () => {
    this.forceUpdate();
  };
  render() {
    let session = this.props.session;
    switch (session.modalRouter.currentRoute) {
      // case "feedback":
      //   return <FeedbackIssueWrapper session={session} activeTab={0} />;
      // case "issue":
      //   return <FeedbackIssueWrapper session={session} activeTab={1} />;
      case "settings":
        return <UserSettings session={session} />;
      case "warningModal":
        return <WarningModal session={session} />;
      // case "recoverCrash":
      //   return <CrashRecovery session={session} />;
      case "activation/licencekeyform":
        return <LicenceKeyForm session={session} />;
      case "activation/changeEmailAddress":
        return <ChangeEmailAddress session={session} />;
      case "missingArtboards":
        return <MissingArtboards session={session} />;
      case "noInternet":
        return <NoInternet session={session} />;
      case "socketDisconnect":
        return <SocketDisconnect session={session} />;
      case "shortcuts":
        return <Shortcuts session={session} />;
      //   case "minSizeModal":
      //     return <MinSizeModal />;
      //   case "messageCenter":
      //     return <MessageCenterContainer />;
      //   case "expo/existingUser":
      //     return <ExpoExistingUserPanel />;
      //   case "expo/newUser":
      //     return <ExpoNewUserPanel />;
      //   case "sketchImport":
      //     return <SketchImportModal />;
      //   case "fileDiffModal":
      //     return <FileDiffModal />;
      //   case "sketchImportFilesError":
      //     return <MissingArtboardImport />;
      default:
        return null;
    }
  }
}
