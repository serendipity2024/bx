import * as React from "react";

import { SplitPane, WrapperDiv, Icon, Button } from "components-x";
import { Session } from "../../../models/Session";
import LeftPanel from "../Panels/LeftPanel";
import { EditorLayout } from "common-interfaces";
import { action } from "model";
import SetEditorLayout from "../../../Commands/Session/SetEditorLayout";
import InsertToolbar from "../Toolbars/InsertToolbar";
import ExternalComponentsRenderer from "../ExternalComponentsRenderer";

export default class LeftExpandablePanel extends React.PureComponent<
  {
    session: Session;
    sharedComponentSession: Session;
    onExpand: any;
  },
  any
> {
  constructor(props: any) {
    super(props);
    this.state = {
      panelSize: 50
    };
  }
  setEditorLayout(layout: EditorLayout) {
    action(() => {
      if (this.props.session.editorLayout.current === layout) {
        layout = undefined;
      }
      this.props.session.commandManager.executeAndSkip(
        new SetEditorLayout(this.props.session, layout)
      );
    });
  }
  render() {
    return (
      <SplitPane
        split="vertical"
        allowResize={false}
        defaultSize={this.state.panelSize}
        style={{ overflow: "visible" }}
      >
        <WrapperDiv
          uiBackground={800}
          style={{
            height: "100%",
            opacity: this.props.session.readonly ? 0.5 : 1,
            borderRight: "1px solid black"
          }}
        >
          <InsertToolbar
            session={this.props.session}
            currentStage={this.props.session.currentStage}
          />
          <WrapperDiv
            style={{
              position: "absolute",
              bottom: 0,
              width: 50
            }}
          >
            <ExternalComponentsRenderer
              session={this.props.session}
              placement="left-panel-expandable"
            />
            <ExternalComponentsRenderer
              session={this.props.session}
              placement="left-panel-expandable-layer:before"
            />
            <WrapperDiv
              style={{
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                padding: "10px"
              }}
              id="app-tutorial-left-panel-layout-button"
            >
              <Button
                data-cypress-id="left-expandable-layers"
                barButton
                style={{ width: 40, height: 34 }}
                transparent
                headerMenu
                active={false}
                icon={
                  <Icon
                    className={
                      this.props.session.editorLayout.current === "layers"
                        ? "highlight-filter"
                        : ""
                    }
                    name="icon_layer"
                    size={16}
                  />
                }
                onClick={() => {
                  this.setEditorLayout("layers");
                }}
                data-tip="Layers"
                data-for="tooltip-right"
              />
            </WrapperDiv>
            <ExternalComponentsRenderer
              session={this.props.session}
              placement="left-panel-expandable-layer:after"
            />
            <ExternalComponentsRenderer
              session={this.props.session}
              placement="left-panel-expandable-shared-components:before"
            />
            <WrapperDiv
              style={{
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                padding: "10px"
              }}
            >
              <Button
                data-cypress-id="left-expandable-shared-components"
                barButton
                style={{ width: 40, height: 34 }}
                transparent
                headerMenu
                active={false}
                icon={
                  <Icon
                    className={
                      this.props.session.editorLayout.current === "components"
                        ? "highlight-filter"
                        : ""
                    }
                    name="icon_symbol"
                    size={16}
                  />
                }
                onClick={() => {
                  this.setEditorLayout("components");
                }}
                data-tip="Component Library"
                data-for="tooltip-right"
              />
            </WrapperDiv>
            <ExternalComponentsRenderer
              session={this.props.session}
              placement="left-panel-expandable-layer:after"
            />
          </WrapperDiv>
        </WrapperDiv>
        <WrapperDiv
          id="app-tutorial-left-panel"
          uiBackground={800}
          style={{
            height: "100%",
            opacity: this.props.session.readonly ? 0.5 : 1
          }}
        >
          {!this.props.session.readonly && (
            <LeftPanel
              session={this.props.session}
              sharedComponentSession={this.props.sharedComponentSession}
              showCodeEditor={false}
            />
          )}
        </WrapperDiv>
      </SplitPane>
    );
  }
}
