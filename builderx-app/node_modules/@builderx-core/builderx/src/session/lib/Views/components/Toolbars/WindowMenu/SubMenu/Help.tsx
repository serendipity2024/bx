import * as React from "react";
import { Session } from "session";
import { IEvent } from "common-interfaces";
import {
  Option,
  OptionMenu,
  MenuDropdown,
  OptionMenuTitle,
  OptionMenuRight,
  Icon
} from "components-x";
type propType = {
  onEvent: (event: IEvent) => void;
  session: Session;
  uiSize: number;
};
import urljoin from "url-join";

export default class Help extends React.PureComponent<propType, any> {
  render() {
    return (
      <Option>
        <OptionMenu data-cypress-id="window-menu-help">
          <OptionMenuTitle>Help</OptionMenuTitle>
          <OptionMenuRight>
            <Icon name="right-arrow" size={12} />
          </OptionMenuRight>
        </OptionMenu>
        <MenuDropdown child uiSize={this.props.uiSize}>
          <Option
            id="feedback"
            onClick={() => {
              this.props.session.drivers.analyticsService.addActivity(
                {
                  name: "menu.sendFeedback.click",
                  category: "app/User Action"
                },
                true
              );
              window.open(this.props.session.envConstants.SUPPORT_URL);
            }}
          >
            <OptionMenu data-cypress-id="window-menu-help-send-feedback">
              <OptionMenuTitle>Send Feedback</OptionMenuTitle>
            </OptionMenu>
          </Option>
          <Option
            id="issue"
            onClick={() => {
              this.props.session.drivers.analyticsService.addActivity(
                {
                  name: "menu.reportAnIssue.click",
                  category: "app/User Action"
                },
                true
              );
              window.open(this.props.session.envConstants.SUPPORT_URL);
            }}
          >
            <OptionMenu data-cypress-id="window-menu-help-report-issue">
              <OptionMenuTitle>Report an Issue</OptionMenuTitle>
            </OptionMenu>
          </Option>
          <Option
            id="documentation"
            onClick={() => {
              this.props.session.drivers.analyticsService.addActivity(
                {
                  name: "menu.documentation.click",
                  category: "app/User Action"
                },
                true
              );
              window.open(
                urljoin(this.props.session.envConstants.WEBSITE_URL, "learn")
              );
            }}
          >
            <OptionMenu data-cypress-id="window-menu-help-doc">
              <OptionMenuTitle>Documentation</OptionMenuTitle>
            </OptionMenu>
          </Option>
          <Option
            id="runTutorial"
            onClick={() => {
              this.props.session.drivers.analyticsService.addActivity(
                {
                  name: "menu.runTutorial.click",
                  category: "app/User Action"
                },
                true
              );
              this.props.onEvent({
                type: "runTutorial",
                target: null,
                originalEvent: null,
                payload: null
              });
            }}
          >
            {!this.props.session.readonly && (
              <OptionMenu data-cypress-id="window-menu-help-run-tutorial">
                <OptionMenuTitle>Run Tutorial</OptionMenuTitle>
              </OptionMenu>
            )}
          </Option>
          <Option
            id="resumeTutorial"
            label="Resume Tutorial"
            onClick={() => {
              this.props.session.drivers.analyticsService.addActivity(
                {
                  name: "menu.resumeTutorial.click",
                  category: "app/User Action"
                },
                true
              );
              this.props.onEvent({
                type: "resumeTutorial",
                target: null,
                originalEvent: null,
                payload: null
              });
            }}
          >
            {!this.props.session.readonly && (
              <OptionMenu data-cypress-id="window-menu-help-resume-tutorial">
                <OptionMenuTitle>Resume Tutorial</OptionMenuTitle>
              </OptionMenu>
            )}
          </Option>
          <Option
            id="keyboard-shortcuts"
            onClick={() => {
              this.props.session.drivers.analyticsService.addActivity(
                {
                  name: "menu.keyboardShortcuts.click",
                  category: "app/User Action"
                },
                true
              );
              this.props.onEvent({
                type: "openShortcuts",
                target: null,
                originalEvent: null,
                payload: null
              });
            }}
          >
            <OptionMenu data-cypress-id="window-menu-help-shortcuts">
              <OptionMenuTitle>Keyboard Shortcuts</OptionMenuTitle>
            </OptionMenu>
          </Option>
          <Option
            id="changelog"
            onClick={() => {
              this.props.session.drivers.analyticsService.addActivity(
                {
                  name: "menu.changeLog.click",
                  category: "app/User Action"
                },
                true
              );
              window.open(
                urljoin(
                  this.props.session.envConstants.WEBSITE_URL,
                  "changelog"
                )
              );
            }}
          >
            <OptionMenu data-cypress-id="window-menu-help-changelog">
              <OptionMenuTitle>Changelog</OptionMenuTitle>
            </OptionMenu>
          </Option>
          <Option
            id="pricing"
            onClick={() => {
              this.props.session.drivers.analyticsService.addActivity(
                {
                  name: "menu.pricing.click",
                  category: "app/User Action"
                },
                true
              );
              window.open(
                urljoin(this.props.session.envConstants.WEBSITE_URL, "pricing")
              );
            }}
          >
            <OptionMenu data-cypress-id="window-menu-help-pricing">
              <OptionMenuTitle>Pricing</OptionMenuTitle>
            </OptionMenu>
          </Option>
          <Option
            id="download-manager"
            onClick={() => {
              this.props.session.drivers.analyticsService.addActivity(
                {
                  name: "downloadDesktopManager.click",
                  category: "app/User Action"
                },
                true
              );
              window.open(
                urljoin(
                  this.props.session.envConstants.WEBSITE_URL,
                  "desktop-app-server",
                  "download"
                )
              );
            }}
          >
            <OptionMenu data-cypress-id="window-menu-help-download-manager">
              <OptionMenuTitle>Download Desktop Manager</OptionMenuTitle>
            </OptionMenu>
          </Option>
          <Option
            id="learnMore"
            onClick={() => {
              this.props.session.drivers.analyticsService.addActivity(
                {
                  name: "documentation.click",
                  category: "app/User Action"
                },
                true
              );
              window.open("http://builderx.io");
            }}
          >
            <OptionMenu data-cypress-id="window-menu-help-learn-more">
              <OptionMenuTitle>Learn More</OptionMenuTitle>
            </OptionMenu>
          </Option>
        </MenuDropdown>
      </Option>
    );
  }
}
