import * as React from "react";
import {
  TabMenu,
  TabBody,
  TabHeader,
  Tab,
  Tabs,
  Window,
  WindowBody,
  ModalContainer,
  ModalBackdrop,
  ModalContent
} from "components-x";
import { Session } from "./../../../models/Session";
import SetModalRoute from "./../../../Commands/Router/SetModalRoute";
import Feedback from "./Feedback";
import Issue from "./Issue";
import { action } from "model";
type propType = {
  session: Session;
  activeTab: number;
};
export default class FeedbackIssueWrapper extends React.Component<
  propType,
  any
> {
  render() {
    let session = this.props.session;
    return (
      <ModalContainer>
        <ModalBackdrop
          onClick={() => {
            action(() => {
              session.commandManager.executeAndSkip(
                new SetModalRoute(session, "")
              );
            });
          }}
        />
        <ModalContent uiSize="s">
          <Window>
            <WindowBody>
              <Tabs>
                <TabHeader>
                  <Tab
                    first
                    selected={this.props.activeTab === 0}
                    onClick={() => {
                      action(() => {
                        this.props.session.commandManager.executeAndSkip(
                          new SetModalRoute(this.props.session, "feedback")
                        );
                      });
                    }}
                  >
                    Feedback
                  </Tab>
                  <Tab
                    selected={this.props.activeTab === 1}
                    onClick={() => {
                      action(() => {
                        this.props.session.commandManager.executeAndSkip(
                          new SetModalRoute(this.props.session, "issue")
                        );
                      });
                    }}
                  >
                    Issue
                  </Tab>
                  <TabMenu />
                </TabHeader>
                <TabBody padder>
                  {this.props.activeTab === 0 && <Feedback session={session} />}
                  {this.props.activeTab === 1 && <Issue session={session} />}
                </TabBody>
              </Tabs>
            </WindowBody>
          </Window>
        </ModalContent>
      </ModalContainer>
    );
  }
}
