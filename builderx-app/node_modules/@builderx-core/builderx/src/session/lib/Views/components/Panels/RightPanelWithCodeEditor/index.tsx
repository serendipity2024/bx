import { TabBody, Tabs, WrapperDiv } from "components-x";
import { get } from "lodash";
import * as React from "react";
import Stage from "../../../../models/Stage";
import CodeEditor from "../../CodeEditor";
import RightPanel from "../RightPanel";
import { Session } from "../../../../models/Session";
import { IEvent } from "common-interfaces";
import LayerPreview from "../../LayerPreview";
import SplitPane from "react-split-pane";
type propType = {
  session: Session;
  onEvent: (event: IEvent) => void;
  onClickCodeEditorSize: () => void;
};
class RightPanelWithCodeEditor extends React.PureComponent<propType, any> {
  prevStage: Stage;
  componentDidMount() {
    this.props.session.on(
      ["selectedFile", "selectedLayers", "showCodeEditor", "projectLock"],
      this.onUpdate
    );
    this.prevStage = this.props.session.currentStage;
  }
  onUpdate = () => {
    this.forceUpdate();
  };

  componentDidUpdate() {
    if (this.prevStage !== this.props.session.currentStage) {
      this.prevStage.tools.off("showCodeEditor", this.onUpdate);
      this.props.session.on("showCodeEditor", this.onUpdate);
      this.prevStage = this.props.session.currentStage;
    }
  }

  componentWillUnmount() {
    this.props.session.off(
      ["selectedFile", "selectedLayers", "showCodeEditor", "projectLock"],
      this.onUpdate
    );
  }

  render() {
    const { session } = this.props;
    const showCodeEditorCondition = session.showCodeEditor || session.readonly;
    const innerHeight = get(window, "innerHeight", undefined);
    return (
      <WrapperDiv
        style={{
          height: "100%",
          borderLeft: "1px solid black"
        }}
      >
        <Tabs
          style={{
            height: "100%"
          }}
        >
          {!session.showCodeEditor && !session.readonly && (
            <TabBody
              style={{
                height: "100%"
              }}
            >
              <WrapperDiv
                style={{
                  height: "100%",
                  opacity: this.props.session.readonly ? 0.5 : 1
                }}
              >
                <RightPanel session={session} />
              </WrapperDiv>
            </TabBody>
          )}
          {showCodeEditorCondition && (
            <SplitPane
              split="horizontal"
              resizerClassName="layer-preview-resizer-pane"
              className="layer-preview-pane"
              pane2Style={{ overflow: "auto" }}
              defaultSize={(innerHeight || 357) * 0.5}
              maxSize={(innerHeight || 535.5) * 0.75}
              minSize={200}
            >
              <LayerPreview
                selectedFile={session.selectedFile}
                onEvent={this.props.onEvent}
                session={session}
                changeSize={this.props.onClickCodeEditorSize}
              />

              <CodeEditor
                onEvent={this.props.onEvent}
                session={session}
                width={get(window, "innerWidth", 500) * 0.5}
              />
            </SplitPane>
          )}
        </Tabs>
      </WrapperDiv>
    );
  }
}

export default RightPanelWithCodeEditor;
