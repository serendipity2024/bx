import * as React from "react";
import { IEvent } from "common-interfaces";
import {
  Window,
  WindowBody,
  Tabs,
  Tab,
  TabHeader,
  TabBody,
  ModalContainer,
  ModalBackdrop,
  ModalContent
} from "components-x";
import SetModalRoute from "./../../../../Commands/Router/SetModalRoute";
import { Session } from "../../../../models/Session";
import GuidesAndGrid from "./GuidesAndGrids";
import Editor from "./Editor";
import { action } from "model";

type propType = {
  session: Session;
};

export default class UserSettings extends React.PureComponent<
  propType,
  { activeTab: number }
> {
  constructor(props: propType) {
    super(props);
    this.state = {
      activeTab: 0
    };
  }
  componentDidMount() {
    document.addEventListener("keyup", this._handleKeyDown);
  }
  componentWillUnmount() {
    document.removeEventListener("keyup", this._handleKeyDown);
  }
  _handleKeyDown = (event: any) => {
    const ESCAPE_KEY = 27;
    const ENTER_KEY = 13;
    switch (event.keyCode) {
      case ESCAPE_KEY:
        this.exitModal();
        break;
      case ENTER_KEY:
        break;
      default:
        break;
    }
  };
  exitModal = () => {
    action(() => {
      this.props.session.commandManager.executeAndSkip(
        new SetModalRoute(this.props.session, "")
      );
    });
  };
  setActiveTab(activeTab: number) {
    this.setState({ activeTab });
  }
  render() {
    return (
      <ModalContainer>
        <ModalBackdrop onClick={this.exitModal} />
        <ModalContent uiSize="ms">
          <Window
            onKeyUp={(e: any) => {
              if (e.keyCode === 27) {
                this.exitModal();
              }
            }}
          >
            <WindowBody>
              <Tabs vertical>
                <TabHeader vertical className="py-2" style={{ minWidth: 220 }}>
                  <Tab
                    style={{ fontSize: 18 }}
                    selected={this.state.activeTab === 0}
                    onClick={() => {
                      this.setActiveTab(0);
                    }}
                    className="py-4"
                  >
                    Guides, Grids & Slices
                  </Tab>
                  <Tab
                    selected={this.state.activeTab === 1}
                    onClick={() => {
                      this.setActiveTab(1);
                    }}
                    style={{ fontSize: 18 }}
                    className="py-4"
                  >
                    Editor
                  </Tab>
                </TabHeader>
                <TabBody>
                  {this.state.activeTab === 0 ? (
                    <GuidesAndGrid session={this.props.session} />
                  ) : null}
                  {this.state.activeTab === 1 ? (
                    <Editor session={this.props.session} />
                  ) : null}
                </TabBody>
              </Tabs>
            </WindowBody>
          </Window>
        </ModalContent>
      </ModalContainer>
    );
  }
}
