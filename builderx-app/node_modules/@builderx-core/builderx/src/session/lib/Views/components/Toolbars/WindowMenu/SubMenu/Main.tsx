import * as React from "react";
import {
  Option,
  OptionMenu,
  MenuDropdown,
  OptionMenuTitle,
  OptionMenuRight,
  Icon
} from "components-x";
import { Session } from "../../../../../models/Session";
import Stage from "../../../../../models/Stage";
import { IEvent } from "common-interfaces";

type propType = {
  session: Session;
  currentStage: Stage;
  onEvent: (event: IEvent) => void;
  uiSize: number;
};
export default class Main extends React.Component<propType, any> {
  render() {
    const { session } = this.props;
    let currentRoute = session.pageRouter.currentRoute;
    let wrkspcOpsDisabled = currentRoute !== "workspace";
    return (
      <Option>
        {!this.props.session.readonly && (
          <OptionMenu data-cypress-id="window-menu-main">
            <OptionMenuTitle>Main</OptionMenuTitle>
            <OptionMenuRight>
              <Icon name="right-arrow" size={12} />
            </OptionMenuRight>
          </OptionMenu>
        )}
        <MenuDropdown uiSize={this.props.uiSize}>
          <Option id="preferences">
            <OptionMenu data-cypress-id="window-menu-main-preferences">
              <OptionMenuTitle>Preferences</OptionMenuTitle>
              <OptionMenuRight>
                <Icon name="right-arrow" size={12} />
              </OptionMenuRight>
            </OptionMenu>
            <MenuDropdown uiSize={this.props.uiSize}>
              <Option
                id="settings"
                disabled={wrkspcOpsDisabled}
                onClick={() => {
                  this.props.onEvent({
                    type: "settings",
                    target: null,
                    originalEvent: null,
                    payload: null
                  });
                }}
              >
                <OptionMenu data-cypress-id="window-menu-main-preferences-settings">
                  <OptionMenuTitle>Settings</OptionMenuTitle>
                  <OptionMenuRight>âŒ˜ ,</OptionMenuRight>
                </OptionMenu>
              </Option>
            </MenuDropdown>
          </Option>
        </MenuDropdown>
      </Option>
    );
  }
}
