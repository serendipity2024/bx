import * as React from "react";
import { Session } from "../../../models/Session";
export default class ExternalComponentsRenderer extends React.PureComponent<
  { session: Session; placement: string; style?: any },
  {}
> {
  onUpdate = (keys: any) => {
    this.forceUpdate();
  };
  componentDidMount() {
    this.props.session.on("externalComponents", this.onUpdate);
  }
  componentWillUnmount() {
    this.props.session.off("externalComponents", this.onUpdate);
  }
  render() {
    if (
      this.props.session.isPluginLoaded("ExternalComponentsProvider") &&
      this.props.session.executeFunction("ExternalComponentsProvider.get")
    ) {
      return this.props.session
        .executeFunction("ExternalComponentsProvider.get")
        .filter(
          (componentObj: any) =>
            componentObj.placement === this.props.placement &&
            componentObj.visible
        )
        .map((componentObj: any, index: number) => {
          let Component = componentObj.component;
          return (
            <Component
              style={...this.props.style}
              key={`stage-toolbar-external-component-${index}`}
            />
          );
        });
    }
    return null;
  }
}
