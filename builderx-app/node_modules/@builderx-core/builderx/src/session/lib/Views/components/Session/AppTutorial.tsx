import * as React from "react";
import Joyride, { ACTIONS, EVENTS } from "react-joyride";
import { Session } from "../../../models/Session";
import getTutorialSteps from "./AppTutorialSteps";
import SelectTool from "../../../Commands/Session/SelectTool";
import SetEditorLayout from "../../../Commands/Session/SetEditorLayout";
import SetConfig from "../../../Commands/Workspace/SetConfig";
import ToggleCodeEditor from "../../../Commands/Session/ToggleCodeEditor";
import SelectLayers from "../../../Commands/Session/SelectLayers";
import ShowCodeEditor from "../../../Commands/Session/ShowCodeEditor";
import SetAppTutorialStep from "../../../Commands/AppTutorial/SetAppTutorialStep";
import SkipAppTutorial from "../../../Commands/AppTutorial/SkipAppTutorial";
import { Layer } from "domain-x";
import { action } from "model";

export default class extends React.PureComponent<
  {
    session: Session;
  },
  any
> {
  state = { waitForAction: false };
  componentDidMount() {
    const session = this.props.session;
    session.on(
      ["currentStage", "selectedLayers", "showCodeEditor"],
      this.onUpdate
    );
    session.domain.on("files", this.onUpdate);
    session.currentStage.tools.on(["selectedTool"], this.onUpdate);
    session.drivers.configuration.on(
      ["app.tutorial.currentStep", "app.tutorial.skipped"],
      this.onUpdate
    );
  }
  onUpdate = () => {
    this.forceUpdate();
  };
  componentWillUnmount() {
    const session = this.props.session;
    session.off(
      ["currentStage", "selectedLayers", "showCodeEditor"],
      this.onUpdate
    );
    session.domain.off("files", this.onUpdate);
    session.currentStage.tools.off(["selectedTool"], this.onUpdate);
    session.drivers.configuration.off(
      ["app.tutorial.currentStep", "app.tutorial.skipped"],
      this.onUpdate
    );
  }

  render() {
    return null;
    // const session = this.props.session;
    // const isAppTutorialSkipped =
    //   session.drivers.configuration.get("app.tutorial.skipped") ||
    //   session.drivers.configuration.get("app.tutorial.pageRefreshed");
    // const isUserInitiated = session.drivers.configuration.get(
    //   "app.tutorial.userInitiated"
    // );
    // if (
    //   isAppTutorialSkipped &&
    //   !session.isNewProject &&
    //   session.envConfig.runningContext === "session"
    // ) {
    //   return null;
    // }
    // if (isAppTutorialSkipped && isUserInitiated) {
    //   return null;
    // }
    // let selectedArtboardId = "";
    // try {
    //   selectedArtboardId = session.currentStage.canvas.executeFunction(
    //     "getSelectedArtboardId"
    //   );
    // } catch (err) {
    //   selectedArtboardId = "";
    // }
    // let AppTutorialSteps = getTutorialSteps(session, selectedArtboardId);
    // let hideNextButton = false;
    // const { commandManager } = this.props.session;
    // let isSkipped = session.drivers.configuration.get("app.tutorial.skipped");
    // let currentStep = session.drivers.configuration.get(
    //   "app.tutorial.currentStep"
    // );
    // const showCodeEditor = session.showCodeEditor;
    // const selectedFile = this.props.session.getSelectedFile();
    // if (
    //   AppTutorialSteps[currentStep] &&
    //   AppTutorialSteps[currentStep]["target"] === `#${selectedArtboardId}` &&
    //   AppTutorialSteps[currentStep]["title"] === "Draw"
    // ) {
    //   hideNextButton = true;
    //   if (
    //     session.currentStage.tools.selectedTool === "default" &&
    //     selectedFile &&
    //     selectedFile.layer instanceof Layer &&
    //     selectedFile.layer.children.length > 0 &&
    //     this.state.waitForAction
    //   ) {
    //     action(() => {
    //       commandManager.executeAndSkip(
    //         new SetAppTutorialStep(session, currentStep + 1)
    //       );
    //     });
    //     this.setState({
    //       waitForAction: false
    //     });
    //   }
    // }
    // if (
    //   AppTutorialSteps[currentStep] &&
    //   AppTutorialSteps[currentStep]["target"] === "#warning-modal"
    // ) {
    //   if (
    //     this.props.session.fontUrl ||
    //     (this.props.session.platform !== "Mac" &&
    //       this.props.session.platform !== "Windows")
    //   ) {
    //     action(() => {
    //       commandManager.executeAndSkip(
    //         new SetAppTutorialStep(session, currentStep + 1)
    //       );
    //     });
    //     this.setState({
    //       waitForAction: false
    //     });
    //   }
    // }
    // const spotlightStyle = {
    //   borderColor: "#1FB2CC",
    //   borderWidth: 1,
    //   borderRadius: 0,
    //   borderStyle: "solid",
    //   pointerEvents: "none"
    // };
    // return (
    //   <Joyride
    //     stepIndex={currentStep}
    //     run={!isSkipped}
    //     spotlightClicks
    //     continuous
    //     disableScrolling
    //     disableOverlayClose
    //     spotlightPadding={0}
    //     callback={(tour: any) => {
    //       action(() => {
    //         const { action: tutorialAction, index, type, size } = tour;
    //         const arr: any = [EVENTS.STEP_AFTER, EVENTS.CLOSE];
    //         if (tour.step) {
    //           switch (tour.step.target) {
    //             case `#${selectedArtboardId}`:
    //               if (tour.step.title === "Draw") {
    //                 if (type === EVENTS.STEP_BEFORE) {
    //                   commandManager.executeAndSkip(
    //                     new SelectTool(this.props.session, "view")
    //                   );
    //                   this.setState({ waitForAction: true });
    //                 }
    //               } else {
    //                 this.setState({ waitForAction: false });
    //               }
    //               break;
    //             case "#app-tutorial-left-panel-layout-button":
    //               if (type === EVENTS.STEP_AFTER) {
    //                 commandManager.executeAndSkip(
    //                   new SetEditorLayout(this.props.session, "layers")
    //                 );
    //                 this.setState({ waitForAction: true });
    //               }
    //               break;
    //             case "#app-tutorial-left-panel":
    //               if (type === EVENTS.STEP_AFTER) {
    //                 commandManager.executeAndSkip(
    //                   new SetEditorLayout(this.props.session, "components")
    //                 );
    //                 this.setState({ waitForAction: true });
    //               }
    //               break;
    //             case ".app-tutorial-toolbar":
    //               if (type === EVENTS.STEP_AFTER) {
    //                 commandManager.executeAndSkip(
    //                   new SelectTool(this.props.session, "default")
    //                 );
    //               }
    //               this.setState({ waitForAction: false });
    //               break;
    //             case "#app-tutorial-rect-tool":
    //               if (type === EVENTS.STEP_BEFORE) {
    //                 commandManager.executeAndSkip(
    //                   new SelectTool(this.props.session, "default")
    //                 );
    //               }
    //               if (
    //                 this.props.session.currentStage.tools.selectedTool !==
    //                 "view"
    //               ) {
    //                 this.setState({ waitForAction: true });
    //               } else {
    //                 this.setState({ waitForAction: false });
    //               }
    //               this.setState({ waitForAction: false });
    //               break;
    //             case "#app-tutorial-right-panel":
    //               if (showCodeEditor) {
    //                 commandManager.executeAndSkip(
    //                   new ToggleCodeEditor(session)
    //                 );
    //               }
    //               commandManager.executeAndSkip(
    //                 new SetConfig(session, "editor.Styling.state", false)
    //               );
    //               commandManager.executeAndSkip(
    //                 new SetConfig(session, "editor.layoutEditor.state", false)
    //               );
    //               this.setState({ waitForAction: false });
    //               break;
    //             case ".app-tutorial-styling-editor":
    //               commandManager.executeAndSkip(
    //                 new SetConfig(session, "editor.Styling.state", true)
    //               );
    //               commandManager.executeAndSkip(
    //                 new SetConfig(session, "editor.layoutEditor.state", false)
    //               );
    //               if (tutorialAction === ACTIONS.NEXT) {
    //                 commandManager.executeAndSkip(
    //                   new SetConfig(session, "editor.Styling.state", false)
    //                 );
    //               }
    //               this.setState({ waitForAction: false });
    //               break;
    //             case "#app-tutorial-layer-panel":
    //               if (showCodeEditor) {
    //                 commandManager.executeAndSkip(
    //                   new ToggleCodeEditor(session)
    //                 );
    //               }
    //               this.setState({ waitForAction: false });
    //               break;
    //             case "#app-tutorial-symbol-panel":
    //               if (showCodeEditor) {
    //                 commandManager.executeAndSkip(
    //                   new ToggleCodeEditor(session)
    //                 );
    //               }
    //               this.setState({ waitForAction: false });
    //               break;
    //             case "#warning-modal":
    //               if (showCodeEditor) {
    //                 commandManager.executeAndSkip(
    //                   new ToggleCodeEditor(session)
    //                 );
    //               }
    //               this.setState({ waitForAction: false });
    //               break;
    //             case "#design-code-switch":
    //               if (type === EVENTS.STEP_AFTER && !showCodeEditor) {
    //                 commandManager.executeAndSkip(new ShowCodeEditor(session));
    //                 this.setState({ waitForAction: true });
    //               } else if (type === EVENTS.STEP_BEFORE && showCodeEditor) {
    //                 commandManager.executeAndSkip(
    //                   new ToggleCodeEditor(session)
    //                 );
    //                 this.setState({ waitForAction: true });
    //               }
    //               break;
    //             case ".layer-preview-pane":
    //               if (!showCodeEditor) {
    //                 commandManager.executeAndSkip(new ShowCodeEditor(session));
    //                 commandManager.executeAndSkip(
    //                   new SelectLayers(session, session.selectedLayers)
    //                 );
    //               }
    //               this.setState({ waitForAction: false });
    //               break;
    //             default:
    //               this.setState({ waitForAction: false });
    //               break;
    //           }
    //           this.props.session.drivers.analyticsService.addActivity(
    //             {
    //               name: `tutorial.step.${tour.step.title}`,
    //               path: "",
    //               category: "app/command"
    //             },
    //             true
    //           );
    //         }

    //         if (type === EVENTS.TOUR_END) {
    //           commandManager.executeAndSkip(new SkipAppTutorial(session));
    //           commandManager.executeAndSkip(
    //             new SetEditorLayout(session, undefined)
    //           );

    //           if (showCodeEditor) {
    //             commandManager.executeAndSkip(new ToggleCodeEditor(session));
    //           }
    //           if (index === size - 1) {
    //             commandManager.executeAndSkip(
    //               new SetAppTutorialStep(session, 0)
    //             );
    //             this.props.session.drivers.analyticsService.addActivity(
    //               {
    //                 name: `tutorial.action.end`,
    //                 path: "",
    //                 category: "app/command"
    //               },
    //               true
    //             );
    //           } else {
    //             this.props.session.drivers.analyticsService.addActivity(
    //               {
    //                 name: `tutorial.action.skip`,
    //                 path: "",
    //                 category: "app/command"
    //               },
    //               true
    //             );
    //           }
    //         } else if (arr.includes(type)) {
    //           if (tutorialAction === ACTIONS.NEXT) {
    //             commandManager.executeAndSkip(
    //               new SetAppTutorialStep(session, index + 1)
    //             );
    //           } else if (tutorialAction === ACTIONS.PREV) {
    //             commandManager.executeAndSkip(
    //               new SetAppTutorialStep(session, index - 1)
    //             );
    //           }
    //         }
    //       });
    //     }}
    //     styles={{
    //       options: {
    //         arrowColor: "#252931",
    //         backgroundColor: "#252931",
    //         primaryColor: "#1FB2CC",
    //         textColor: "#fff",
    //         overlayColor: "rgba(0, 0, 0, 0.7)"
    //       },
    //       overlay: {
    //         cursor: "auto",
    //         width: 10000,
    //         height: 10000,
    //         flex: 1,
    //         overflow: "hidden"
    //         // pointerEvents: "none !important"
    //       },
    //       buttonNext: {
    //         borderRadius: 0,
    //         height: 25,
    //         padding: 0,
    //         width: 60,
    //         fontSize: 12,
    //         cursor: "pointer",
    //         marginLeft: 6,
    //         ...(hideNextButton
    //           ? {
    //               display: "none",
    //               width: 0
    //             }
    //           : null)
    //       },
    //       buttonBack: {
    //         borderRadius: 0,
    //         height: 25,
    //         padding: 0,
    //         width: 60,
    //         color: "#fff",
    //         backgroundColor: "#353940",
    //         borderWidth: 0,
    //         cursor: "pointer",
    //         fontSize: 12,
    //         marginRight: 0
    //       },
    //       tooltip: {
    //         padding: 0,
    //         borderRadius: 3
    //       },
    //       tooltipFooter: {
    //         marginTop: 0,
    //         padding: 8,
    //         paddingLeft: 12,
    //         paddingRight: 12,
    //         borderTopWidth: 2,
    //         borderTopStyle: "solid",
    //         borderTopColor: "#1e2129"
    //         // position: "absolute",
    //         // left: 0,
    //         // right: 0
    //       },
    //       buttonClose: {
    //         width: 0,
    //         height: 0
    //       },
    //       buttonSkip: {
    //         color: "#1FB2CC",
    //         fontSize: 12,
    //         padding: 0,
    //         height: 25,
    //         cursor: "pointer"
    //       },
    //       tooltipContainer: {
    //         textAlign: "start",
    //         padding: 12
    //       },
    //       tooltipContent: {
    //         padding: 0,
    //         fontSize: 12,
    //         fontWeight: 100,
    //         color: "rgba(221,221,221,0.8)"
    //       },
    //       tooltipTitle: {
    //         fontSize: 14,
    //         fontWeight: 500,
    //         color: "#DDD"
    //       },
    //       spotlight: spotlightStyle,
    //       spotlightLegacy: {
    //         borderColor: "#1FB2CC",
    //         borderRadius: 0,
    //         borderWidth: 1,
    //         borderStyle: "solid"
    //       }
    //     }}
    //     scrollToFirstStep
    //     showSkipButton
    //     steps={AppTutorialSteps}
    //   />
    // );
  }
}
