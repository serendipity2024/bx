import { Session } from "../../models/Session";
import createService from ".";
import { Layer } from "domain-x";
import { forEach, size, get } from "lodash";
import { Utils } from "utils";
import { Alert } from "dialog-x";

const CopyService = createService("CopyService", (session: Session) => {
  if (Utils.isEditableInput()) {
    const text = Utils.getSelectionText();
    session.drivers.clipboardService.nativeCopy(text);
    return;
  } else {
    if (size(session.currentStage.recordingConditions) !== 0) {
      Alert("Warning!", "Unable to copy while recording!", true).then(() => {
        return;
      });
      return;
    }
    if (get(session, "selectedLayers[0].type") === "root") {
      return;
    }
    let selectedLayersJSON: Array<any> = [];
    let selectedLayersPath: Array<string> = [];
    forEach(session.getLayersFromSelectedLayerCollection(), (layer: Layer) => {
      const layerJSON: any = layer.toJS();
      // TODO: image-fixes
      // if (layerJSON.type === "image") {
      //   console.log(layer.blobURL, "blob url here");
      //   layerJSON.blobURL = layer.blobURL;
      // }
      selectedLayersJSON.push(layerJSON);
      selectedLayersPath.push(layer.getPath());
    });
    session.drivers.clipboardService.set(selectedLayersJSON, "layer");
  }
});

export default CopyService;
