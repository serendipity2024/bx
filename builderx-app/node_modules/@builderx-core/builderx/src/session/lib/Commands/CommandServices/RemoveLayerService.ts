import { Session } from "../../models/Session";
import createService from ".";
import { RemoveLayerMutator, SetHoverLayersMutator } from "../../Mutators";
import DeselectAllLayers from "./DeselectAllLayers";
import CommandUtils from "../Utils";
import RemoveFormControlMutator from "../../Mutators/RemoveFormControlMutator";
import { RemoveSymbolInstRefFromSymbolFile } from "./RemoveSymbolInstRefFromSymbolFile";

const RemoveLayerService = createService(
  "RemoveLayer",
  (
    session: Session,
    domainLayerPath: string,
    filePath?: any,
    generatePreview: boolean = false
  ) => {
    let file = session.getFileFromLayerPath(domainLayerPath);
    if (!file) {
      return;
    }
    const domainLayer = session.getLayerFromLayerPath(domainLayerPath);
    if (domainLayer && domainLayer.type === "symbol") {
      RemoveSymbolInstRefFromSymbolFile(session, domainLayerPath);
    }
    if (file.isSymbol()) {
      RemoveFormControlMutator(session, file.path, domainLayerPath);
    }
    RemoveLayerMutator(session, domainLayerPath);

    DeselectAllLayers(session, generatePreview);
    SetHoverLayersMutator(
      session,
      filePath ? filePath : file.getFullPath(),
      []
    );

    if (
      session.currentStage.id.includes("layer:") &&
      session.currentRootLayer.type === "scrollView"
    ) {
      // if (!session.globalStateService.previewGeneration) {
      //   CommandUtils.setScrollViewContentContainerStyle(
      //     session,
      //     session.currentRootLayer
      //   );
      // }
    }
  }
);

export default RemoveLayerService;
