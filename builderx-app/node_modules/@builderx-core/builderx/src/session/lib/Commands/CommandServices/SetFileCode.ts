import { Session } from "../../models/Session";
import { BX_PREVIEW_FILE_PATH } from "bx-constants";
import createService from ".";
import { find } from "lodash";
import { smartFlex } from "smart-flex";

const SetFileCode = createService("SetFileCode", (session: Session) => {
  try {
    if (session.shouldUpdateCode) {
      const file = getFile(session);

      const compiledFile = file.getOwnCanvasRef();
      if (compiledFile) {
        compiledFile.setChildrenLayout(compiledFile);
      }

      file.setCalculatedDims(true);
      if (file) {
        // if (
        //   session.codeEngineName === "react" ||
        //   session.codeEngineName === "react-native"
        // ) {
        session
          .getFileCode(file)
          .then((code: string) => {
            session.setCurrentFileCode(code);
          })
          .catch(err => {
            console.error(err, "Code couldn't be generated");
            session.setCurrentFileCode(
              "Code couldn't be generated. Please contact support if this problem persists."
            );
          });
        // } else {

        // }
      }
    }
  } catch (err) {
    console.error(err, "Code couldn't be generated");
    session.setCurrentFileCode(
      "Code couldn't be generated. Please contact support if this problem persists."
    );
  }
});
export default SetFileCode;
function getFile(session: Session) {
  const showPreviewLayerCode =
    session.getLayersFromSelectedLayerCollection().length > 0 &&
    session.getLayersFromSelectedLayerCollection()[0].type !== "root";

  if (showPreviewLayerCode) {
    const file = session.domain.files.get(BX_PREVIEW_FILE_PATH);
    if (file) {
      return file;
    }
  }
  return session.selectedFile;
}
