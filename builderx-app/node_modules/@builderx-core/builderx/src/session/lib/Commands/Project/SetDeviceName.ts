import { ICommand } from "command-manager";
import SetDeviceNameService from "../CommandServices/SetDeviceName";
import { Session } from "../../models/Session";

export default class SetDeviceName implements ICommand {
  displayName = "SetDeviceName";
  session: Session;
  deviceName: string;
  oldDeviceName: string;

  constructor(session: Session, deviceName: string) {
    this.session = session;
    this.deviceName = deviceName;
  }
  execute() {
    this.oldDeviceName = this.session.project.deviceName;
    const selectedFile = this.session.getSelectedFile();
    if (!selectedFile) {
      return;
    }
    SetDeviceNameService(this.session, selectedFile.path, this.deviceName);

    selectedFile.emit("deviceName");
    this.session.emit("addArtboardButton");
    this.session.drivers.analyticsService.addActivity(
      {
        name: `set.device.name`,
        path: "",
        category: "app/command"
      },
      true
    );
  }
  undo() {
    const selectedFile = this.session.getSelectedFile();
    if (!selectedFile) {
      return;
    }
    SetDeviceNameService(this.session, selectedFile.path, this.oldDeviceName);
    selectedFile.emit("deviceName");
    this.session.emit("addArtboardButton");
    this.session.drivers.analyticsService.addActivity(
      {
        name: `undo.set.device.name`,
        path: "",
        category: "app/command"
      },
      true
    );
  }
  redo() {
    const selectedFile = this.session.getSelectedFile();
    if (!selectedFile) {
      return;
    }
    SetDeviceNameService(this.session, selectedFile.path, this.deviceName);
    selectedFile.emit("deviceName");
    this.session.emit("addArtboardButton");
    this.session.drivers.analyticsService.addActivity(
      {
        name: `redo.set.device.name`,
        path: "",
        category: "app/command"
      },
      true
    );
  }
}
