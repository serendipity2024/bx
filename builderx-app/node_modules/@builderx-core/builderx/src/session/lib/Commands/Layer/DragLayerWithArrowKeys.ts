import { ICommand, CommandManager } from "command-manager";
import { Layer as DomainLayer } from "domain-x";
import { Session } from "../../models/Session";
import { SetLayerDimensions } from "..";
import DragLayerWithArrowKeysService from "../CommandServices/DragLayerWithArrowKeysService";

export default class DragLayerWithArrowKeys implements ICommand {
  displayName = "DragLayerWithArrowKeys";
  private session: Session;
  private direction: string;
  private newPositions: Array<any> = [];
  private shiftPressed: boolean;
  private commmadManager: CommandManager;
  constructor(session: Session, direction: string, shiftPressed: boolean) {
    this.session = session;
    this.direction = direction;
    this.shiftPressed = shiftPressed;
    this.commmadManager = new CommandManager();
  }
  execute() {
    DragLayerWithArrowKeysService(
      this.session,
      this.shiftPressed,
      this.newPositions,
      this.direction
    );
  }
  undo() {
    DragLayerWithArrowKeysService(
      this.session,
      this.shiftPressed,
      this.newPositions,
      this.direction === "up"
        ? "down"
        : this.direction === "down"
        ? "up"
        : this.direction === "left"
        ? "right"
        : "left"
    );
  }
  redo() {
    DragLayerWithArrowKeysService(
      this.session,
      this.shiftPressed,
      this.newPositions,
      this.direction
    );
  }
}
