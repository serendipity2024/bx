import { Layer as DomainLayer } from "domain-x";
import { Session } from "../../models/Session";
import { ICommand } from "command-manager";

export default class RemoveRuler implements ICommand {
  displayName = "RemoveRuler";
  filePath: string;
  private session: Session;

  constructor(session: Session) {
    this.session = session;
    // this.ruler = ruler;
  }
  execute() {
    // this.session.drivers.analyticsService.addActivity(
    //   {
    //     name: `remove.ruler`,
    //     path: "",
    //     category: "app/command"
    //   },
    //   true
    // );
    // var selectedFile = this.session.selectedFile;
    // if (!selectedFile) {
    //   return;
    // }
    // this.filePath = selectedFile.path;
    // var selectedFileRulers = this.session.project.rulers.get(this.filePath);
    // if (selectedFileRulers) {
    //   let rulerIndex = selectedFileRulers.indexOf(this.ruler);
    //   selectedFileRulers.splice(rulerIndex, 1);
    // }
    // this.session.project.emit("rulers");
  }
  undo() {
    // this.session.drivers.analyticsService.addActivity(
    //   {
    //     name: `undo.remove.ruler`,
    //     path: "",
    //     category: "app/command"
    //   },
    //   true
    // );
    // var selectedFileRulers = this.session.project.rulers.get(this.filePath);
    // if (selectedFileRulers) {
    //   selectedFileRulers.push(this.ruler);
    // }
    // this.session.project.emit("rulers");
  }

  redo() {
    this.session.drivers.analyticsService.addActivity(
      {
        name: `redo.remove.ruler`,
        path: "",
        category: "app/command"
      },
      true
    );
    this.execute();
  }
}
