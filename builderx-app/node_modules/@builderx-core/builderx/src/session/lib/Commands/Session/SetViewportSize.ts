import { ICommand } from "command-manager";
import { Session } from "../../models/Session";
import { Layer } from "domain-x";
import { forEach } from "lodash";
import RemoveHoveredForAllLayers from "./RemoveHoveredForAllLayers";
import RemoveDragHoveredForAllLayers from "./RemoveDragHoveredForAllLayers";
import SetInitialScroll from "./SetInitialScroll";

export default class SetViewportSize implements ICommand {
  displayName = "SetViewportSize";
  session: Session;
  size: { width: number; height: number };
  constructor(session: Session, size: { width: number; height: number }) {
    this.session = session;
    this.size = size;
  }
  execute() {
    let oldViewportSize = { ...this.session.viewport };
    // this.session.viewport.setViewportSize(this.size);

    if (this.session.currentStage.canvas) {
      this.session.currentStage.canvas.setViewport({
        width: this.size.width,
        height: this.size.height
      });
    }

    // if (this.session.canvas.plugins) {

    // }
    // this.session.canvas.plugins.get("ConstructionLinesPlugin");

    // console.log("hello 1111", this.size);
    // this.session.commandManager.executeAndSkip(
    //   new SetInitialScroll(this.session, {
    //     x: this.session.currentStage.tools.currentScroll.x,
    //     y:
    //       (this.size.height / oldViewportSize.height) *
    //       this.session.currentStage.tools.currentScroll.y
    //   })
    // );

    // this.session.viewport.emit(["width", "height"]);
  }
  undo() {
    // nope
  }
  redo() {
    // nope
  }
}
