import { Session } from "../../models/Session";
import { ICommand } from "command-manager";
import { ConfirmOnExit } from "dialog-x";
import { File as DomainFile } from "domain-x";
import SaveProject from "./../CommandServices/SaveProject";

export default class ReopenWindow implements ICommand {
  displayName = "ReopenWindow";
  session: Session;

  constructor(session: Session) {
    this.session = session;
  }
  async execute() {
    this.session.drivers.analyticsService.addActivity(
      {
        name: `reopen.new.project`,
        path: "",
        category: "app/command"
      },
      true
    );
    let returnVal: boolean = false;
    this.session.domain.files.forEach((file: DomainFile) => {
      if (file.isDirty) {
        returnVal = true;
      }
    });
    if (returnVal) {
      try {
        let result: any = await ConfirmOnExit(
          "Unsaved files",
          "It looks like you have been editing something. If you leave before saving, your changes will be lost.",
          this.session.isNewProject ? "Save As..." : "Save"
        );
        if (result.value) {
          if (result.save) {
            SaveProject(this.session).then((resp: boolean) => {
              if (resp) {
                this.relaunch();
              }
            });
          } else {
            this.relaunch();
          }
        }
      } catch (err) {
        console.log("Error while exiting the app", err);
      }
    } else {
      this.relaunch();
    }
  }
  undo() {
    //
  }
  redo() {
    //
  }
  private relaunch() {
    let appLifeCycleService = this.session.drivers.appLifeCycleService;
    appLifeCycleService.remote.app.relaunch();
    appLifeCycleService.remote.app.exit(0);
  }
}
