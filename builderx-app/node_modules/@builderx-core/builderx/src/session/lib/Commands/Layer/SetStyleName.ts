import { Layer as DomainLayer } from "domain-x";
import { Session } from "../../models/Session";
import { ICommand } from "command-manager";
import SetStyleNameService from "../CommandServices/SetStyleName";

export default class SetStyleName implements ICommand {
  displayName = "SetStyleName";
  private session: Session;
  private layer: DomainLayer;
  private newName: string;
  private oldName: string;
  private domainLayerPath: string;
  private oldAutoRenaming: boolean;
  private autoRename: boolean;
  constructor(
    session: Session,
    layer: DomainLayer,
    name: string,
    autoRename: boolean = true
  ) {
    this.session = session;
    this.layer = layer;
    this.newName = name.replace(/\s/g, "");
    this.autoRename = autoRename;
    this.oldName = this.layer.styleName;
    this.domainLayerPath = this.layer.getFullPath();
  }

  execute() {
    const valid = SetStyleNameService(
      this.session,
      this.domainLayerPath,
      this.oldName,
      this.newName,
      this.autoRename
    );
    if (valid) {
      const layer = this.session.getLayerFromLayerPath(this.domainLayerPath);
      if (layer.type === "text" && !this.autoRename) {
        this.oldAutoRenaming = layer.autoRenaming;
      }
    }
  }
  undo() {
    SetStyleNameService(
      this.session,
      this.domainLayerPath,
      this.newName,
      this.oldName,
      this.oldAutoRenaming
    );
  }
  redo() {
    SetStyleNameService(
      this.session,
      this.domainLayerPath,
      this.oldName,
      this.newName,
      this.autoRename
    );
  }
}
