import { ICommand } from "../../../../command-manager/lib";
import { Session } from "../../models/Session";
import SetSnap from "../../Mutators/SetSnapMutator";

export default class ToggleSnapConfig implements ICommand {
  displayName = "ToggleSnapConfig";
  session: Session;
  type: "ruler" | "grid" | "parent" | "sibling" | "gutter";

  constructor(
    session: Session,
    type: "ruler" | "grid" | "parent" | "sibling" | "gutter"
  ) {
    this.session = session;
    this.type = type;
  }

  execute() {
    let oldVal = this.session.drivers.configuration.get(
      "editor.snap." + this.type
    );
    SetSnap(this.session, this.type, !oldVal);

    let type: string = this.type;

    // FIXME: This is done to maintain previous analytics setting. @ask Suraj or Himanshu if this is required
    if (type === "parent") {
      type = "document";
    } else if (type === "ruler") {
      type = "rulers";
    } else if (type === "sibling") {
      type = "layers";
    }

    this.session.drivers.analyticsService.addActivity(
      {
        name: `snap.` + type + `.toggle.${!oldVal}`,
        path: "",
        category: "app/command"
      },
      true
    );
  }
  undo() {
    //
  }
  redo() {
    //
  }
}
