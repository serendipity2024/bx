import { ICommand } from "command-manager";
import { Session } from "../../models/Session";
import { default as SaveProjectService } from "../CommandServices/SaveProject";
import { action } from "model";
// import GenerateProjectThumbnail from "./GenerateProjectThumbnail";

export default class SaveProject implements ICommand {
  displayName = "SaveProject";
  private session: Session;
  constructor(session: Session) {
    this.session = session;
  }
  async execute() {
    if (
      this.session.importingSketchFile ||
      this.session.readonly ||
      this.session.isSaving
    ) {
      return;
    }
    this.session.drivers.analyticsService.addActivity(
      {
        name: `save.project`,
        path: "",
        category: "app/command"
      },
      true
    );
    action(() => {
      this.session.setIsSaving(true);
      this.session.emit("isSaving");
    });

    /*this.session.commandManager.executeAndSkip(
      new GenerateProjectThumbnail(this.session)
    );*/

    await SaveProjectService(this.session);

    action(() => {
      this.session.setIsSaving(false);
      this.session.emit("isSaving");
    });
  }
  undo() {
    //
  }
  redo() {
    //
  }
}
