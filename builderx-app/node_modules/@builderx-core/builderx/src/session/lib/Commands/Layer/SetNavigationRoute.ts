import { ICommand } from "command-manager";
import { Session } from "../../models/Session";
import { Layer } from "domain-x";
import SetNavigationRouteMutator from "../../Mutators/SetNavigationRouteMutator";
type PayloadType = { name: string; isDrawer: boolean };

export default class SetNavigationRoute implements ICommand {
  displayName = "SetNavigationRoute";
  private payload: PayloadType;
  private oldValue: any;
  private layer: Layer;
  private session: Session;
  private layerId: string;

  constructor(session: Session, layer: Layer, payload: PayloadType) {
    this.session = session;
    this.payload = payload;
    this.layer = layer;
    this.layerId = layer.getFullPath();
  }
  execute() {
    this.oldValue = this.layer.navigateTo;
    SetNavigationRouteMutator(this.session, this.layerId, this.payload.name);
    this.session.drivers.analyticsService.addActivity(
      {
        name: `set.navigation.route`,
        category: "app/command"
      },
      true
    );
  }
  undo() {
    SetNavigationRouteMutator(this.session, this.layerId, this.oldValue);
    this.session.drivers.analyticsService.addActivity(
      {
        name: `undo.set.navigation.route`,
        category: "app/command"
      },
      true
    );
  }
  redo() {
    SetNavigationRouteMutator(this.session, this.layerId, this.payload.name);
    this.session.drivers.analyticsService.addActivity(
      {
        name: `redo.set.navigation.route`,
        category: "app/command"
      },
      true
    );
  }
}
