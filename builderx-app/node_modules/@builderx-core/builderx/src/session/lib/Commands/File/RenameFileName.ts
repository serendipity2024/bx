import { File } from "domain-x";
import { Session } from "../../models/Session";
import { ICommand } from "command-manager";
import RemoveArtboardService from "../CommandServices/RemoveArtboardService";
import AddArtboardService from "../CommandServices/AddArtboardService";
import RenameSymbolFileMutator from "../../Mutators/RenameSymbolFileMutator";

export default class RenameFileName implements ICommand {
  displayName = "RenameFileName";
  private session: Session;
  private oldName: string;
  private oldPath: string;
  private newPath: string;
  private oldFileJSON: any;
  private newName: string;

  constructor(session: Session, file: File, newName: string) {
    this.session = session;
    this.oldPath = file.path;
    this.oldName = file.path.substring(
      file.path.lastIndexOf("/") + 1,
      file.path.lastIndexOf(".")
    );
    this.newName = newName;
    this.newPath = `${file.path.substring(
      0,
      file.path.lastIndexOf("/")
    )}/${newName}.js`;
    this.oldFileJSON = file.toJS();
  }
  execute() {
    this.renameOp();
    this.session.drivers.analyticsService.addActivity(
      {
        name: `rename.filename`,
        path: "",
        category: "app/command"
      },
      true
    );
  }
  undo() {
    const file = this.session.domain.files.get(this.newPath);
    if (file && file.isSymbol()) {
      RenameSymbolFileMutator(this.session, this.newPath, this.oldName);
    } else {
      RemoveArtboardService(this.session, this.newPath);
      this.oldFileJSON.path = this.oldPath;
      AddArtboardService(this.session, this.oldFileJSON);
    }
    this.session.drivers.analyticsService.addActivity(
      {
        name: `undo.rename.filename`,
        path: "",
        category: "app/command"
      },
      true
    );
  }
  redo() {
    this.renameOp();
    this.session.drivers.analyticsService.addActivity(
      {
        name: `redo.rename.filename`,
        path: "",
        category: "app/command"
      },
      true
    );
  }
  renameOp() {
    const file = this.session.domain.files.get(this.oldPath);
    if (file && file.isSymbol()) {
      RenameSymbolFileMutator(this.session, this.oldPath, this.newName);
    } else {
      RemoveArtboardService(this.session, this.oldPath);
      this.oldFileJSON.path = this.newPath;
      AddArtboardService(this.session, this.oldFileJSON);
    }
  }
}
