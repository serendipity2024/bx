import { ICommand } from "command-manager";
import { Session } from "../../models/Session";
import { Layer } from "domain-x";

export default class RemoveDragHoveredForAllLayers implements ICommand {
  displayName = "RemoveDragHoveredForAllLayers";
  session: Session;
  constructor(session: Session) {
    this.session = session;
  }
  execute() {
    if (this.session.dragHoveredInsideParent) {
      this.session.dragHoveredInsideParent.dragHoverParent = false;
      this.session.dragHoveredInsideParent.emit("dragHoverParent");
    }
    this.session.dragHoveredInsideLayers.forEach((layer: Layer) => {
      layer.dragHoverInside = false;
      layer.emit("dragHoverInside");
    });
    this.session.dragHoveredBeforeLayers.forEach((layer: Layer) => {
      layer.dragHoverBefore = false;
      layer.emit("dragHoverBefore");
    });
    this.session.dragHoveredAfterLayers.forEach((layer: Layer) => {
      layer.dragHoverAfter = false;
      layer.emit("dragHoverAfter");
    });
    this.session.dragHoveredInsideLayers = [];
    this.session.dragHoveredBeforeLayers = [];
    this.session.dragHoveredAfterLayers = [];
    this.session.dragHoveredInsideParent = undefined;
  }
  undo() {
    // no undo
  }
  redo() {
    // no redo
  }
}
