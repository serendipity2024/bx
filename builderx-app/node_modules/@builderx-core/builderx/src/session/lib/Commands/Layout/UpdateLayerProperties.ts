import { Layer as DomainLayer } from "domain-x";
import { Session } from "../../models/Session";
import { ICommand } from "command-manager";
import UpdateLayerPropertiesService from "../CommandServices/UpdateLayerProperties";
import { StylePropNameType } from "common-interfaces";

export default class UpdateLayerProperties implements ICommand {
  displayName = "UpdateLayerProperties";
  private domainLayerPath: string;
  private session: Session;
  private properties: any;
  private oldProperties: any;
  private key: string;
  private stylePropName: StylePropNameType;

  constructor(
    session: Session,
    domainLayer: DomainLayer,
    properties: any,
    key: string,
    stylePropName: StylePropNameType = "style"
  ) {
    this.session = session;
    this.properties = properties;
    this.key = key;
    this.stylePropName = stylePropName;
    this.domainLayerPath = domainLayer.getFullPath();

    this.oldProperties = {
      ...properties,
      [this.key]: domainLayer.props.getResolvedStyleAttribute(this.key)
    };
  }
  execute() {
    UpdateLayerPropertiesService(
      this.session,
      this.domainLayerPath,
      this.properties,
      this.key,
      this.stylePropName
    );
  }
  undo() {
    UpdateLayerPropertiesService(
      this.session,
      this.domainLayerPath,
      this.oldProperties,
      this.key,
      this.stylePropName
    );
  }
  redo() {
    this.execute();
  }
}
