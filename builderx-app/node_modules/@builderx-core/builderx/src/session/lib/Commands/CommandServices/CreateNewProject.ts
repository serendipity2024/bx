import { Session } from "../../models/Session";
import { get } from "lodash";
import SetPageRoute from "./../Router/SetPageRoute";
import { action } from "model";
import { Alert } from "dialog-x";
import createService from ".";
import urljoin from "url-join";

export const CreateNewProject = createService(
  "CreateNewProject",
  (session: Session) => {
    return new Promise((resolve, reject) => {
      // session.apiSdk.project
      //   .post(session.project.projectName)
      //   .then(async response => {
      //     if (!response) {
      //       resolve(false);
      //       return;
      //     }
      //     session.setProjectId(response.data.id);
      //     session.project.setProjectAccess(response.data.access);
      //     session.project.setTeamId(response.data.team.id);
      //     session.project.setSubscription(
      //       get(response, "data.team.isSubscribed", false),
      //       get(response, "data.team.days_remaining", 30)
      //     );
      //     if (
      //       !session.project.isSubscribed &&
      //       session.project.daysRemaining < 1
      //     ) {
      //       action(() => {
      //         session.commandManager.executeAndSkip(
      //           new SetPageRoute(session, "blank")
      //         );
      //         Alert(
      //           "Trial Expired!",
      //           "Your copy of BuilderX is not activated and its trial period has expired. Please get a licence.",
      //           true,
      //           "Go to Pricing"
      //         ).then(() => {
      //           window.open(
      //             urljoin(session.envConstants.WEBSITE_URL, "pricing")
      //           );
      //         });
      //       });
      //       reject();
      //       return;
      //     }
      //     window.history.replaceState(
      //       {},
      //       `BuilderX - ${session.project.projectId}`,
      //       window.location.pathname.replace(/\/$/, "") +
      //         "/" +
      //         session.project.projectId
      //     );
      //     resolve(true);
      //   })
      //   .catch(error => {
      //     session.throwErrorResponse(error, session);
      //   });
      resolve(true);
    });
  }
);
