import { ICommand, CommandManager } from "command-manager";
import { Session } from "../../../lib/models/Session";
import { Layer } from "domain-x";
import RemoveLayer from "../CommandServices/RemoveLayerService";
import { AddLayerService } from "../CommandServices/AddLayerService";
import SelectLayersService from "../CommandServices/SelectLayersService";
import { cloneDeep } from "lodash";
// import RemoveLayer from "./RemoveLayer";
// import AddLayer from "./AddLayer";

export default class ChangeToTouchableOpacity implements ICommand {
  displayName = "ChangeToTouchableOpacity";
  session: Session;
  domainLayer: Layer;
  domainParentLayer: Layer;
  domainLayerPath: string;
  domainParentLayerPath: string;
  makeClickable: boolean;
  oldJSON: any;
  newJSON: any;
  index: number;
  constructor(session: Session, domainLayer: Layer, makeClickable: boolean) {
    this.session = session;
    this.domainLayer = domainLayer;
    this.makeClickable = makeClickable;
    // this.commandManager = new CommandManager();
    this.domainLayerPath = domainLayer.getFullPath();
    this.domainParentLayer = this.domainLayer.parent;

    this.domainParentLayerPath = this.domainParentLayer.getFullPath();

    this.oldJSON = this.domainLayer.toJS();

    this.newJSON = cloneDeep(this.oldJSON);
    delete this.newJSON["styleName"];

    if (this.makeClickable) {
      this.newJSON["type"] = "touchableOpacity";
      this.newJSON.import["layerName"] = "TouchableOpacity";
    } else {
      this.newJSON["type"] = "view";
      this.newJSON.import["layerName"] = "View";
    }

    this.index = this.domainLayer.findIndexInParent();
  }
  execute() {
    // TODO: this

    // // removeCenterWrapperService(this.session, this.domainLayer);
    // if (!this.domainParentLayer) {
    //   return;
    // }

    RemoveLayer(this.session, this.domainLayerPath);
    AddLayerService(
      this.session,
      this.domainParentLayerPath,
      this.newJSON,
      this.index
    );

    SelectLayersService(this.session, [this.domainLayerPath]);

    this.session.drivers.analyticsService.addActivity(
      {
        name: `change.to.touchableopacity`,
        category: "app/command"
      },
      true
    );
  }
  undo() {
    // this.commandManager.undoAll();

    RemoveLayer(this.session, this.domainLayerPath);
    const layer = AddLayerService(
      this.session,
      this.domainParentLayerPath,
      this.oldJSON,
      this.index
    );

    SelectLayersService(this.session, [this.domainLayerPath]);

    this.session.drivers.analyticsService.addActivity(
      {
        name: `undo.change.to.touchableopacity`,
        category: "app/command"
      },
      true
    );
  }
  redo() {
    RemoveLayer(this.session, this.domainLayerPath);
    const layer = AddLayerService(
      this.session,
      this.domainParentLayer.getFullPath(),
      this.newJSON,
      this.index
    );

    SelectLayersService(this.session, [layer.getFullPath()]);

    this.session.drivers.analyticsService.addActivity(
      {
        name: `redo.change.to.touchableopacity`,
        category: "app/command"
      },
      true
    );
  }
}
