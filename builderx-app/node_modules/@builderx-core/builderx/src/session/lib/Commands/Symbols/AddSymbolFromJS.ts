import { ICommand, CommandManager } from "command-manager";
import { Session } from "../../models/Session";
import { File } from "domain-x";
import Stage from "../../models/Stage";
import { AddSymbolFromJsService } from "../CommandServices/AddSymbolFromJsService";
import RemoveFileMutator from "../../Mutators/RemoveFileMutator";

export default class AddSymbolFromJS implements ICommand {
  displayName = "AddSymbolFromJS";
  private session: Session;
  private fileJSON: any;
  private file: File;
  private symbolStage: Stage;
  private shouldPlaceArtboard: boolean;
  private currentRecordingConditions: { [key: string]: any };
  private currentScopeVariables: { [key: string]: any };

  constructor(
    session: Session,
    fileJSON: any,
    shouldPlaceArtboard: boolean = true
  ) {
    this.session = session;
    this.fileJSON = fileJSON;
    this.shouldPlaceArtboard = shouldPlaceArtboard;
  }
  execute() {
    // console.time("Measure:: addSymbol" + this.fileJSON.path);
    this.session.drivers.analyticsService.addActivity(
      {
        name: `add.symbol.from.js`,
        path: "",
        category: "app/command"
      },
      true
    );
    AddSymbolFromJsService(this.session, this.fileJSON);
  }

  undo() {
    this.session.drivers.analyticsService.addActivity(
      {
        name: `undo.add.symbol.from.js`,
        path: "",
        category: "app/command"
      },
      true
    );

    RemoveFileMutator(this.session, this.file.path);
    // this.session.stages.delete(this.file.path);
    // this.session.domain.removeFile(this.file.path);
  }
  redo() {
    this.session.drivers.analyticsService.addActivity(
      {
        name: `redo.add.symbol.from.js`,
        path: "",
        category: "app/command"
      },
      true
    );

    AddSymbolFromJsService(this.session, this.fileJSON);

    // this.session.stages.set(this.file.path, this.symbolStage);
    // this.session.domain.files.set(this.file.path, this.file);
  }
}
