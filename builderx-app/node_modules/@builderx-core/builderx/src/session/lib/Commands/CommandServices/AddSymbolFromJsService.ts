import { Session } from "../../models/Session";
import { AddFileMutator, AddStageMutator } from "../../Mutators";
import { AddLayerService } from "./AddLayerService";
import createService from ".";
import { SetAllPropsService } from "./SetAllPropsService";
import AddThumbnailStageMutator from "../../Mutators/AddThumbnailStageMutator";
import { BX_PREVIEW_FILE_PATH } from "bx-constants";

export const AddSymbolFromJsService = createService(
  "AddSymbolFromJs",
  (session: Session, fileJSON: any) => {
    const symbolFilePath = fileJSON.path;
    let symbolStage = session.stages.get(symbolFilePath) as any;
    if (!symbolStage) {
      if (!session.envConfig.isSharedComponentInstance) {
        AddStageMutator(session, symbolFilePath);
      }
      if (symbolFilePath !== BX_PREVIEW_FILE_PATH) {
        AddThumbnailStageMutator(session, symbolFilePath);
      }
    }
    // add new stage for this symbol

    const file = AddFileMutator(
      session,
      fileJSON.path,
      fileJSON.version,
      fileJSON.dbFileId
    );

    SetAllPropsService(session, file.getFullPath(), fileJSON.props);
    AddLayerService(session, file.getFullPath(), fileJSON.layer, "layer");
  }
);
