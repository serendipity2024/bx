import { Session } from "../../models/Session";
import AddNewArtboard from "../File/AddNewArtboard";
import { ICommand } from "command-manager";
import SetPageRoute from "../Router/SetPageRoute";
import {
  SetInitialScroll,
  PlaceArtboardsToCenter,
  SetCurrentStage,
  AddLayer
} from "..";
import { CreateNewProject } from "../CommandServices/CreateNewProject";
import SelectRootLayer from "../Session/SelectRootLayer";
import { action } from "model";
import { cloneDeep, set } from "lodash";

export default class NewProject implements ICommand {
  displayName = "NewProject";
  session: Session;
  fileJSON: any;
  fileId: string;
  constructor(session: Session, fileJSON?: any) {
    this.session = session;
    this.fileJSON = fileJSON;
  }
  execute() {
    this.session.drivers.analyticsService.addActivity(
      {
        name: `new.project`,
        path: "",
        category: "app/command"
      },
      true
    );
    // const isNewProjectCreated = await CreateNewProject(this.session);
    // if (!isNewProjectCreated) {
    //   return;
    // }

    action(() => {
      this.session.setIsNewProject(true);
      // let tempPath = this.session.drivers.fileService.createTempFolder();
      // if (!tempPath) {
      //   tempPath =
      //     "/var/folders/w9/h1p3_t0j0gq_wr4r0gg94f9w0000gp/T/BuilderO8JQ04f";
      // }

      this.session.commandManager.executeAndSkip(
        new AddNewArtboard(this.session, this.fileJSON, "artboard", true, true)
      );
      const selectedFile = this.session.selectedFile;
      if (selectedFile) {
        // const TextDefinition = this.session.currentStage.canvas.getComponentDefinition(
        //   "text"
        // );
        // const text = cloneDeep(TextDefinition.template);
        // set(
        //   text,
        //   "children.0.value",
        //   "Start from scratch\n\nor\n\nDrag and drop a Sketch file"
        // );
        // set(text, "template", { centerHorizontal: true, centerVertical: true });
        // set(text, "props.style", {
        //   color: "#121212",
        //   fontSize: 24,
        //   position: "absolute",
        //   textAlign: "center",
        //   fontFamily: "Roboto",
        //   fontPostscriptName: "roboto-regular",
        //   fontStyle: "normal",
        //   fontWeight: "regular"
        // });
        // set(text, "autoRenaming", true);
        // this.session.commandManager.executeAndSkip(
        //   new AddLayer(this.session, selectedFile.layer, text)
        // );
      }
      this.session.commandManager.executeAndSkip(
        new SelectRootLayer(this.session)
      );

      this.session.commandManager.executeAndSkip(
        new PlaceArtboardsToCenter(this.session, false, true)
      );
      this.session.commandManager.executeAndSkip(
        new SetInitialScroll(this.session, {
          x: 0.5,
          y: 0.5
        })
      );

      this.session.commandManager.executeAndSkip(
        new SetCurrentStage(this.session, "artboard")
      );

      this.session.commandManager.executeAndSkip(
        new SetPageRoute(this.session, "workspace")
      );

      /*this.session.commandManager.executeAndSkip(
        new GenerateProjectThumbnail(this.session)
      );*/
      this.session.dirtyFiles = [];
    });
  }
  undo() {
    //
  }
  redo() {
    //
  }
}
