import { Layer as DomainLayer, BoxModel } from "domain-x";
import { Session } from "../../models/Session";
import { ICommand } from "command-manager";
// also works for child margin and padding editor
export default class UpdateMarginEditorState implements ICommand {
  displayName = "UpdateMarginEditorState";
  private domainLayerPath: string;
  private payload: { [key: string]: any };
  private session: Session;
  private prevState: BoxModel;

  constructor(
    session: Session,
    domainLayer: DomainLayer,
    payload: { [key: string]: any }
  ) {
    this.session = session;
    this.domainLayerPath = domainLayer.getFullPath();
    this.payload = payload;
  }
  execute() {
    const domainLayer = this.session.getLayerFromLayerPath(
      this.domainLayerPath
    );
    const uiProperty = domainLayer.ui[this.payload.key];
    this.prevState = { ...uiProperty };
    domainLayer.updateEditorState(this.payload.key, this.payload.properties);
    domainLayer.ui.emit(this.payload.key);
    this.session.drivers.analyticsService.addActivity(
      {
        name: `update.${this.payload.key}.editor.state`,
        path: "",
        category: "app/command"
      },
      true
    );
  }
  undo() {
    const domainLayer = this.session.getLayerFromLayerPath(
      this.domainLayerPath
    );
    domainLayer.updateEditorState(this.payload.key, this.prevState);
    domainLayer.ui.emit(this.payload.key);
    this.session.drivers.analyticsService.addActivity(
      {
        name: `undo.update.${this.payload.key}.editor.state`,
        path: "",
        category: "app/command"
      },
      true
    );
  }
  redo() {
    const domainLayer = this.session.getLayerFromLayerPath(
      this.domainLayerPath
    );
    domainLayer.updateEditorState(this.payload.key, this.payload.properties);
    domainLayer.ui.emit(this.payload.key);
    this.session.drivers.analyticsService.addActivity(
      {
        name: `redo.update.${this.payload.key}.editor.state`,
        path: "",
        category: "app/command"
      },
      true
    );
  }
}
