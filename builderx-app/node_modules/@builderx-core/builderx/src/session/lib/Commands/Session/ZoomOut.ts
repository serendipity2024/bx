import { ICommand } from "command-manager";
import { Session } from "../../models/Session";
import SetZoom from "./SetZoom";

export default class ZoomOut implements ICommand {
  displayName = "ZoomOut";
  session: Session;
  constructor(session: Session) {
    this.session = session;
    // this.zoom = zoom;
  }

  getZoomTo(closestTo: number): number {
    var zoom = [0.125, 0.25, 0.5, 0.667, 0.75, 1, 1.5, 2, 3, 4, 5];
    var closest = Math.max.apply(null, zoom); // Get the highest number in arr in case it match nothing.

    for (var i = 0; i < zoom.length; i++) {
      if (zoom[i] >= closestTo && zoom[i] <= closest) {
        closest = zoom[i - 1];
      }
    }

    if (!closest) {
      closest = this.session.currentStage.tools.zoom / 2;
    }
    return closest; // return the value
  }

  execute() {
    // const currentStage = this.session.currentStage;
    let zoom = this.session.currentStage.tools.zoom;
    if (zoom === 0) {
      zoom = 1;
    }
    let zoomTo = this.getZoomTo(zoom);
    // if (
    //   this.session.currentStage.renderCompiled.width * zoomTo >
    //     this.session.viewport.width &&
    //   this.session.currentStage.renderCompiled.height * zoomTo >
    //     this.session.viewport.height &&
    //   this.session.currentStage.tools.selectedTool !== "pen" &&
    //   this.session.currentStage.tools.selectedTool !== "path"
    // ) {
    this.session.commandManager.executeAndSkip(
      new SetZoom(this.session, zoomTo > 0.01 ? zoomTo : 0.01)
    );
    // currentStage.tools.emit("zoom");
    // }
  }
  undo() {
    // nope
  }
  redo() {
    // nope
  }
}
