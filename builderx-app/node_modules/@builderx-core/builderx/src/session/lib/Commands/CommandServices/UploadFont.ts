import { find } from "lodash";
import { SystemFont } from "common-interfaces";
import { Session } from "../../models/Session";
import * as pathUtil from "path";
import createService from ".";

export const UploadFont = createService(
  "UploadFont",
  async (session: Session, fontPostScriptName: string) => {
    const defaultAssetDirectory = session.project.defaultAssetDirectory;
    const fontPath = pathUtil.join(defaultAssetDirectory, "fonts");
    const font = find(session.systemFonts, (systemFont: SystemFont) => {
      return systemFont.postscriptName === fontPostScriptName;
    });
    try {
      if (font) {
        const { postscriptName, path } = font;
        const fileName = `${postscriptName}.ttf`;
        const extName = pathUtil.extname(fileName);
        if (postscriptName === fontPostScriptName && extName === ".ttf") {
          const filePath = pathUtil.join(fontPath, fileName);
          if (!(await session.drivers.fileService.isFileExists(filePath))) {
            uploadFontFile(session, path, fileName, filePath);
            session.addAssetToMap({ path: filePath });
          }
        }
        // this.callFunctions("addImport", ["/App.js", "Font", "expo"]);
      } else {
        // console.log("else fontUsedInProject");
      }
    } catch (Error) {
      console.log(Error, "fileBody:addFontinAppJS");
    }
  }
);

async function uploadFontFile(
  session: Session,
  url: string,
  fileName: string,
  filePath: string
) {
  try {
    if (
      url.indexOf(session.envConstants.BUILDERX_ASSETS_URL) !== -1 ||
      url.indexOf("fonts.gstatic.com") !== -1
    ) {
      url = url.replace("http:", "https:");
    } else {
      // DOC: checking for system fonts and getting it from fonts-tray app
      url = `${session.fontUrl}getFont?id=` + url;
    }
    // const result = await session.apiSdk.raw.getBlob(url, {
    //   responseType: "blob"
    // });
    // const file = new File([result.data], fileName, {
    //   type: result.data.type
    // });
    session.before();
    // await session.apiSdk.assets.uploadAsset(
    //   session.project.projectId,
    //   filePath,
    //   file as any,
    //   session.connectionId,
    //   "font"
    // );
  } catch (error) {
    console.log(error, "Error uploading fonts");
  } finally {
    session.after();
  }
}
