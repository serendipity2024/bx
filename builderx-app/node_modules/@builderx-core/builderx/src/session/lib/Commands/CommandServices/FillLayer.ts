import { Layer as DomainLayer } from "domain-x";
import { Session } from "../../models/Session";
import SetStyleAttributeMutator from "../../Mutators/SetStyleAttributeMutator";
import RemoveStyleAttributeMutator from "../../Mutators/RemoveStyleAttributeMutator";
import createService from ".";
import SetResizingTypeMutator from "../../Mutators/SetResizingTypeMutator";

const FillLayer = createService(
  "FillLayer",
  (
    session: Session,
    domainLayer: DomainLayer,
    property: "width" | "height"
  ) => {
    // RemoveCenterWrapperMutator(session, domainLayer);
    const position = domainLayer.props.getResolvedStyleAttribute("position");

    if (position === "absolute") {
      if (property === "width") {
        SetStyleAttributeMutator(
          session,
          domainLayer.getPath(undefined, true),
          "left",
          0
        );

        if (domainLayer.type === "image") {
          SetStyleAttributeMutator(
            session,
            domainLayer.getPath(undefined, true),
            "width",
            "100%"
          );
        } else {
          SetStyleAttributeMutator(
            session,
            domainLayer.getPath(undefined, true),
            "right",
            0
          );
        }
      } else if (property === "height") {
        SetStyleAttributeMutator(
          session,
          domainLayer.getPath(undefined, true),
          "top",
          0
        );

        SetStyleAttributeMutator(
          session,
          domainLayer.getPath(undefined, true),
          "bottom",
          0
        );
      }
    } else {
      const flexDirection = domainLayer.getParentLayerFlexDirection();

      if (
        (property === "width" && flexDirection === "row") ||
        (property === "height" && flexDirection !== "row")
      ) {
        SetStyleAttributeMutator(
          session,
          domainLayer.getPath(undefined, true),
          "flex",
          1
        );
      } else {
        SetStyleAttributeMutator(
          session,
          domainLayer.getPath(undefined, true),
          "alignSelf",
          "stretch"
        );
      }
    }

    if (
      domainLayer.type === "image" &&
      position === "absolute" &&
      property !== "width"
    ) {
      SetStyleAttributeMutator(
        session,
        domainLayer.getPath(undefined, true),
        property,
        null
      );
    } else if (!(domainLayer.type === "image")) {
      RemoveStyleAttributeMutator(
        session,
        domainLayer.getPath(undefined, true),
        property,
        "style"
      );
    }

    // domainLayer.ui.setResizingType(domainLayer.props.style.toJS());
    SetResizingTypeMutator(
      session,
      domainLayer.getFullPath(),
      domainLayer.props.style.toJS()
    );
  }
);

export default FillLayer;
