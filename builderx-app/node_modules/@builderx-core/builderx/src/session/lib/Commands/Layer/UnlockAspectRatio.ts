import { ICommand } from "command-manager";
import { Session } from "../../models/Session";
import { Layer } from "domain-x";
import SetLayerAspectRatioMutator from "../../Mutators/SetLayerAspectRatioMutator";

export default class UnlockAspectRatio implements ICommand {
  displayName = "UnlockAspectRatio";
  private session: Session;
  private layersPath: Array<string> = [];
  private oldAspectRatios: Array<number | undefined> = [];
  constructor(session: Session, layers: Array<Layer>) {
    this.session = session;
    this.oldAspectRatios = layers.map((layer: Layer) => layer.aspectRatio);
    layers.forEach((layer: Layer) => {
      this.layersPath.push(layer.getFullPath());
    });
  }
  execute() {
    this.layersPath.forEach((layerPath: string) => {
      SetLayerAspectRatioMutator(this.session, layerPath, undefined);
    });
    this.session.drivers.analyticsService.addActivity(
      {
        name: `unlock.layer.aspect.ratio`,
        category: "app/command"
      },
      true
    );
  }
  undo() {
    this.layersPath.forEach((layerPath: string, index: number) => {
      SetLayerAspectRatioMutator(
        this.session,
        layerPath,
        this.oldAspectRatios[index]
      );
    });
    this.session.drivers.analyticsService.addActivity(
      {
        name: `undo.unlock.layer.aspect.ratio`,
        category: "app/command"
      },
      true
    );
  }
  redo() {
    this.layersPath.forEach((layerPath: string) => {
      SetLayerAspectRatioMutator(this.session, layerPath, undefined);
    });
    this.session.drivers.analyticsService.addActivity(
      {
        name: `redo.unlock.layer.aspect.ratio`,
        category: "app/command"
      },
      true
    );
  }
}
