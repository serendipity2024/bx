import { Session } from "../../models/Session";
import createService from ".";
import { DeviceStore } from "bx-constants";
import { SetLayerDimensionsService } from "./SetLayerDimensions";
import { SetAllScopeVariablesService } from "./SetAllScopeVariablesService";
import { SetGridSizeMutator } from "../../Mutators";
import { DomainFile } from "domain-x";

const SetDeviceName = createService(
  "SetDeviceName",
  (session: Session, filePath: string, deviceName: string) => {
    const file = session.domain.files.get(filePath);
    if (file) {
      setDeviceName(session, file, deviceName);
    }
  }
);
function setFileDimension(session: Session, deviceName: string, os: string) {
  const selectedFile = session.getSelectedFile();
  if (!selectedFile || selectedFile.isSymbol() || deviceName === "custom") {
    return;
  }
  const deviceOrientation = selectedFile.scopeVariables.deviceOrientation;
  const deviceDimensions = DeviceStore.getDeviceDimensions(deviceName);
  const dimensions = {
    height:
      deviceOrientation === "landscape" && os !== "Web"
        ? deviceDimensions.width
        : deviceDimensions.height,
    width:
      deviceOrientation === "landscape" && os !== "Web"
        ? deviceDimensions.height
        : deviceDimensions.width,
    x: selectedFile.getBoundingClientRect().x,
    y: selectedFile.getBoundingClientRect().y
  };
  SetLayerDimensionsService(session, selectedFile.getFullPath(), dimensions);
}
function setDeviceName(session: Session, file: DomainFile, deviceName: string) {
  const device = DeviceStore.getDeviceByName(deviceName);
  let deviceModelName;
  let deviceOS;
  if (!device) {
    deviceModelName = deviceName;
    deviceOS = "iOS";
  } else {
    deviceModelName = device.model ? device.model : device.name;
    deviceOS = device.os;
  }
  session.project.setDeviceName(deviceModelName);
  const updatedObject = {
    ...file.scopeVariables,
    platform: deviceOS,
    deviceName: deviceModelName
  };
  SetAllScopeVariablesService(session, file.path, updatedObject);
  setFileDimension(session, deviceModelName, deviceOS);
  SetGridSizeMutator(session, {
    x: session.drivers.configuration.get("editor.grid.row"),
    y: session.drivers.configuration.get("editor.grid.column")
  });
}

export default SetDeviceName;
