import { Session } from "../../models/Session";
import createService from ".";
import { DeviceStore } from "bx-constants";
import { SetLayerDimensionsService } from "./SetLayerDimensions";
import { SetAllScopeVariablesService } from "./SetAllScopeVariablesService";
import { SetGridSizeMutator } from "../../Mutators";
import { DomainFile } from "domain-x";

const SetDeviceOrientation = createService(
  "SetDeviceOrientation",
  (
    session: Session,
    filePath: string,
    deviceOrientation: "portrait" | "landscape"
  ) => {
    session.project.setDeviceOrientation(deviceOrientation);
    const file = session.domain.files.get(filePath);
    if (!file) {
      return;
    }
    setFileDimension(session, file, deviceOrientation);
    const updatedObject = {
      ...session.selectedFile.scopeVariables,
      deviceOrientation
    };
    SetAllScopeVariablesService(session, filePath, updatedObject);
  }
);

function setFileDimension(
  session: Session,
  file: DomainFile,
  deviceOrientation: "portrait" | "landscape"
) {
  if (!file || file.scopeVariables.deviceName === "custom") {
    return;
  }
  const deviceDimensions = DeviceStore.getDeviceDimensions(
    file.scopeVariables.deviceName
  );
  const device = DeviceStore.getDeviceByName(file.scopeVariables.deviceName);
  const deviceOS = device ? device.os : "iOS";
  const dimensions = {
    height:
      deviceOrientation === "landscape" && deviceOS !== "Web"
        ? deviceDimensions.width
        : deviceDimensions.height,
    width:
      deviceOrientation === "landscape" && deviceOS !== "Web"
        ? deviceDimensions.height
        : deviceDimensions.width,
    x: file.getBoundingClientRect().x,
    y: file.getBoundingClientRect().y
  };
  SetLayerDimensionsService(session, file.getFullPath(), dimensions);
  SetGridSizeMutator(session, {
    x: session.drivers.configuration.get("editor.grid.row"),
    y: session.drivers.configuration.get("editor.grid.column")
  });
}
export default SetDeviceOrientation;
