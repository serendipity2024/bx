import { Session } from "../models/Session";
import { ResolveNode, Utils } from "utils";
import { SetFileDirtyMutator, CreateExpressionNodeMutator } from ".";
import { DomainLayer } from "domain-x";
import { SessionEvent } from "event-manager";

export default function SetTextMutator(
  session: Session,
  layerId: string,
  value: any
) {
  const layer: DomainLayer = session.getLayerFromLayerPath(layerId);
  if (!layer) {
    console.error("Layer not found!");
    return;
  }

  if (layer.children && layer.children.length) {
    if (layer.type === "text") {
      if (Utils.isExpression(layer.children[0].type)) {
        //
        const json = layer.children[0].toJS
          ? layer.children[0].toJS()
          : layer.children[0];

        const resolvedNode = ResolveNode(
          json,
          session.selectedFile ? session.selectedFile.scopeVariables : {}
        );

        if (resolvedNode.type === "literal") {
          resolvedNode["value"] = value;
          // session.applyPatch({
          //   op: "replace",
          //   path: `/domain/files:::${Utils.modifyLayerPathForJsonPatch(
          //     resolvedNode.getFullPath()
          //   )}/value`,
          //   value: value
          // });
        }

        let path = "";
        let key = "";
        path = ``;
        key = "children.0";
        CreateExpressionNodeMutator(session, layer, path, key, json);
        // SetFileDirtyMutator(session, filePath, true);
        return;
      } else {
        const layerJson = layer.children[0];
        const resolvedNode = ResolveNode(
          layerJson,
          session.selectedFile ? session.selectedFile.scopeVariables : {}
        );

        if (resolvedNode.type === "literal") {
          // resolvedNode["value"] = value;
          session.emitPatch({
            op: "replace",
            path: `/domain/files:::${Utils.modifyLayerPathForJsonPatch(
              resolvedNode.getFullPath()
            )}/value`,
            value: value
          });
        }
      }
    }
  }
  const file = layer.getFile();
  if (file) {
    SetFileDirtyMutator(session, file.path, true);
  }

  // const event = new SessionEvent("setText", {
  //   layer,
  //   value
  // });
  // session.eventManager.dispatchEvent("setText", event);

  return layer;
}
