import { IMutator } from "common-interfaces";
import { forEach, find, findIndex } from "lodash";
import { Session } from "../models/Session";
import { SetFileDirtyMutator, SetCenterWrapperMutator } from ".";
import { Layer } from "@builderx-core/designer";
import { DomainLayer } from "domain-x";
import { SessionEvent } from "event-manager";
import { Utils } from "utils";

export default function SetStageArtboardStyleAttributeMutator(
  session: Session,
  stageArtboardId: string,
  key: any,
  value: any
) {
  const stageArtboardIndex = findIndex(
    session.currentStage.stageArtboards,
    stageArtboard => {
      return stageArtboard.path === stageArtboardId;
    }
  );

  if (stageArtboardIndex === -1) {
    return;
  }

  const stageArtboard = session.currentStage.stageArtboards[stageArtboardIndex];
  // if (layer) {
  // stageArtboard.props.setStyleAttribute(key, value);
  session.emitPatch({
    op: "replace",
    path: `/stages:::${session.currentStage.id}:::/stageArtboards/${stageArtboardIndex}/props/style/${key}`,
    value: value
  });
  // stageArtboard.props.style.emit(key);
  // }
  // const file = layer.getFile();
  // if (file) {
  //   SetFileDirtyMutator(session, file.path, true);
  // }
  // SetCenterWrapperMutator(session, layerId, {
  //   horizontal: false,
  //   vertical: false
  // });
  // const event = new SessionEvent("setStageArtboardStyleAttribute", {
  //   stageArtboard,
  //   key,
  //   value
  // });
  // session.eventManager.dispatchEvent("setStageArtboardStyleAttribute", event);
  // return stageArtboard;
}
