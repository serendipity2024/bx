import { Session } from "../models/Session";
import { forEach, get } from "lodash";
import { Layer } from "domain-x";
import SetHoverLayers from "./SetHoverLayersMutator";
import { Utils } from "utils";

export default function RemoveHoveredForAllLayersMutator(session: Session) {
  forEach(session.getLayersFromSelectedLayerCollection(), (layer: Layer) => {
    const layerPath = layer.getFullPath();
    if (layerPath) {
      session.emitPatch({
        op: "replace",
        path: `/domain/files:::${Utils.modifyLayerPathForJsonPatch(
          layerPath
        )}/hovered`,
        value: false
      });
    }
    // layer.hovered = false;
    // layer.emit("hovered");
  });

  session.emitPatch({
    op: "replace",
    path: `/hoveredLayers`,
    value: []
  });
  // session.hoveredLayers = [];
  if (session.selectedFile) {
    SetHoverLayers(session, get(session.selectedFile, "path"), []);
  }
}
