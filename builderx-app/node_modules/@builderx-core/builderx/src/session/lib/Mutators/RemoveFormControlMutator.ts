import { Session } from "../models/Session";
import { SetFileDirtyMutator } from ".";
import { SessionEvent } from "event-manager";
import { Utils } from "utils";
import { Import, DomainLayer, FormControl } from "domain-x";
import { findIndex, isNil } from "lodash";

export default function RemoveFormControlMutator(
  session: Session,
  filePath: string,
  domainLayerPath: string
) {
  const file = session.domain.files.get(filePath);
  if (!file) {
    return;
  }

  file.formControls.forEach((formControl, index) => {
    if (formControl.layerPath === domainLayerPath) {
      session.emitPatch({
        op: "remove",
        path: `/domain/files:::${filePath}:::/formControls/${index}`
      });
      const symbolInstances = file.symbolInstances;
      symbolInstances.forEach((symbolInstance, symbolInstanceIndex) => {
        if (symbolInstance.scopeVariables[formControl.title]) {
          // delete symbolInstance.scopeVariables[formControl.title];
          session.emitPatch({
            op: "remove",
            path: `/domain/files:::${filePath}:::/symbolInstances/${symbolInstanceIndex}/scopeVariables/${formControl.title}`
          });
        }
      });
    }
  });
}
