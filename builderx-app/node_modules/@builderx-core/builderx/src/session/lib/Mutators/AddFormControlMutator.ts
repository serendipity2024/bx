import { Session } from "../models/Session";
import { SetFileDirtyMutator } from ".";
import { SessionEvent } from "event-manager";
import { Utils } from "utils";
import { Import, DomainLayer, FormControl } from "domain-x";
import { findIndex, isNil } from "lodash";

export default function AddFormControlMutator(
  session: Session,
  filePath: string,
  controlType:
    | "string"
    | "color"
    | "number"
    | "callback"
    | "icon"
    | "navigation",
  styleName: string,
  domainLayerPath: string
) {
  const file = session.domain.files.get(filePath);
  const domainLayer = session.getLayerFromLayerPath(domainLayerPath);
  if (!file || !domainLayer) {
    return;
  }

  const index = findIndex(file.formControls, (formControl: FormControl) => {
    return formControl.layerPath === domainLayerPath;
  });
  if (isNil(index) || index === -1) {
    // this.formControls.push(new FormControl(type, title, layer));

    session.emitPatch({
      op: "add",
      path: `/domain/files:::${filePath}:::/formControls/-`,
      value: {
        type: "class",
        className: "FormControl",
        value: { type: controlType, title: styleName, layer: domainLayerPath }
      }
    });
  }
}
