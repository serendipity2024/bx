import { IMutator } from "common-interfaces";
import { Session } from "../models/Session";
import { SessionEvent } from "event-manager";
import SetStyleAttributeMutator from "./SetStyleAttributeMutator";

export default function SetFontPropertiesMutator(
  session: Session,
  domainLayerPath: string,
  value: any,
  stylePropName: string = "style",
  noPreserve: boolean = false
) {
  const domainLayer = session.getLayerFromLayerPath(domainLayerPath);
  if (!domainLayer) {
    return;
  }

  if (!noPreserve) {
    SetStyleAttributeMutator(
      session,
      domainLayerPath,
      "fontFamily",
      value.family,
      stylePropName
    );

    SetStyleAttributeMutator(
      session,
      domainLayerPath,
      "fontStyle",
      value.style,
      stylePropName
    );

    SetStyleAttributeMutator(
      session,
      domainLayerPath,
      "fontWeight",
      value.weight,
      stylePropName
    );
  } else {
    const event = new SessionEvent("setStyleAttribute", {
      layer: domainLayer,
      key: "fontFamily",
      value: value.family,
      stylePropName: stylePropName
    });

    session.eventManager.dispatchEvent("setStyleAttribute", event);

    const event2 = new SessionEvent("setStyleAttribute", {
      layer: domainLayer,
      key: "fontStyle",
      value: value.style,
      stylePropName: stylePropName
    });

    session.eventManager.dispatchEvent("setStyleAttribute", event2);

    const event3 = new SessionEvent("setStyleAttribute", {
      layer: domainLayer,
      key: "fontWeight",
      value: value.weight,
      stylePropName: stylePropName
    });

    session.eventManager.dispatchEvent("setStyleAttribute", event3);
  }
}
