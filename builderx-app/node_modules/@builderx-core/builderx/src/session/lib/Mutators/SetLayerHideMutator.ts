import { Session } from "../models/Session";
import { SetFileDirtyMutator, SetStyleAttributeMutator } from ".";
import { SessionEvent } from "event-manager";
import RemoveStyleAttributeMutator from "./RemoveStyleAttributeMutator";
import { DomainLayer } from "domain-x";
import { Utils } from "utils";

export default function SetLayerHideMutator(
  session: Session,
  layerId: string,
  hide: boolean
) {
  const layer: DomainLayer = session.getLayerFromLayerPath(layerId);
  if (!layer) {
    return;
  }
  // layer.hidden = hide;
  session.emitPatch({
    op: "replace",
    path: `/domain/files:::${Utils.modifyLayerPathForJsonPatch(
      layerId
    )}/hidden`,
    value: hide
  });

  if (hide) {
    SetStyleAttributeMutator(session, layer.getFullPath(), "display", "none");
  } else if (layer.props.getResolvedStyleAttribute("display") === "none") {
    RemoveStyleAttributeMutator(session, layer.getFullPath(), "display");
  }

  const file = layer.getFile();
  if (file) {
    SetFileDirtyMutator(session, file.path, true);
  }

  // const event = new SessionEvent("setLayerHide", {
  //   domainLayer: layer,
  //   hide
  // });
  // session.eventManager.dispatchEvent("setLayerHide", event);
}
