import { IMutator } from "common-interfaces";
import { forEach } from "lodash";
import { Session } from "../models/Session";
import { SessionEvent } from "event-manager";
import SetFileDirtyMutator from "./SetFileDirtyMutator";
import { Utils } from "utils";
// import { File as DomainFile, TextLayer, TextInputLayer } from "domain-x";
// import { DeviceStore } from "bx-constants";
// import { ResolveNode, ResolveNodeValue, Utils } from "utils";
// import { SetProp } from ".";

export default function SetLiteralValueMutator(
  session: Session,
  layerId: any,
  value: any
) {
  const file = session.getFileFromLayerPath(layerId);

  if (!file) {
    console.error("File not found!");
    return;
  }
  const layer = file.getLayerFromPath(layerId);
  if (!layer) {
    return;
  }

  session.emitPatch({
    op: "replace",
    path: `/domain/files:::${Utils.modifyLayerPathForJsonPatch(layerId)}/value`,
    value: value
  });
  // layer["value"] = value;

  // if (
  //   isFinalChange &&
  //   camelCase(value.replace(/ /g, " ")) !== layer.styleName &&
  //   ((layer instanceof TextLayer && layer.autoRenaming) ||
  //     layer instanceof TextInputLayer) &&
  //   value.length <= 20
  // ) {
  //   let domainFile = layer.getFile();
  //   if (domainFile) {
  //     let newStyleName = domainFile.getStyleNameForStyleSheet(value);
  //     if (Utils.validateVariableName(newStyleName)) {
  //       // set style name here
  //       // session.commandManager.executeAndSkip(
  //       //   new SetStyleName(session, layer, newStyleName)
  //       // );
  //     }
  //   }
  // }
  // }

  SetFileDirtyMutator(session, file.path, true);

  // const event = new SessionEvent("setLiteralValue", {
  //   layer,
  //   value
  // });
  // session.eventManager.dispatchEvent("setLiteralValue", event);

  return layer;
}
