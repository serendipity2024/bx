import axios from "axios";
import BaseApiModel from "../model";
var path = require("path");
var lib = path.join(
  path.dirname(require.resolve("axios")),
  "lib/adapters/http"
);
var http = require(lib);

export default class BaseApiService {
  state: BaseApiModel;

  constructor() {
    this.state = new BaseApiModel();
  }
  get(url: string, params?: object) {
    return this.request(url, "GET");
  }

  post(url: string, data: object) {
    // //console.log("url======", url);
    return this.request(url, "POST", data);
  }

  request(url: string, method: string, data?: object, callback?: any) {
    // //console.log("baseURL", constants.BUILDERX_API);
    // //console.log("URL", url);
    return axios({
      url,
      baseURL: "",
      data: data ? data : null,
      adapter: http,
      method,
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json"
      }
    })
      .then((result: any) => {
        if (result.data.status) {
          if (callback) {
            callback();
          }
          this.state.isInternetAvailable(true);
          this.state.setLastTimeInternetAvailable();
        }
        return result;
      })
      .catch((error: any) => {
        if (!error.status) {
          // //console.log("baseURL", constants.BUILDERX_API);
          // //console.log("URL", url);
          // console.log("error", error.response);
          return error.response;
        }
        return error.response;
      });
  }
}
