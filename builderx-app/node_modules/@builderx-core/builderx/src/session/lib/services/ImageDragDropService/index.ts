import { Session } from "../../models/Session";
import { get } from "lodash";
export default class ImageDragDropService {
  session: Session;
  constructor(session: Session) {
    this.session = session;
    this.register();
  }
  register() {
    window.ondragover = e => {
      e.preventDefault();
      e.stopPropagation();
      return false;
    };

    window.onfocus = e => {
      this.session.keyboardService.clearCurrentKey();
    };
    window.ondrop = e => {
      e.preventDefault();
      e.stopPropagation();
      if (this.session.readonly) {
        return;
      }
      // console.log("ehello,draggedFiledraggedFiledraggedFiledraggedFile");
      if (this.session.pageRouter.currentRoute === "workspace") {
        try {
          const draggedFile: string = get(e, "dataTransfer.files[0].path");
          if (!draggedFile) {
            return false;
          }
          const draggedFileArray = draggedFile.split(".");
          let fileType = draggedFileArray[draggedFileArray.length - 1];
          // console.log("dragdrop fileType", fileType);
          fileType = fileType.toLowerCase();
          if (
            fileType === "png" ||
            fileType === "jpg" ||
            fileType === "jpeg" ||
            fileType === "gif"
          ) {
            // console.log(
            //   draggedFile,
            //   "draggedFiledraggedFiledraggedFiledraggedFile"
            // );
            // this.session.operations.layer.openImage(true, draggedFile);
          } else {
            this.session.notificationManager.notifyError(
              "Invalid file format. Use .png, .jpg, .gif.",
              "File format"
            );
          }
        } catch {
          return false;
        }
      }
      return false;
    };

    window.ondragleave = e => {
      e.preventDefault();
      e.stopPropagation();
      return false;
    };
  }

  destroy() {
    return true;
  }
}
