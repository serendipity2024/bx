import { Model } from "model";
import { types } from "serializable";

export default class FeedbackForm extends Model {
  message: string;
  rating: number;
  formData: any;
  isLoading: boolean;
  submitting: boolean;
  isDesigner: boolean;
  isDeveloper: boolean;
  uuid: string;
  constructor() {
    super();
    this.message = "";
    this.rating = 0;
    this.isDesigner = false;
    this.isDeveloper = false;
    this.uuid = "";
  }
  getFields() {
    return {
      message: types.literal,
      rating: types.literal,
      formData: types.literal,
      isDesigner: types.literal,
      isDeveloper: types.literal,
      uuid: types.literal
    };
  }
  setMessage(message: string) {
    this.message = message;
  }
  setRating(rating: number) {
    this.rating = rating;
  }
  setUuid(uuid: string) {
    this.uuid = uuid;
  }
  setFormData() {
    const type =
      this.isDeveloper && this.isDesigner
        ? "Developer and Designer"
        : this.isDeveloper
          ? "Developer"
          : this.isDesigner
            ? "Designer"
            : "none";
    this.formData = {
      uuid: this.uuid,
      rating: this.rating.toString(),
      message: this.message,
      userType: type
    };
  }
  setIsDesigner(value: boolean) {
    this.isDesigner = value;
  }
  setIsDeveloper(value: boolean) {
    this.isDeveloper = value;
  }
  resetState() {
    this.message = "";
    this.rating = 0;
    this.formData = null;
    this.isDesigner = false;
    this.isDeveloper = false;
    this.uuid = "";
  }
}
