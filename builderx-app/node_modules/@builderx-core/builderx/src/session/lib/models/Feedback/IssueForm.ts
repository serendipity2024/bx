import { Model } from "model";
import { types } from "serializable";

export default class IssueForm extends Model {
  message: string;
  subject: string;
  imageObject: any;
  appState: string;
  formData: any;
  isChecked: boolean;
  validImage: boolean;
  uuid: string;
  constructor() {
    super();
    this.message = "";
    this.subject = "";
    this.appState = "";
    this.formData = false;
    this.isChecked = false;
    this.validImage = true;
    this.uuid = "";
  }
  getFields() {
    return {
      message: types.literal,
      subject: types.literal,
      imageObject: types.literal,
      appState: types.literal,
      formData: types.literal,
      isChecked: types.literal,
      validImage: types.literal
    };
  }

  setMessage(message: string) {
    this.message = message;
  }
  setSubject(subject: string) {
    this.subject = subject;
  }
  setImageObject(imageObject: any) {
    this.imageObject = imageObject;
  }
  setAppState(appState: string) {
    this.appState = appState;
  }
  setUuid(uuid: string) {
    this.uuid = uuid;
  }
  setFormData() {
    let formData = new FormData();
    formData.append("message", this.message);
    formData.append("subject", this.subject);
    formData.append("app_state", this.appState);
    formData.append("image", this.imageObject);
    formData.append("uuid", this.uuid);
    this.formData = formData;
  }
  setIsChecked(checked: boolean) {
    this.isChecked = checked;
  }
  isImageValid(isImageValid: boolean) {
    this.validImage = isImageValid;
  }
  resetState() {
    this.message = "";
    this.subject = "";
    this.imageObject = null;
    this.appState = "";
    this.formData = null;
    this.isChecked = false;
    this.validImage = true;
    this.uuid = "";
  }
}
