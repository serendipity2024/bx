import { Model } from "model";
import { Props, Layer } from "domain-x";
import { Session } from "session";

export default class StageArtboard extends Model {
  rootLayerId: string;
  props: Props;
  path: string;
  session: Session;
  constructor(session: Session) {
    //
    super();
    this.session = session;
    this.props = new Props();
  }

  setRootLayerId(rootLayerId: string) {
    this.rootLayerId = rootLayerId;
  }
  setPath(path: string) {
    this.path = path;
  }
  setProp(key: string, value: any) {
    this.props.setProp(key, value);
  }
  removeProp(key: string) {
    this.props.removeProp(key);
  }

  getBoundingClientRect() {
    let dims = {
      x: 0,
      y: 0,
      width: 0,
      height: 0,
      rotation: 0,
      rootX: 0,
      rootY: 0
    };
    const ownStageRef = this.getOwnCanvasRef();
    if (ownStageRef) {
      return ownStageRef.getBoundingClientRect();
    }

    return dims;
  }
  getOwnCanvasRef(): Layer {
    return this.session.executeFunction(
      "getOwnCanvasRef",
      this,
      this.session.currentStage.canvas
    );
  }
}
