// // import {
// //   SetGradientType,
// //   SetGradient,
// //   RotateGradient
// // } from "../../lib/Commands";
// import {
//   gradientJSON,
//   gradientPoints,
//   gradientData,
//   rotateGradientJSON
// } from "../Templates/Gradient";
// import { cloneDeep } from "lodash";
// import { CommandManager } from "command-manager";
// import { Session } from "../../lib/models/Session";

// export const GradientTypeTest = (
//   session: Session,
//   commandManager: CommandManager
// ) => {
//   test("Set Gradient Type Command", () => {
//     const file = session.domain.files.get("/src/screens/Untitled.js");
//     expect(file).toBeDefined();
//     if (!file)
//       return;
//     }
//     const domainLayer = (file.layer.children[0] as any).children[0];
//     commandManager.execute(
//       new SetGradientType(
//         session,
//         domainLayer,
//         "gradientType",
//         "LinearGradient"
//       )
//     );
//     testSetGradientType(domainLayer);
//   });
// };
// export const GradientTypeUndoTest = (
//   session: Session,
//   commandManager: CommandManager
// ) => {
//   test("Set Gradient Type Command Undo", () => {
//     const file = session.domain.files.get("/src/screens/Untitled.js");
//     expect(file).toBeDefined();
//     if (!file) {
//       return;
//     }
//     const domainLayer = (file.layer.children[0] as any).children[0];
//     commandManager.undo();
//     expect(domainLayer.gradient).toBeUndefined();
//     expect(domainLayer.props.style.backgroundImage).toBeUndefined();
//     expect(domainLayer.props.style.backgroundColor).toBeDefined();
//   });
// };
// export const GradientTypeRedoTest = (
//   session: Session,
//   commandManager: CommandManager
// ) => {
//   test("Set Gradient Type Command Redo", () => {
//     const file = session.domain.files.get("/src/screens/Untitled.js");
//     expect(file).toBeDefined();
//     if (!file) {
//       return;
//     }
//     const domainLayer = (file.layer.children[0] as any).children[0];
//     commandManager.redo();
//     testSetGradientType(domainLayer);
//   });
// };
// export const SetGradientTest = (
//   session: Session,
//   commandManager: CommandManager
// ) => {
//   test("Set Gradient Command", () => {
//     const file = session.domain.files.get("/src/screens/Untitled.js");
//     expect(file).toBeDefined();
//     if (!file) {
//       return;
//     }
//     const domainLayer = (file.layer.children[0] as any).children[0];
//     commandManager.execute(
//       new SetGradient(
//         session,
//         domainLayer,
//         "backgroundImage",
//         gradientPoints,
//         gradientData
//       )
//     );
//     testGradient(domainLayer);
//   });
// };
// export const SetGradientUndoTest = (
//   session: Session,
//   commandManager: CommandManager
// ) => {
//   test("Set Gradient Command Undo", () => {
//     const file = session.domain.files.get("/src/screens/Untitled.js");
//     expect(file).toBeDefined();
//     if (!file) {
//       return;
//     }
//     const domainLayer = (file.layer.children[0] as any).children[0];
//     commandManager.undo();
//     testSetGradientType(domainLayer);
//   });
// };
// export const SetGradientRedoTest = (
//   session: Session,
//   commandManager: CommandManager
// ) => {
//   test("Set Gradient Command Redo", () => {
//     const file = session.domain.files.get("/src/screens/Untitled.js");
//     expect(file).toBeDefined();
//     if (!file) {
//       return;
//     }
//     const domainLayer = (file.layer.children[0] as any).children[0];
//     commandManager.redo();
//     testGradient(domainLayer);
//   });
// };
// function testSetGradientType(domainLayer: any) {
//   expect(domainLayer.type).toBe("view");
//   const domainCompiledLayer = domainLayer.domainCompiledRefs[0];
//   const domainRenderCompiledLayer = domainLayer.domainCompiledRefs[0].renderCompiledRef;
//   expect(domainCompiledLayer.domain.type).toBe("view");
//   expect(domainRenderCompiledLayer.type).toBe("view");
//   const gradient = domainLayer.gradient;
//   const gradientJSON2 = gradient.toJS();
//   delete gradientJSON2["imageName"];
//   expect(gradientJSON2).toEqual(gradientJSON);
// }

// function testGradient(domainLayer: any) {
//   expect(domainLayer.type).toBe("view");
//   const domainCompiledLayer = domainLayer.domainCompiledRefs[0];
//   const domainRenderCompiledLayer = domainLayer.domainCompiledRefs[0].renderCompiledRef;
//   expect(domainCompiledLayer.domain.type).toBe("view");
//   expect(domainRenderCompiledLayer.type).toBe("view");
//   const gradient = domainLayer.gradient;
//   const newGradientJSON = cloneDeep(gradientJSON);
//   newGradientJSON.stops[0].stopColor = "rgba(127,71,71,1)";
//   const gradientJSON2 = gradient.toJS();
//   delete gradientJSON2["imageName"];
//   expect(gradientJSON2).toEqual(newGradientJSON);
//   expect(domainLayer.props.style.backgroundImage).toBeDefined();
// }
// export const RotateGradientTest = (
//   session: Session,
//   commandManager: CommandManager
// ) => {
//   test("Rotate Gradient Command", () => {
//     const file = session.domain.files.get("/src/screens/Untitled.js");
//     expect(file).toBeDefined();
//     if (!file) {
//       return;
//     }
//     const domainLayer = (file.layer.children[0] as any).children[0];
//     commandManager.execute(
//       new RotateGradient(session, domainLayer, "backgroundImage", 90)
//     );
//     const gradient = domainLayer.gradient;
//     const gradientJSON2 = gradient.toJS();
//     delete gradientJSON2["imageName"];
//     expect(gradientJSON2).toEqual(rotateGradientJSON);
//   });
// };
// export const RotateGradientUndoTest = (
//   session: Session,
//   commandManager: CommandManager
// ) => {
//   test("Rotate Gradient Command Undo", () => {
//     const file = session.domain.files.get("/src/screens/Untitled.js");
//     expect(file).toBeDefined();
//     if (!file) {
//       return;
//     }
//     const domainLayer = (file.layer.children[0] as any).children[0];
//     commandManager.undo();
//     const gradient = domainLayer.gradient;
//     const newGradientJSON = cloneDeep(gradientJSON);
//     newGradientJSON.stops[0].stopColor = "rgba(127,71,71,1)";
//     const gradientJSON2 = gradient.toJS();
//     delete gradientJSON2["imageName"];
//     expect(gradientJSON2).toEqual(newGradientJSON);
//   });
// };

// export const RotateGradientRedoTest = (
//   session: Session,
//   commandManager: CommandManager
// ) => {
//   test("Rotate Gradient Command Redo", () => {
//     const file = session.domain.files.get("/src/screens/Untitled.js");
//     expect(file).toBeDefined();
//     if (!file) {
//       return;
//     }
//     const domainLayer = (file.layer.children[0] as any).children[0];
//     commandManager.redo();
//     const gradient = domainLayer.gradient;
//     const gradientJSON2 = gradient.toJS();
//     delete gradientJSON2["imageName"];
//     expect(gradientJSON2).toEqual(rotateGradientJSON);
//   });
// };
