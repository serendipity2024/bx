import * as React from "react";
import { FormGroup, FormRow, Button } from "components-x";
import { IEvent } from "common-interfaces";
import { Session } from "session";

interface PropType {
  onEvent: (event: IEvent) => void;
  pathEditorPointMode: "straight" | "disconnected";
  tools: any;
  session: Session;
}

export default class PathCurveTypeEditor extends React.PureComponent<
  PropType,
  any
> {
  componentDidMount() {
    this.props.tools.on(["pathEditorData", "selectedTool"], this.onUpdate);
  }

  onUpdate = (key: string) => {
    this.forceUpdate();
  };

  componentWillUnmount() {
    this.props.tools.off(["pathEditorData", "selectedTool"], this.onUpdate);
  }
  componentDidUpdate(prevProps: PropType) {
    prevProps.tools.off(["pathEditorData", "selectedTool"], this.onUpdate);
    this.props.tools.on(["pathEditorData", "selectedTool"], this.onUpdate);
  }
  render() {
    if (this.props.tools.selectedTool !== "path") {
      return null;
    }
    return (
      <FormGroup>
        <FormRow>
          <Button
            borderBottomRadius
            active={this.props.pathEditorPointMode === "disconnected"}
            uiBackground={700}
            borderRight={true}
            flexible={true}
            onClick={() => {
              this.props.onEvent({
                type: "disconnectSelectedPathPoint",
                originalEvent: null,
                payload: {}
              });
            }}
            caption="Disconnected"
            // style={{ paddingBottom: 10 }}
          />
          <Button
            borderBottomRadius
            active={this.props.pathEditorPointMode === "straight"}
            uiBackground={700}
            borderRight={true}
            flexible={true}
            onClick={() => {
              this.props.onEvent({
                type: "straightenSelectedPathPoint",
                originalEvent: null,
                payload: {}
              });
            }}
            caption="Straight"
            // style={{ paddingBottom: 10 }}
          />
        </FormRow>
      </FormGroup>
    );
  }
}
