import { IEvent } from "common-interfaces";
import {
  Checkbox,
  CheckboxLabel,
  CheckboxTick,
  FormCol,
  FormRow
} from "components-x";
import { DomainLayer } from "domain-x";
import * as React from "react";
import { Session } from "session";
type propType = {
  onEvent: (event: IEvent) => void;
  layer: DomainLayer;
  checked: boolean;
  toggleCheckbox: (e: any) => void;
  title: string;
  session: Session;
  propertyName: string | undefined;
  value: any;
};
class BooleanInputWithCheckbox extends React.PureComponent<propType, any> {
  constructor(props: propType) {
    super(props);
  }
  componentDidMount() {
    // TODO:
    if (this.props.propertyName) {
      this.props.layer.props.style.on(this.props.propertyName, this.onUpdate);
    }
  }
  onUpdate = (key: string) => {
    this.forceUpdate();
  };
  componentDidUpdate(prevProps: propType) {
    if (prevProps.propertyName) {
      prevProps.layer.props.style.off(prevProps.propertyName, this.onUpdate);
    }
    if (this.props.propertyName) {
      this.props.layer.props.style.on(this.props.propertyName, this.onUpdate);
    }
  }
  componentWillUnmount() {
    // TODO:
    if (this.props.propertyName) {
      this.props.layer.props.style.off(this.props.propertyName, this.onUpdate);
    }
  }

  render() {
    const propertyName = this.props.propertyName;
    if (!propertyName) {
      return null;
    }
    const value = this.props.value;
    return (
      <FormRow key={propertyName}>
        <Checkbox style={{ flex: 0, paddingRight: 7 }}>
          <CheckboxTick
            noMargin
            checked={this.props.checked}
            onChange={this.props.toggleCheckbox}
          />
        </Checkbox>
        <FormCol first={true}>
          <Checkbox>
            <CheckboxTick
              noMargin
              checked={value}
              onChange={(e: any) => {
                // TODO:
                this.props.onEvent({
                  payload: {
                    key: propertyName,
                    value: e.target.checked
                  },
                  type: "setStyleAttribute",
                  originalEvent: e,
                  target: this.props.layer
                });
              }}
            />
            <CheckboxLabel>{this.props.title}</CheckboxLabel>
          </Checkbox>
        </FormCol>
      </FormRow>
    );
  }
}
export default BooleanInputWithCheckbox;
