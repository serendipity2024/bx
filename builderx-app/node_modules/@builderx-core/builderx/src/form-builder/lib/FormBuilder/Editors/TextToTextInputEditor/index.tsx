import { IEvent } from "common-interfaces";
import {
  Checkbox,
  CheckboxLabel,
  CheckboxTick,
  COLORS,
  FormCol,
  FormRow,
  PropertyGroup,
  PropertyHeader,
  spaceMagnitudes
} from "components-x";
import { Layer } from "domain-x";
import * as React from "react";
import { Session } from "session";
type propType = {
  onEvent: (event: IEvent) => void;
  session: Session;
  layer: Layer;
  key: string;
};

export default class TextToTextInputEditor extends React.Component<
  propType,
  any
> {
  changeToTextInput = (val: any) => {
    this.props.onEvent({
      target: this.props.layer,
      originalEvent: null,
      payload: { isEditable: val },
      type: "changeToTextInput"
    });
  };

  render() {
    const layerName = this.props.layer.import.layerName;
    let isEditable: boolean = this.props.layer && layerName === "TextInput";
    return (
      <PropertyGroup
        uiBackground={700}
        style={{ borderRadius: 2, marginTop: 4 }}
      >
        <PropertyHeader
          uiBackground={700}
          style={{
            borderRadius: 2,
            paddingTop: spaceMagnitudes[2],
            paddingBottom: spaceMagnitudes[2],
            backgroundColor:
              layerName === "TextInput" ? COLORS.secondary[600] : COLORS[700]
          }}
          onClick={(e: any) => {
            this.changeToTextInput(!isEditable);
          }}
        >
          <FormRow>
            <FormCol first>
              <Checkbox style={{ color: "#FFF" }}>
                <CheckboxTick
                  noMargin
                  uiColor={50}
                  noBorder={layerName === "TextInput"}
                  checked={layerName === "TextInput"}
                  onChange={() => {
                    //
                  }}
                />
                <CheckboxLabel
                  style={{
                    color: layerName === "TextInput" ? COLORS[0] : COLORS[300]
                  }}
                >
                  Editable
                </CheckboxLabel>
              </Checkbox>
            </FormCol>
          </FormRow>
        </PropertyHeader>
      </PropertyGroup>
    );
  }
}
