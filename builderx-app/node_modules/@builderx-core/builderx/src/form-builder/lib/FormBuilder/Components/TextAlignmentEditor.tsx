import * as React from "react";
import { Button, FormRow, FormCol, ButtonGroup, Icon } from "components-x";
import { Layer } from "domain-x";
import { Session } from "session";
import { IEvent } from "common-interfaces";

type propType = {
  layer: Layer;
  session: Session;
  onEvent: (event: IEvent) => void;
};

export default class TextEditor extends React.PureComponent<
  {
    layer: Layer;
    onEvent: (event: IEvent) => void;
  },
  any
> {
  onUpdate = () => {
    this.forceUpdate();
  };
  componentDidMount() {
    this.props.layer.props.style.on(`textAlign`, this.onUpdate);
  }
  componentDidUpdate(prevProps: propType) {
    prevProps.layer.props.style.off(`textAlign`, this.onUpdate);
    this.props.layer.props.style.on(`textAlign`, this.onUpdate);
  }
  componentWillUnmount() {
    this.props.layer.props.style.off(`textAlign`, this.onUpdate);
  }

  handleChangeAlignment(val: any) {
    this.props.onEvent({
      originalEvent: null,
      type: "setStyleAttribute",
      payload: {
        key: "textAlign",
        value: val
      },
      target: this.props.layer
    });
  }

  render() {
    const alignment = this.props.layer.props.getResolvedStyleAttribute(
      "textAlign"
    );
    return (
      <FormRow className="pt-2 pb-1">
        <FormCol first>
          <ButtonGroup uiSize="xl">
            <Button
              className="py-2"
              active={alignment === "left"}
              borderRight
              uiBackground={700}
              flexible
              icon={<Icon name="textalign-left" size={12} />}
              onClick={() => {
                this.handleChangeAlignment("left");
              }}
            />
            <Button
              className="py-2"
              active={alignment === "center"}
              borderRight
              uiBackground={700}
              flexible
              icon={<Icon name="textalign-center" size={12} />}
              onClick={() => {
                this.handleChangeAlignment("center");
              }}
            />
            <Button
              className="py-2"
              active={alignment === "right"}
              borderRight
              uiBackground={700}
              flexible
              icon={<Icon name="textalign-right" size={12} />}
              onClick={() => {
                this.handleChangeAlignment("right");
              }}
            />
            <Button
              className="py-2"
              active={alignment === "justify"}
              uiBackground={700}
              flexible
              icon={<Icon name="textalign-justify" size={12} />}
              onClick={() => {
                this.handleChangeAlignment("justify");
              }}
            />
          </ButtonGroup>
        </FormCol>
      </FormRow>
    );
  }
}
