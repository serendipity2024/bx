export default function parse(archive: any) {
  let result: any = {};

  let objects = archive[0].$objects;
  let root = archive[0].$top.root.UID;

  let getReferenceById = (id: any) => {
    let refObj = objects[id];
    if (
      typeof refObj === "string" ||
      typeof refObj === "number" ||
      typeof refObj === "boolean"
    ) {
      return refObj;
    }

    let tempRes: any = {};
    if (typeof refObj === "object") {
      for (let i in refObj) {
        if (refObj[i].UID) {
          tempRes[i] = getReferenceById(refObj[i].UID);
        } else if (
          Array.isArray(refObj[i]) &&
          i !== "NS.keys" &&
          i !== "NS.objects"
        ) {
          tempRes[i] = [];
          refObj[i].forEach((childRefObj: any) => {
            if (childRefObj.UID) {
              tempRes[i].push(getReferenceById(childRefObj.UID));
            } else {
              tempRes[i].push(childRefObj);
            }
          });
        } else if (i !== "NS.keys" && i !== "NS.objects") {
          tempRes[i] = refObj[i];
        }
      }
    }
    if (refObj["NS.keys"]) {
      refObj["NS.keys"].forEach((keyObj: any, index: any) => {
        let keyId: any = getReferenceById(keyObj.UID);
        let obj: any = getReferenceById(refObj["NS.objects"][index].UID);
        tempRes[keyId] = obj;
      });
    } else if (refObj["NS.objects"] && !refObj["NS.keys"]) {
      refObj["NS.objects"].forEach((valObj: any, index: any) => {
        let obj = getReferenceById(refObj["NS.objects"][index].UID);
        tempRes = { ...tempRes, ...obj };
      });
    }
    return tempRes;
  };

  let topObj = objects[root];
  for (let keyIndex in topObj) {
    if (topObj[keyIndex].UID) {
      result[keyIndex] = getReferenceById(topObj[keyIndex].UID);
    }
  }
  return result;
}
