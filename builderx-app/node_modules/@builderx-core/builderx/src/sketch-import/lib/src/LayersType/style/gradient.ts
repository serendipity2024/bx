import { getColor } from "./styleUtils";

let gradientType = ["LinearGradient", "RadialGradient", "AngularGradient"];

function parsePoints(pointString: string) {
  let tempPoints = pointString.split(",");
  let px = tempPoints[0].slice(1);
  let py = tempPoints[1].slice(1, -1);
  return {
    // TODO: fix this while refactor
    x: parseFloat(py).toFixed(2),
    y: parseFloat(px).toFixed(2)
  };
}

function getStops(stops: any) {
  let stopsArray: any = [];
  stops.map((obj: any) => {
    let stop = {
      stopColor: getColor(obj.color),
      offset: obj.position.toString()
    };
    stopsArray.push(stop);
  });
  return stopsArray;
}

export function getGradientProps(gradientSketch: any, gradientId: string) {
  let gradient = {
    id: gradientId,
    gradientType: gradientType[gradientSketch.gradientType],
    shouldSmoothenOpacity: false,
    elipseLength: gradientSketch.elipseLength,
    from: parsePoints(gradientSketch.to),
    to: parsePoints(gradientSketch.from),
    stops: getStops(gradientSketch.stops)
  };
  return gradient;
}

export default function createGradientLayer(
  gradientSketch: any,
  gradientId: string
) {
  let child: any = {};
  child = {
    type: "gradient",
    locked: false,
    import: {
      layerName: "LinearGradient",
      packageName: "react-native-svg",
      isDefaultImport: false
    },
    props: getGradientProps(gradientSketch, gradientId),
    children: []
  };
  let stopsArray = getStops(gradientSketch.stops);
  stopsArray.map((stop: any) => {
    child.children.push({
      type: "stop",
      locked: false,
      import: {
        layerName: "Stop",
        packageName: "react-native-svg",
        isDefaultImport: false
      },
      props: stop,
      children: []
    });
  });
  return child;
}
