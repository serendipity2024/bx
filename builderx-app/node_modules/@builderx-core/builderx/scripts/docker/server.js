var express = require("express");
var request = require("request-promise");
var app = express();
var cookieParser = require("cookie-parser");
const fs = require("fs");

app.use(cookieParser());
app.set("view engine", "ejs");
app.set("views", __dirname + "/build/");
app.use(express.static("./build/"));

app.get("/*", async (req, res) => {
  const path = req.path;
  const processEnv = process.env;
  let allowed = ["BUILDERX_"];

  let filtered = Object.keys(processEnv)
    .filter(key => key.indexOf(allowed) === 0)
    .reduce((obj, key) => {
      obj[key] = processEnv[key];
      return obj;
    }, {});
  if (req.path === "" || req.path === "/") {
    const cookie = req.cookies["builderx-auth-token"];
    if (isMobileOrOtherBrowsers(req)) {
      res.writeHead(200, { "Content-type": "text/html" });
      res.end(fs.readFileSync(__dirname + "/unsupported.html"));
      return;
    } else {
      if (cookie) {
        try {
          const expired = await checkIsExpired(res, filtered, cookie);
          if (expired) {
            res.redirect(`${filtered.BUILDERX_WEBSITE_URL}/expired`);
            return;
          }
        } catch (error) {
          if (error.statusCode === 402) {
            res.redirect(`${filtered.BUILDERX_WEBSITE_URL}/expired`);
          } else {
            redirectToLoginOrSignUp(req, res, filtered);
          }
          return;
        }
        res.render("index.ejs", {
          title: filtered.BUILDERX_PROJECT_TITLE
            ? filtered.BUILDERX_PROJECT_TITLE + " - BuilderX"
            : "BuilderX",
          bxEnv: filtered
        });
      } else {
        redirectToLoginOrSignUp(req, res, filtered);
        return;
      }
    }
  } else {
    const cookie = req.cookies["builderx-auth-token"];
    const projectPath = `${filtered.BUILDERX_API_URL}/projects${path}`;
    var options = {
      uri: projectPath,
      headers: {
        Accept: "application/json",
        Authorization: `Bearer ${cookie}`
      },
      method: "GET"
    };
    if (cookie) {
      try {
        const expired = await checkIsExpired(res, filtered, cookie);
        if (expired) {
          res.redirect(`${filtered.BUILDERX_WEBSITE_URL}/expired`);
          return;
        }
        var result = await request(options);
        const access = JSON.parse(result).access;
        if (!(access && access.access !== "disabled")) {
          // + cookie - access
          res.writeHead(200, { "Content-type": "text/html" });
          res.end(fs.readFileSync(__dirname + "/unauthorized.html"));
          return;
        }
      } catch (error) {
        if (error.statusCode === 402) {
          res.redirect(`${filtered.BUILDERX_WEBSITE_URL}/expired`);
        } else {
          res.writeHead(200, { "Content-type": "text/html" });
          res.end(fs.readFileSync(__dirname + "/unauthorized.html"));
        }
        return;
      }
    } else {
      try {
        var result = await request(options);
        const access = JSON.parse(result).access;
        if (!(access && access.access !== "disabled")) {
          redirectToLoginOrSignUp(req, res, filtered);
          return;
        }
      } catch (error) {
        if (error.statusCode === 402) {
          res.redirect(`${filtered.BUILDERX_WEBSITE_URL}/expired`);
        } else {
          redirectToLoginOrSignUp(req, res, filtered);
        }
        return;
      }
    }
    options = {
      uri: `${filtered.BUILDERX_API_URL}/projects${path}`,
      method: "GET",
      json: true
    };
    var result;
    try {
      result = await request(options);
    } catch (Error) {
      //
    }
    if (result) {
      filtered.BUILDERX_PROJECT_TITLE = result.name;
      filtered.BUILDERX_PROJECT_DESCRIPTION = result.description;
      filtered.BUILDERX_PROJECT_IMAGE = `${filtered.BUILDERX_API_URL}/get-files-content${path}?fileName=/.thumbnail.png`;
      filtered.BUILDERX_PROJECT_URL = `${filtered.BUILDERX_APP_URL}${path}`;
    }
    // checking if mobile or other browser then serving thumbnail
    if (isMobileOrOtherBrowsers(req)) {
      res.render("mobile-index.ejs", {
        title: filtered.BUILDERX_PROJECT_TITLE
          ? filtered.BUILDERX_PROJECT_TITLE + " - BuilderX"
          : "BuilderX",
        bxEnv: filtered
      });
      // res.writeHead(200, { "Content-type": "text/html" });
      // res.end(getThumbnail(filtered.BUILDERX_API_URL, path));
      return;
    } else {
      res.render("index.ejs", {
        title: filtered.BUILDERX_PROJECT_TITLE
          ? filtered.BUILDERX_PROJECT_TITLE + " - BuilderX"
          : "BuilderX",
        bxEnv: filtered
      });
    }
  }
});

const port = 8000;
app.listen(port, function() {
  console.log("server listening on port " + port);
});

function redirectToLoginOrSignUp(req, res, filtered) {
  res.cookie("redirectAfterLogin", `${filtered.BUILDERX_APP_URL}${req.path}`);
  if (req.query["newUser"]) {
    res.redirect(`${filtered.BUILDERX_WEBSITE_URL}/signup`);
  } else {
    res.redirect(`${filtered.BUILDERX_WEBSITE_URL}/login`);
  }
}

// function getThumbnail(apiUrl, path) {
//   const imageUrl = `${apiUrl}/get-files-content${path}?fileName=/.thumbnail.png`;
//   return `<html><body style="background-color: #171a21"><img src=${imageUrl}><body></html>`;
// }
async function checkIsExpired(res, filtered, cookie) {
  var options = {
    uri: `${filtered.BUILDERX_API_URL}/get-my-id`,
    headers: {
      Accept: "application/json",
      Authorization: `Bearer ${cookie}`
    },
    method: "GET"
  };
  var result = await request(options);
  var days_remaining = JSON.parse(result).user
    ? JSON.parse(result).user.days_remaining
    : 0;
  let isSubscribed = JSON.parse(result).user
    ? JSON.parse(result).user.isSubscribed
    : 0;

  if (!isSubscribed && days_remaining < 1) {
    // console.log(
    //   days_remaining,
    //   isSubscribed,
    //   `${filtered.BUILDERX_WEBSITE_URL}/expired`,
    //   "days remaining"
    // );

    return true;
  }

  return false;
}
function isMobileOrOtherBrowsers(req) {
  return (
    !isChrome(req.headers["user-agent"]) ||
    isMobileOrTablet(req.headers["user-agent"])
  );
}
function isMobileOrTablet(userAgent) {
  var check = false;
  (function(a) {
    if (
      // tslint:disable-next-line: max-line-length
      /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(
        a
      ) ||
      // tslint:disable-next-line: max-line-length
      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(
        a.substr(0, 4)
      )
    ) {
      check = true;
    }
  })(userAgent);
  return check;
}
function isChrome(userAgent) {
  var isChrome = /Chrome/.test(userAgent);
  return isChrome;
}
