import { selectShapeByDblClick, selectShape } from "./actions/selectShape";
import selectTool from "./actions/selectTool";
import drawShape from "./actions/drawShape";
import { getOffsetsOf } from "./actions/sharedFuncs";
import { makeRandomName } from "./actions/sharedFuncs";

import { camelCase, upperFirst } from "lodash";
export default function artboardTests() {
  var artBoardName = "";
  context("Artboard Features", () => {
    beforeEach(function() {
      Cypress.Cookies.preserveOnce("access-token");
    });

    it("can draw a Rectangle", function() {
      cy.get(".bx-artboard-Untitled > .view-render > .view-render").should(
        "not.exist"
      );
      selectTool("rectangle");
      drawShape();
      cy.get(".bx-artboard-Untitled > .view-render > .view-render").should(
        "exist"
      );
    });
    it("can create a duplicate artboard", function() {
      cy.get(".bx-artboard-Untitled1").should("not.exist");
      cy.get(".bx-artboard-Untitled > .view-render").then(elem => {
        var elemPos = Cypress.dom.getElementCoordinatesByPosition(elem);
        cy.get("body")
          .click(
            elemPos.fromViewport.leftCenter,
            elemPos.fromViewport.topCenter
          )
          .click(
            elemPos.fromViewport.leftCenter,
            elemPos.fromViewport.topCenter
          )
          .trigger(
            "contextmenu",
            elemPos.fromViewport.leftCenter,
            elemPos.fromViewport.topCenter
          );
        cy.get(".react-contexify__item__content")
          .contains(/^Duplicate Artboard$/i)
          .then(elem => {
            var dupPos = Cypress.dom.getElementCoordinatesByPosition(elem);
            cy.get("body")
              .trigger(
                "mouseover",
                dupPos.fromViewport.leftCenter + 20,
                dupPos.fromViewport.topCenter + 10
              )
              .click(
                dupPos.fromViewport.leftCenter + 20,
                dupPos.fromViewport.topCenter + 10
              );
          });
        // .trigger(
        //   "mousemove",
        //   elemPos.fromViewport.leftCenter + 10,
        //   elemPos.fromViewport.topCenter + 10
        // )
        // .trigger(
        //   "mousemove",
        //   elemPos.fromViewport.leftCenter + 20,
        //   elemPos.fromViewport.topCenter + 10
        // )
      });
      cy.get(".bx-artboard-Untitled1").should("exist");
    });

    it("checks content of both artboards to be similiar", function() {
      getOffsetsOf(
        ".bx-artboard-Untitled > .view-render > .view-render",
        ".bx-artboard-Untitled > .view-render",
        offsetofrect => {
          getOffsetsOf(
            ".bx-artboard-Untitled1 > .view-render > .view-render",
            ".bx-artboard-Untitled1 > .view-render",
            offsetofrect1 => {
              expect(offsetofrect).to.deep.equal(offsetofrect1);
            }
          );
        }
      );
    });

    it("reloads and checks the artboards", function() {
      cy.wait(10000);
      cy.reload({ force: true });
      cy.wait(10000);
      getOffsetsOf(
        ".bx-artboard-Untitled > .view-render > .view-render",
        ".bx-artboard-Untitled > .view-render",
        offsetofrect => {
          getOffsetsOf(
            ".bx-artboard-Untitled1 > .view-render > .view-render",
            ".bx-artboard-Untitled1 > .view-render",
            offsetofrect1 => {
              expect(offsetofrect).to.deep.equal(offsetofrect1);
            }
          );
        }
      );
    });

    it("deletes the Second artboard", function() {
      cy.get(".bx-artboard-Untitled1 > .view-render").then(elem => {
        var elemPos = Cypress.dom.getElementCoordinatesByPosition(elem);
        cy.get("body")
          .click(
            elemPos.fromViewport.leftCenter,
            elemPos.fromViewport.topCenter
          )
          .click(
            elemPos.fromViewport.leftCenter,
            elemPos.fromViewport.topCenter
          )
          .trigger(
            "contextmenu",
            elemPos.fromViewport.leftCenter,
            elemPos.fromViewport.topCenter
          );

        cy.get(".react-contexify__item__content")
          .contains(/^Delete Artboard$/i)
          .then(elem => {
            var dupPos = Cypress.dom.getElementCoordinatesByPosition(elem);
            cy.get("body")
              .trigger(
                "mouseover",
                dupPos.fromViewport.leftCenter,
                dupPos.fromViewport.topCenter
              )
              .click(
                dupPos.fromViewport.leftCenter,
                dupPos.fromViewport.topCenter
              );
          });
      });
    });

    it("can rename an artboard", function() {
      cy.get(".barHeadingX > .barActionX > ul")
        .click()
        .click();

      cy.get(".barHeadingX > .barActionX li")
        .contains(/^Rename$/i)
        .then(elem => {
          var dupPos = Cypress.dom.getElementCoordinatesByPosition(elem);
          cy.get("body")
            .trigger(
              "mouseover",
              dupPos.fromViewport.leftCenter,
              dupPos.fromViewport.topCenter
            )
            .click(
              dupPos.fromViewport.leftCenter,
              dupPos.fromViewport.topCenter
            );
        });

      artBoardName = makeRandomName(7);
      cy.get(".modalContentX input.inputGroupInputX").type(artBoardName);
      cy.get(".modalContentX div.textX")
        .contains("Confirm")
        .click("center");
      artBoardName = upperFirst(camelCase(artBoardName));
      cy.get("div[data-cypress-id=file-header]")
        .contains(artBoardName + ".js")
        .should("exist");
      cy.wait(10000);
      cy.reload();
    });

    it("deletes the Second artboard", function() {
      cy.get(".bx-artboard-" + artBoardName + " > .view-render").then(elem => {
        var elemPos = Cypress.dom.getElementCoordinatesByPosition(elem);
        cy.get("body")
          .click(
            elemPos.fromViewport.leftCenter,
            elemPos.fromViewport.topCenter
          )
          .click(
            elemPos.fromViewport.leftCenter,
            elemPos.fromViewport.topCenter
          )
          .trigger(
            "contextmenu",
            elemPos.fromViewport.leftCenter,
            elemPos.fromViewport.topCenter
          );

        cy.get(".react-contexify__item__content")
          .contains(/^Delete Artboard$/i)
          .then(elem => {
            var dupPos = Cypress.dom.getElementCoordinatesByPosition(elem);
            cy.get("body")
              .trigger(
                "mouseover",
                dupPos.fromViewport.leftCenter,
                dupPos.fromViewport.topCenter
              )
              .click(
                dupPos.fromViewport.leftCenter,
                dupPos.fromViewport.topCenter
              );
          });
      });
    });

    it("can add an artboard", function() {
      cy.get(".bx-artboard-Untitled1").should("not.exist");
      selectShape("button[name=add-artboard]");
      cy.get(".bx-artboard-Untitled").should("exist");
    });
  });
}
