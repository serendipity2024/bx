{"version":3,"file":"yogax.esm.js","sources":["../src/yogaNodeMapper.ts","../src/iconToText.ts","../src/yogax.ts"],"sourcesContent":["import { isNil, isArray } from 'lodash';\nconst yoga = require('yoga-layout-prebuilt');\n\nexport default function updateNodePositionalAttributes(\n  yogaNode: any,\n  key: any,\n  value: any\n) {\n  if (!yogaNode) {\n    return;\n  }\n\n  if (key === 'height') {\n    if (value === undefined) {\n      yogaNode.setHeightAuto();\n    } else {\n      yogaNode.setHeight(value);\n    }\n  } else if (key === 'width') {\n    if (value === undefined) {\n      yogaNode.setWidthAuto();\n    } else {\n      yogaNode.setWidth(value);\n    }\n  } else if (key === 'fontSize') {\n    // yogaNode.setWidth(value);\n    // yogaNode.setHeight(value);\n  } else if (key === 'left') {\n    if (value === undefined) {\n      value = NaN;\n    }\n    yogaNode.setPosition(yoga.EDGE_LEFT, value);\n  } else if (key === 'right') {\n    if (value === undefined) {\n      value = NaN;\n    }\n    yogaNode.setPosition(yoga.EDGE_RIGHT, value);\n  } else if (key === 'top') {\n    if (value === undefined) {\n      value = NaN;\n    }\n    yogaNode.setPosition(yoga.EDGE_TOP, value);\n  } else if (key === 'bottom') {\n    if (value === undefined) {\n      value = NaN;\n    }\n    yogaNode.setPosition(yoga.EDGE_BOTTOM, value);\n  } else if (key === 'position' && value === 'absolute') {\n    yogaNode.setPositionType(yoga.POSITION_TYPE_ABSOLUTE);\n  } else if (key === 'position' && value === undefined) {\n    yogaNode.setPositionType(undefined);\n  } else if (key === 'flex') {\n    yogaNode.setFlexGrow(value);\n    yogaNode.setFlexShrink(value);\n    // yogaNode.setFlexBasis(\"auto\");\n    yogaNode.setFlex(value);\n  } else if (key === 'alignContent') {\n    setAlignProperties(yogaNode, key, value);\n  } else if (key === 'alignItems') {\n    setAlignProperties(yogaNode, key, value);\n  } else if (key === 'alignSelf') {\n    setAlignProperties(yogaNode, key, value);\n  } else if (key === 'display') {\n    yogaNode.setDisplay(value);\n  } else if (key === 'flexBasis') {\n    yogaNode.setFlexBasis(value);\n  } else if (key === 'flexDirection') {\n    setFlexDirection(yogaNode, value);\n  } else if (key === 'flexGrow') {\n    yogaNode.setFlexGrow(value);\n  } else if (key === 'flexShrink') {\n    yogaNode.setFlexShrink(value);\n  } else if (key === 'flexWrap') {\n    setFlexWrap(yogaNode, value);\n  } else if (key === 'justifyContent') {\n    setJustifyContent(yogaNode, value);\n  } else if (key === 'maxHeight') {\n    if (value === undefined) {\n      value = NaN;\n    }\n    yogaNode.setMaxHeight(value);\n  } else if (key === 'maxWidth') {\n    if (value === undefined) {\n      value = NaN;\n    }\n    yogaNode.setMaxWidth(value);\n  } else if (key === 'minHeight') {\n    if (value === undefined) {\n      value = NaN;\n    }\n    yogaNode.setMinHeight(value);\n  } else if (key === 'minWidth') {\n    if (value === undefined) {\n      value = NaN;\n    }\n    yogaNode.setMinWidth(value);\n  } else if (key === 'maxHeight') {\n    if (value === undefined) {\n      value = NaN;\n    }\n    yogaNode.setMaxHeight(value);\n  } else if (key === 'maxHeight') {\n    if (value === undefined) {\n      value = NaN;\n    }\n    yogaNode.setMaxHeight(value);\n  } else if (\n    key.indexOf('padding') !== -1 ||\n    key.indexOf('border') !== -1 ||\n    key.indexOf('margin') !== -1\n  ) {\n    setBoxModelProperties(yogaNode, key, value);\n  } else if (key === 'overflow') {\n    setOverflow(yogaNode, value);\n  }\n}\n// for margin, padding & border\nfunction setBoxModelProperties(yogaNode: any, key: any, value: any) {\n  if (isNil(value)) {\n    value = NaN;\n  }\n  let yogaEdge = yoga.EDGE_ALL;\n  if (key.indexOf('Left') !== -1) {\n    yogaEdge = yoga.EDGE_LEFT;\n  } else if (key.indexOf('Right') !== -1) {\n    yogaEdge = yoga.EDGE_RIGHT;\n  } else if (key.indexOf('Top') !== -1) {\n    yogaEdge = yoga.EDGE_TOP;\n  } else if (key.indexOf('Bottom') !== -1) {\n    yogaEdge = yoga.EDGE_BOTTOM;\n  } else if (key.indexOf('Horizontal') !== -1) {\n    yogaEdge = [yoga.EDGE_LEFT, yoga.EDGE_RIGHT];\n  } else if (key.indexOf('Vertical') !== -1) {\n    yogaEdge = [yoga.EDGE_TOP, yoga.EDGE_BOTTOM];\n  }\n\n  if (key.indexOf('padding') !== -1) {\n    if (isArray(yogaEdge)) {\n      yogaEdge.forEach(edge => {\n        yogaNode.setPadding(edge, value / 2);\n      });\n    } else {\n      yogaNode.setPadding(yogaEdge, value);\n    }\n  } else if (key.indexOf('border') !== -1) {\n    if (typeof value !== 'string') {\n      if (isArray(yogaEdge)) {\n        yogaEdge.forEach(edge => {\n          yogaNode.setBorder(edge, value / 2);\n        });\n      } else {\n        if (yogaEdge === yoga.EDGE_ALL) {\n          let edges = [\n            yoga.EDGE_LEFT,\n            yoga.EDGE_RIGHT,\n            yoga.EDGE_BOTTOM,\n            yoga.EDGE_TOP,\n          ];\n\n          if (\n            !isNil(yogaNode.props.style['borderLeftWidth']) ||\n            !isNil(yogaNode.props.style['borderHorizontalWidth'])\n          ) {\n            edges.splice(edges.indexOf(yoga.EDGE_LEFT), 1);\n          }\n\n          if (\n            !isNil(yogaNode.props.style['borderRightWidth']) ||\n            !isNil(yogaNode.props.style['borderHorizontalWidth'])\n          ) {\n            edges.splice(edges.indexOf(yoga.EDGE_RIGHT), 1);\n          }\n\n          if (\n            !isNil(yogaNode.props.style['borderTopWidth']) ||\n            !isNil(yogaNode.props.style['borderVerticalWidth'])\n          ) {\n            edges.splice(edges.indexOf(yoga.EDGE_TOP), 1);\n          }\n\n          if (\n            !isNil(yogaNode.props.style['borderBottomWidth']) ||\n            !isNil(yogaNode.props.style['borderVerticalWidth'])\n          ) {\n            edges.splice(edges.indexOf(yoga.EDGE_BOTTOM), 1);\n          }\n\n          edges.forEach(edge => {\n            yogaNode.setBorder(edge, value);\n          });\n        } else {\n          yogaNode.setBorder(yogaEdge, value);\n        }\n      }\n    }\n  } else if (key.indexOf('margin') !== -1) {\n    if (typeof value === 'string' && value.indexOf('auto') !== -1) {\n      yogaNode.setMarginAuto(yogaEdge);\n    } else {\n      if (isArray(yogaEdge)) {\n        yogaEdge.forEach(edge => {\n          yogaNode.setMargin(edge, value / 2);\n        });\n      } else {\n        yogaNode.setMargin(yogaEdge, value);\n      }\n    }\n  }\n}\nfunction setOverflow(yogaNode: any, value: any) {\n  if (value === 'hidden') {\n    yogaNode.setOverflow(yoga.OVERFLOW_HIDDEN);\n  } else if (value === 'visible') {\n    yogaNode.setOverflow(yoga.OVERFLOW_SCROLL);\n  } else if (value === 'scroll') {\n    yogaNode.setOverflow(yoga.OVERFLOW_VISIBLE);\n  }\n}\nfunction setFlexDirection(yogaNode: any, value: any) {\n  if (value === 'column') {\n    yogaNode.setFlexDirection(yoga.FLEX_DIRECTION_COLUMN);\n  } else if (value === 'column-reverse') {\n    yogaNode.setFlexDirection(yoga.FLEX_DIRECTION_COLUMN_REVERSE);\n  } else if (value === 'row') {\n    yogaNode.setFlexDirection(yoga.FLEX_DIRECTION_ROW);\n  } else if (value === 'row-reverse') {\n    yogaNode.setFlexDirection(yoga.FLEX_DIRECTION_ROW_REVERSE);\n  }\n}\n\nfunction setAlignProperties(yogaNode: any, key: any, value: any) {\n  let alignProperty = yoga.ALIGN_AUTO;\n  if (value === 'baseline') {\n    alignProperty = yoga.ALIGN_BASELINE;\n  } else if (value === 'center') {\n    alignProperty = yoga.ALIGN_CENTER;\n  } else if (value === 'flex-end') {\n    alignProperty = yoga.ALIGN_FLEX_END;\n  } else if (value === 'flex-start') {\n    alignProperty = yoga.ALIGN_FLEX_START;\n  } else if (value === 'stretch') {\n    alignProperty = yoga.ALIGN_STRETCH;\n  } else if (value === 'space-around') {\n    alignProperty = yoga.ALIGN_SPACE_AROUND;\n  } else if (value === 'space-between') {\n    alignProperty = yoga.ALIGN_SPACE_BETWEEN;\n  } else if (value === undefined) {\n    alignProperty = undefined;\n  }\n  if (key === 'alignItems') {\n    yogaNode.setAlignItems(alignProperty);\n  } else if (key === 'alignContent') {\n    yogaNode.setAlignContent(alignProperty);\n  } else if (key === 'alignSelf') {\n    yogaNode.setAlignSelf(alignProperty);\n  }\n}\n\nfunction setFlexWrap(yogaNode: any, value: any) {\n  if (value === 'wrap') {\n    yogaNode.setFlexWrap(yoga.WRAP_WRAP);\n  } else if (value === 'nowrap') {\n    yogaNode.setFlexWrap(yoga.WRAP_NO_WRAP);\n  } else if (value === 'wrap-reverse') {\n    yogaNode.setFlexWrap(yoga.WRAP_WRAP_REVERSE);\n  }\n}\n\nfunction setJustifyContent(yogaNode: any, value: any) {\n  if (value === 'center') {\n    yogaNode.setJustifyContent(yoga.JUSTIFY_CENTER);\n  } else if (value === 'flex-end') {\n    yogaNode.setJustifyContent(yoga.JUSTIFY_FLEX_END);\n  } else if (value === 'flex-start') {\n    yogaNode.setJustifyContent(yoga.JUSTIFY_FLEX_START);\n  } else if (value === 'space-around') {\n    yogaNode.setJustifyContent(yoga.JUSTIFY_SPACE_AROUND);\n  } else if (value === 'space-between') {\n    yogaNode.setJustifyContent(yoga.JUSTIFY_SPACE_BETWEEN);\n  } else if (value === 'space-evenly') {\n    yogaNode.setJustifyContent(yoga.JUSTIFY_SPACE_EVENLY);\n  }\n}\n","const AntDesign = require('react-native-vector-icons/glyphmaps/AntDesign.json');\nconst Entypo = require('react-native-vector-icons/glyphmaps/Entypo.json');\nconst EvilIcons = require('react-native-vector-icons/glyphmaps/EvilIcons.json');\nconst Feather = require('react-native-vector-icons/glyphmaps/Feather.json');\nconst FontAwesome = require('react-native-vector-icons/glyphmaps/FontAwesome.json');\n// const FontAwesome5 = require(\"react-native-vector-icons/glyphmaps/FontAwesome5Free.json\");\nconst Foundation = require('react-native-vector-icons/glyphmaps/Foundation.json');\nconst Ionicons = require('react-native-vector-icons/glyphmaps/Ionicons.json');\nconst MaterialCommunityIcons = require('react-native-vector-icons/glyphmaps/MaterialCommunityIcons.json');\nconst MaterialIcons = require('react-native-vector-icons/glyphmaps/MaterialIcons.json');\nconst Octicons = require('react-native-vector-icons/glyphmaps/Octicons.json');\nconst SimpleLineIcons = require('react-native-vector-icons/glyphmaps/SimpleLineIcons.json');\nconst Zocial = require('react-native-vector-icons/glyphmaps/Zocial.json');\n\nconst IconFamilies = {\n  AntDesign,\n  Entypo,\n  EvilIcons,\n  Feather,\n  FontAwesome,\n  // FontAwesome5,\n  Foundation,\n  Ionicons,\n  MaterialCommunityIcons,\n  MaterialIcons,\n  SimpleLineIcons,\n  Octicons,\n  Zocial,\n};\n\nexport default function iconToText(props: any) {\n  let text = props.name;\n  let family1 = props.type ? props.type : 'MaterialCommunityIcons';\n\n  let str = String.fromCharCode((IconFamilies as any)[family1][text]);\n\n  if (family1 === 'MaterialCommunityIcons') {\n    // family1 = \"Material Design Icons\";\n  }\n  return {\n    family: family1,\n    text: str,\n  };\n\n  // return {\n  //   family: \"\",\n  //   text: \"hai\"\n  // };\n}\n","import { forEach, reverse, memoize, isNil, pickBy, map, get } from 'lodash';\n// import iconToText from './iconToText';\n// import { resolveLiteralNode } from './utils';\nimport updateNodePositionalAttributes from './yogaNodeMapper';\n\nconst yoga = require('yoga-layout-prebuilt');\nconst { Node: _Node, Config: _Config } = yoga;\n\nfunction forEachLayerChild(layer: any, callback: any) {\n  forEach(layer.children, (childLayer, index) => {\n    if (childLayer) {\n      callback(childLayer, index);\n    }\n  });\n}\n\nfunction traverseNode(node: any, callback: any) {\n  if (node) {\n    callback(node);\n  }\n  if (node && node.type !== 'text') {\n    forEachLayerChild(node, (child: any) => {\n      if (typeof child !== 'string') {\n        traverseNode(child, callback);\n      }\n    });\n  }\n}\n\nvar getRoot = function(yogaNode: any) {\n  var parent = yogaNode;\n  var root = null;\n  while (parent) {\n    root = parent;\n    parent = parent.parent;\n  }\n\n  return root;\n};\n\nlet getFixedWidthParent = function(yogaNode: any) {\n  let parent = yogaNode;\n  let root = getRoot(yogaNode);\n  let result = false;\n  let done = false;\n  while (parent && !done) {\n    let width = parent.getWidth();\n    if (!isNaN(width.value) && parent !== root) {\n      result = true;\n      done = true;\n    }\n    parent = parent.parent;\n  }\n  return result;\n};\n\nlet getContainerDims = function(yogaNode: any) {\n  let width = 0;\n  let height = 0;\n  let left = 0;\n  let top = 0;\n  let isAbsolute = false;\n  // let isAuto = false;\n  let nodeLeft = yogaNode.getComputedLeft();\n  let nodePosition = yogaNode.getPositionType();\n  // console.log(left, \"left here 123123\");\n  let parent = yogaNode;\n\n  let done = false;\n  let parentObj = [];\n  while (!width && !done) {\n    const position = parent.getPositionType();\n    left = parent.getRootLeft();\n\n    // isAuto = isNaN(parent.getWidth().value) ? true : false;\n    const isFillParent = parent.parent && parent.parent.isFillWidth();\n    parent = parent.parent;\n\n    if (parent) {\n      parentObj.push(parent);\n\n      if (position) {\n        isAbsolute = true;\n\n        if (isFillParent) {\n          width = parent.getComputedWidth();\n        } else if (nodePosition) {\n          width = parent.getComputedWidth() - nodeLeft;\n        } else {\n          width =\n            getRoot(parent).getWidth() -\n            (left - getRoot(parent).getComputedLeft());\n        }\n\n        done = true;\n      } else {\n        const yogaWidth = parent.getWidth();\n\n        if (yogaWidth.unit === 2) {\n          width = parent.getComputedWidth();\n        } else {\n          width = yogaWidth.value;\n        }\n      }\n    } else {\n      done = true;\n    }\n  }\n\n  parent = yogaNode;\n  done = false;\n  while (!height && !done) {\n    const position = parent.getPositionType();\n    top = parent.getRootTop();\n    // isAuto = isNaN(parent.getHeight().value) ? true : false;\n    parent = parent.parent;\n    if (parent) {\n      parentObj.push(parent);\n\n      if (position) {\n        height = getRoot(parent).getHeight();\n        done = true;\n      } else {\n        const yogaHeight = parent.getHeight();\n        if (yogaHeight.unit === 2) {\n          height = parent.getComputedHeight();\n        } else {\n          height = yogaHeight.value;\n        }\n      }\n    } else {\n      done = true;\n    }\n  }\n\n  var reverseParentObj = reverse(parentObj);\n  reverseParentObj.forEach(node => {\n    var paddingAll = node.getPadding(yoga.EDGE_ALL);\n    var paddingLeft = node.getPadding(yoga.EDGE_LEFT);\n    var paddingRight = node.getPadding(yoga.EDGE_RIGHT);\n\n    var marginAll = node.getMargin(yoga.EDGE_ALL);\n    var marginLeft = node.getMargin(yoga.EDGE_LEFT);\n    var marginRight = node.getMargin(yoga.EDGE_RIGHT);\n\n    var borderAll = node.getBorder(yoga.EDGE_ALL);\n    var borderLeft = node.getBorder(yoga.EDGE_LEFT);\n    var borderRight = node.getBorder(yoga.EDGE_RIGHT);\n\n    var paddingValue = 0;\n    var marginValue = 0;\n    var borderValue = 0;\n\n    if (!isNaN(paddingAll.value)) {\n      if (!isNaN(paddingLeft.value) && isNaN(paddingRight.value)) {\n        paddingValue = paddingAll + paddingLeft;\n      } else if (isNaN(paddingLeft.value) && !isNaN(paddingRight.value)) {\n        paddingValue = paddingAll + paddingRight;\n      } else if (!isNaN(paddingLeft.value) && !isNaN(paddingRight.value)) {\n        paddingValue = paddingLeft + paddingRight;\n      } else {\n        paddingValue += paddingAll * 2;\n      }\n    } else {\n      if (!isNaN(paddingLeft.value)) {\n        paddingValue += paddingLeft;\n      }\n\n      if (!isNaN(paddingRight.value)) {\n        paddingValue += paddingRight;\n      }\n    }\n\n    if (!isNaN(marginAll.value)) {\n      if (!isNaN(marginLeft.value) && isNaN(marginRight.value)) {\n        marginValue = marginAll + marginLeft;\n      } else if (isNaN(marginLeft.value) && !isNaN(marginRight.value)) {\n        marginValue = marginAll + marginRight;\n      } else if (!isNaN(marginLeft.value) && !isNaN(marginRight.value)) {\n        marginValue = marginLeft + marginRight;\n      } else {\n        marginValue += marginAll * 2;\n      }\n    } else {\n      if (!isNaN(marginLeft.value)) {\n        marginValue += marginLeft;\n      }\n\n      if (!isNaN(marginRight.value)) {\n        marginValue += marginRight;\n      }\n    }\n\n    if (!isNaN(borderAll)) {\n      if (!isNaN(borderLeft) && isNaN(borderRight)) {\n        borderValue = borderAll + borderLeft;\n      } else if (isNaN(borderLeft) && !isNaN(borderRight)) {\n        borderValue = borderAll + borderRight;\n      } else if (!isNaN(borderLeft) && !isNaN(borderRight)) {\n        borderValue = borderLeft + borderRight;\n      } else {\n        borderValue += borderAll * 2;\n      }\n    } else {\n      if (!isNaN(borderLeft)) {\n        borderValue += borderLeft;\n      }\n\n      if (!isNaN(borderRight)) {\n        borderValue += borderRight;\n      }\n    }\n\n    // if (isNaN(node.getWidth().value)) {\n    //   if (!isNaN(marginAll.value)) {\n    //     width = width - marginAll * 2;\n    //   }\n    // }\n\n    width = width - paddingValue - marginValue - borderValue;\n  });\n\n  if (width <= 0) {\n    width = 1;\n  }\n  if (height <= 0) {\n    height = 1;\n  }\n  parent = yogaNode;\n  done = false;\n  parentObj = [yogaNode];\n\n  reverseParentObj = reverse(parentObj);\n\n  // let isFlex = false;\n  reverseParentObj.forEach(node => {\n    let paddingAll = node.getPadding(yoga.EDGE_ALL);\n    // let paddingLeft = node.getPadding(yoga.EDGE_LEFT);\n    // let paddingRight = node.getPadding(yoga.EDGE_RIGHT);\n    // let paddingTop = node.getPadding(yoga.EDGE_TOP);\n    // let paddingBottom = node.getPadding(yoga.EDGE_BOTTOM);\n\n    if (!isNaN(paddingAll.value)) {\n      height = height - paddingAll * 2;\n    }\n\n    // if (node.getFlexGrow()) {\n    //   isFlex = true;\n    // }\n  });\n\n  return { width, height, isAbsolute, left, top };\n};\n\n// let getFixedHeightParent = function(yogaNode: any) {\n//   let parent = yogaNode;\n//   let root = getRoot(yogaNode);\n//   let result = false;\n//   let done = false;\n//   while (parent && !done) {\n//     var height = parent.getHeight();\n//     if (!isNaN(height.value) && parent !== root) {\n//       result = true;\n//       done = true;\n//     }\n//     parent = parent.parent;\n//   }\n//   return result;\n// };\nexport class Utils {\n  static memoizedCalculateTextDims = memoize(\n    Utils.calculateTextDims,\n    (...args) => {\n      delete args[1].color;\n      delete args[1].opacity;\n      delete args[1].backgroundColor;\n      return JSON.stringify(args);\n    }\n  );\n  static getAdjustedDims(style: any, prop: string, parentDims: any) {\n    if (style[prop]) {\n      return style[prop] + 'px';\n    }\n    let adjustedParentDims = parentDims[prop] || 0;\n    let marginLeft = style.marginLeft || style.margin || 0;\n    let marginRight = style.marginRight || style.margin || 0;\n    let marginTop = style.marginTop || style.margin || 0;\n    let marginBottom = style.marginBottom || style.margin || 0;\n    if (prop === 'width') {\n      adjustedParentDims = adjustedParentDims - marginLeft - marginRight;\n    } else if (prop === 'height') {\n      adjustedParentDims = adjustedParentDims - marginTop - marginBottom;\n    }\n    let fillWidth: boolean =\n      prop === 'width' && !isNil(style.left) && !isNil(style.right);\n    let fillHeight: boolean =\n      prop === 'height' && !isNil(style.top) && !isNil(style.bottom);\n    if (style.position !== 'absolute') {\n      return 'fit-content';\n    }\n    return style.position === 'absolute' && (fillWidth || fillHeight)\n      ? adjustedParentDims + 'px'\n      : parentDims.isAbsolute\n      ? 'fit-content'\n      : undefined;\n  }\n  static calculateTextDims(text: any, style: any, parentDims: any, root: any) {\n    let newStyle = { ...style };\n    let newParentDims = { ...parentDims };\n    let width: any = 0;\n    let height: any = 0;\n    let fontFamily =\n      style.fontFamily && style.fontFamily !== 'System'\n        ? style.fontFamily\n        : 'system-ui';\n    let boundary = document.createElement('div');\n    // let oP: any = document.getElementById(\"calculate\");\n    // if (oP) {\n    //   document.body.removeChild(oP);\n    // }\n    // console.log(parentDims, root, style, text, \"hello here\");\n    boundary.setAttribute('id', 'calculate');\n    boundary.style.pointerEvents = 'none';\n    boundary.style.position = 'absolute';\n    boundary.style.left = '900px';\n    boundary.style.backgroundColor = 'blue';\n    boundary.style.top = '0px';\n    boundary.style.width = root.width + 'px';\n    boundary.style.height = root.height + 'px';\n    boundary.style.opacity = '0.5';\n    boundary.style.lineHeight = 'normal';\n\n    // let oP: any = document.getElementById(\"calculate\");\n\n    // if (!oP)\n    document.body.appendChild(boundary);\n    let parent: any = document.createElement('div');\n    boundary.appendChild(parent);\n\n    parent.style.width = !isNil(parentDims.width)\n      ? parentDims.width + 'px'\n      : undefined;\n\n    parent.style.left = '150px';\n\n    parent.style.height = !isNil(parentDims.height)\n      ? parentDims.height + 'px'\n      : undefined;\n\n    let c: any = document.createElement('div');\n    parent.appendChild(c);\n\n    text = text.replace ? text.replace(/\\n/g, ' <br/>') : text;\n    c.innerHTML = text;\n    c.style.visibility = 'hidden';\n    // c.style.opacity = 0.5;\n    c.style.pointerEvents = 'none';\n    c.style.wordWrap = 'break-word';\n    c.style.whiteSpace = 'pre-wrap';\n    let maxWidth = !isNil(parentDims.width)\n      ? parentDims.width\n      : parentDims.maxWidth;\n    let maxHeight;\n    //  = !isNil(parentDims.height)\n    //   ? parentDims.height\n    //   : parentDims.maxHeight;\n\n    // console.log(maxWidth, maxHeight, \"hello here max maane jyada\");\n    c.style.top = '0px';\n    if (c) {\n      let temp = this.getAdjustedDims(newStyle, 'width', newParentDims);\n      c.style.width = temp;\n      c.style.height = this.getAdjustedDims(newStyle, 'height', newParentDims);\n      c.style.padding = style.padding ? style.padding + 'px' : undefined;\n\n      if (style.paddingHorizontal || style.paddingLeft || style.paddingRight) {\n        c.style.paddingLeft = style.paddingHorizontal\n          ? style.paddingHorizontal + 'px'\n          : style.paddingLeft\n          ? style.paddingLeft + 'px'\n          : undefined;\n        c.style.paddingRight = style.paddingHorizontal\n          ? style.paddingHorizontal + 'px'\n          : style.paddingRight\n          ? style.paddingRight + 'px'\n          : undefined;\n      }\n      if (style.paddingVertical || style.paddingTop || style.paddingBottom) {\n        c.style.paddingTop = style.paddingVertical\n          ? style.paddingVertical + 'px'\n          : style.paddingTop\n          ? style.paddingTop + 'px'\n          : undefined;\n        c.style.paddingBottom = style.paddingVertical\n          ? style.paddingVertical + 'px'\n          : style.paddingBottom\n          ? style.paddingBottom + 'px'\n          : undefined;\n      }\n\n      c.style.margin = style.margin ? style.margin + 'px' : undefined;\n      if (style.marginHorizontal || style.marginLeft || style.marginRight) {\n        c.style.marginLeft = style.marginHorizontal\n          ? style.marginHorizontal + 'px'\n          : style.marginLeft\n          ? style.marginLeft + 'px'\n          : undefined;\n        c.style.marginRight = style.marginHorizontal\n          ? style.marginHorizontal + 'px'\n          : style.marginRight\n          ? style.marginRight + 'px'\n          : undefined;\n      }\n      if (style.marginVertical || style.marginTop || style.marginBottom) {\n        c.style.marginTop = style.marginVertical\n          ? style.marginVertical + 'px'\n          : style.marginTop\n          ? style.marginTop + 'px'\n          : undefined;\n        c.style.marginBottom = style.marginVertical\n          ? style.marginVertical + 'px'\n          : style.marginBottom\n          ? style.marginBottom + 'px'\n          : undefined;\n      }\n      c.style.maxWidth = style.maxWidth\n        ? style.maxWidth + 'px'\n        : maxWidth + 'px';\n\n      c.style.maxHeight = style.maxHeight\n        ? style.maxHeight + 'px'\n        : maxHeight + 'px';\n      c.style.lineHeight = style.lineHeight\n        ? style.lineHeight + 'px'\n        : undefined;\n      c.style.fontWeight = style.fontWeight ? style.fontWeight : 'normal';\n      c.style.fontFamily = fontFamily;\n      c.style.fontStyle = style.fontStyle ? style.fontStyle : 'normal';\n      c.style.fontSize = style.fontSize ? style.fontSize + 'px' : '14px';\n      c.style.letterSpacing = style.letterSpacing\n        ? style.letterSpacing + 'px'\n        : 0;\n      const clientRect = c.getBoundingClientRect();\n      width = clientRect.width;\n      height = clientRect.height;\n    }\n    let oP: any = document.getElementById('calculate');\n    document.body.removeChild(oP);\n\n    // console.log(width, height, \"width height here\");\n    return { width, height };\n  }\n}\nclass NodeCreateInstanceX {\n  _original: any;\n  width: number = 0;\n  height: number = 0;\n  type: string = 'view';\n  props: any;\n  children: any[] = [];\n  parent: any;\n\n  updateNode(style: any) {\n    // check reset function\n    this.reset();\n    // this.setHeightAuto();\n    // this.setWidthAuto();\n\n    // const nodeStyle: any = omitBy(style, isNil);\n\n    // console.log(nodeStyle, \"hello node w\");\n\n    const nodeStyle: any = pickBy(style, value => {\n      return !isNil(value) && value !== '';\n    });\n\n    map(nodeStyle, (value, key) => {\n      updateNodePositionalAttributes(this, key, value);\n    });\n  }\n  setType(type: any) {\n    this.type = type;\n  }\n  getType() {\n    return this.type;\n  }\n  setProps(props: any) {\n    return (this.props = props);\n  }\n  setChildren(children: any) {\n    return (this.children = children);\n  }\n\n  getComputedLayout() {\n    let layout = this._original.getComputedLayout();\n    return layout;\n  }\n\n  calculateLayout(width: any, height: any, direction: any) {\n    let layout = this._original.calculateLayout(width, height, direction);\n\n    // traverseNode(this, (child: any) => {\n    //   if (child) {\n    //     if (child.type === 'text' || child.type === 'icon') {\n    //       let dims = { width: 0, height: 0 };\n\n    //       if (child.isAutoWidth() || child.isAutoHeight()) {\n    //         let text = child.children;\n\n    //         if (child.type === 'icon') {\n    //           text = iconToText(child.props).text;\n    //         }\n\n    //         let containerDims = getContainerDims(child);\n\n    //         let rootWidth = getRoot(child).getWidth();\n    //         // getRoot(child).getWidth(); //getRoot(child).getWidth();\n    //         let rootHeight = getRoot(child).getHeight();\n    //         // getRoot(child.yogaNode).getWidth(); //getRoot(child).getWidth();\n\n    //         containerDims.width = Math.min(containerDims.width, rootWidth);\n    //         // let style = { ...child.props.style };\n    //         // let newText = text.replace ? text.replace(/[ ]/g, \"<br/>\") : text;\n    //         // let dims = Utils.memoizedCalculateTextDims(\n    //         //   newText,\n    //         //   style,\n    //         //   { isAbsolute: true },\n    //         //   { width: rootWidth, height: rootHeight }\n    //         // );\n\n    //         if (containerDims.isAbsolute) {\n    //           // if (dims.width < rootWidth) {\n    //           //   containerDims.width = rootWidth - containerDims.left;\n    //           // } else {\n    //           //   containerDims.width = dims.width;\n    //           // }\n    //           let parentFixedWidth = getFixedWidthParent(child.yogaNode);\n    //           if (parentFixedWidth) {\n    //             // containerDims.width = dims.width;\n    //           }\n\n    //           // DOC: uncommented works fine in yoga demo, but breaking for session\n    //           // if (dims.height < rootHeight) {\n    //           //   containerDims.height = rootHeight - containerDims.top;\n    //           // } else {\n    //           //   containerDims.height = dims.height;\n    //           // }\n    //           // let parentFixedHeight = getFixedHeightParent(child.yogaNode);\n    //           // if (parentFixedHeight) {\n    //           //   containerDims.height = dims.height;\n    //           // }\n    //         }\n    //         const layerStyle = child.props.style.toJS\n    //           ? child.props.style.toJS()\n    //           : child.props.style;\n\n    //         dims = Utils.memoizedCalculateTextDims(\n    //           text,\n    //           resolveLiteralNode(layerStyle),\n    //           containerDims,\n    //           { width: rootWidth, height: rootHeight }\n    //         );\n    //       }\n\n    //       if (child.isAutoWidth()) {\n    //         child.setWidth(dims.width);\n    //       }\n\n    //       if (child.isAutoHeight()) {\n    //         child.setHeight(dims.height);\n    //       }\n    //     }\n    //   }\n    // });\n\n    layout = this._original.calculateLayout(width, height, direction);\n    return layout;\n  }\n  free() {\n    return this._original.free();\n  }\n\n  getRootLeft() {\n    let left = 0;\n    var parent = this;\n    while (parent) {\n      left += parent.getComputedLeft();\n      parent = parent.parent;\n    }\n\n    return left;\n  }\n\n  getRootTop() {\n    let top = this.getComputedTop();\n    var parent = this;\n    while (parent) {\n      top += parent.getComputedTop();\n      parent = parent.parent;\n    }\n\n    return top;\n  }\n\n  isFillWidth() {\n    const position = this.getPositionType();\n    // const property = this.getWidth();\n\n    if (position) {\n      let left, right;\n      left = this.props.style.left;\n      right = this.props.style.right;\n\n      if (!isNil(left) && !isNil(right)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      const flexDirection = this.getFlexDirection();\n      const flex = this.getFlexGrow();\n\n      if (!flex) {\n        return false;\n      }\n\n      if (flexDirection) {\n        // Main axis\n\n        if (isNil(flex) || isNaN(flex)) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        // Cross axis\n        const alignSelf = this.getAlignSelf();\n\n        if (alignSelf) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n  }\n\n  isAutoWidth() {\n    const position = this.getPositionType();\n    const width = get(this.props, 'style.width');\n    if (position) {\n      // let left = this.getComputedLeft();\n      // let right = this.getComputedRight();\n\n      // console.log(left, right, this.props.style.left, \"left right left\");\n      // if (isNil(left) && isNil(right) && isNaN(property.value)) {\n      //   return true;\n      // }\n\n      if (!isNil(this.props.style.left) && !isNil(this.props.style.right)) {\n        return false;\n      } else if (isNil(width)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      const flexDirection = this.getFlexDirection();\n\n      const flex = this.getFlexGrow();\n\n      if (!flex) {\n        if (isNil(width)) {\n          return true;\n        }\n\n        if (!isNil(width)) {\n          return false;\n        }\n      }\n\n      if (flexDirection) {\n        // Main axis\n        if (isNil(flex) || isNaN(flex)) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        // Cross axis\n        const alignSelf = this.getAlignSelf();\n\n        if (alignSelf) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }\n  }\n  isAutoHeight() {\n    const position = this.getPositionType();\n    const height = get(this.props, 'style.height');\n    if (position) {\n      // if (isNaN(property.value)) {\n      //   return true;\n      // }\n\n      // let top, bottom;\n\n      // top = this.getComputedLeft();\n      // bottom = this.getComputedRight();\n\n      if (!isNil(this.props.style.top) && !isNil(this.props.style.bottom)) {\n        return false;\n      } else if (isNil(height)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      const flexDirection = this.getFlexDirection();\n      const flex = this.getFlexGrow();\n      if (!flex) {\n        if (isNil(height)) {\n          return true;\n        }\n        if (!isNil(height)) {\n          return false;\n        }\n      }\n\n      if (flexDirection) {\n        // Main axis\n\n        const alignSelf = this.getAlignSelf();\n\n        if (alignSelf) {\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        if (isNil(flex) || isNaN(flex)) {\n          return true;\n        } else {\n          return false;\n        }\n        // Cross axis\n      }\n    }\n  }\n\n  isAbsolute() {\n    var parent = this;\n    var isAbsolute = false;\n    var done = false;\n    while (parent && !done) {\n      const position = parent.getPositionType();\n      if (position) {\n        isAbsolute = true;\n        done = true;\n      }\n\n      // if (!parent.isAutoWidth()) {\n      //   // isAbsolute = false;\n      //   // done = true;\n      // }\n      parent = parent.parent;\n    }\n\n    return isAbsolute;\n  }\n\n  freeRecursive() {\n    return this._original.freeRecursive();\n  }\n  getAlignContent() {\n    return this._original.getAlignContent();\n  }\n  getAlignItems() {\n    return this._original.getAlignItems();\n  }\n  getAlignSelf() {\n    return this._original.getAlignSelf();\n  }\n  getAspectRatio() {\n    return this._original.getAspectRatio();\n  }\n  getBorder(edge: any) {\n    return this._original.getBorder(edge);\n  }\n  getChild(index: any) {\n    return this._original.getChild(index);\n  }\n  getChildCount() {\n    return this._original.getChildCount();\n  }\n  getComputedBorder(edge: any) {\n    return this._original.getComputedBorder(edge);\n  }\n  getComputedBottom() {\n    return this._original.getComputedBottom();\n  }\n  getComputedHeight() {\n    return this._original.getComputedHeight();\n  }\n\n  getComputedLeft() {\n    return this._original.getComputedLeft();\n  }\n  getComputedMargin(edge: any) {\n    return this._original.getComputedMargin(edge);\n  }\n  getComputedPadding(edge: any) {\n    return this._original.getComputedPadding(edge);\n  }\n  getComputedRight() {\n    return this._original.getComputedRight();\n  }\n  getComputedTop() {\n    return this._original.getComputedTop();\n  }\n  getComputedWidth() {\n    return this._original.getComputedWidth();\n  }\n  getDisplay() {\n    return this._original.getDisplay();\n  }\n  getFlexBasis() {\n    return this._original.getFlexBasis();\n  }\n  getFlexDirection() {\n    return this._original.getFlexDirection();\n  }\n  getFlexGrow() {\n    return this._original.getFlexGrow();\n  }\n  getFlexShrink() {\n    return this._original.getFlexShrink();\n  }\n  getFlexWrap() {\n    return this._original.getFlexWrap();\n  }\n  getHeight() {\n    return this._original.getHeight();\n  }\n  getJustifyContent() {\n    return this._original.getJustifyContent();\n  }\n  getMargin(edge: any) {\n    return this._original.getMargin(edge);\n  }\n  getMaxHeight() {\n    return this._original.getMaxHeight();\n  }\n  getMaxWidth() {\n    return this._original.getMaxWidth();\n  }\n  getMinHeight() {\n    return this._original.getMinHeight();\n  }\n  getMinWidth() {\n    return this._original.getMinWidth();\n  }\n  getOverflow() {\n    return this._original.getOverflow();\n  }\n  getPadding(edge: any) {\n    return this._original.getPadding(edge);\n  }\n  getParent() {\n    return this._original.getParent();\n  }\n  getPosition(edge: any) {\n    return this._original.getPosition(edge);\n  }\n  getPositionType() {\n    return this._original.getPositionType();\n  }\n  getWidth() {\n    return this._original.getWidth();\n  }\n  insertChild(child: any, index: any) {\n    child.parent = this;\n    this.children.splice(index, 0, child);\n    return this._original.insertChild(child._original, index);\n  }\n  isDirty() {\n    return this._original.isDirty();\n  }\n  markDirty() {\n    return this._original.markDirty();\n  }\n  removeChild(child: any) {\n    var indexOfChild = this.children.indexOf(child);\n    this.children.splice(indexOfChild, 1);\n    return this._original.removeChild(child._original);\n  }\n  reset() {\n    this.setPositionType('relative');\n    this.setPosition(yoga.EDGE_LEFT, NaN);\n    this.setPosition(yoga.EDGE_RIGHT, NaN);\n    this.setPosition(yoga.EDGE_TOP, NaN);\n    this.setPosition(yoga.EDGE_BOTTOM, NaN);\n    this.setAlignContent('flex-start');\n    // this.setAlignItems(\"stretch\");\n    this.setAlignSelf('auto');\n    this.setAspectRatio('auto');\n    this.setBorder(yoga.EDGE_ALL, 0);\n    this.setBorder(yoga.EDGE_LEFT, 0);\n    this.setBorder(yoga.EDGE_RIGHT, 0);\n    this.setBorder(yoga.EDGE_TOP, 0);\n    this.setBorder(yoga.EDGE_BOTTOM, 0);\n    this.setDisplay(undefined);\n    this.setFlex(NaN);\n    this.setFlexBasis(NaN);\n    this.setFlexBasisPercent(undefined);\n    this.setFlexDirection('column');\n    // this.setFlex(0);\n    // this.setFlexShrink(1);\n    this.setFlexWrap('wrap');\n    this.setHeight(NaN);\n    this.setHeightAuto();\n    this.setWidth(NaN);\n    this.setWidthAuto();\n    this.setHeightPercent(undefined);\n    this.setJustifyContent('flex-start');\n    this.setMargin(yoga.EDGE_ALL, 0);\n    this.setMargin(yoga.EDGE_LEFT, 0);\n    this.setMargin(yoga.EDGE_RIGHT, 0);\n    this.setMargin(yoga.EDGE_TOP, 0);\n    this.setMargin(yoga.EDGE_BOTTOM, 0);\n    this.setMarginAuto(yoga.EDGE_ALL);\n    this.setMarginAuto(yoga.EDGE_LEFT);\n    this.setMarginAuto(yoga.EDGE_RIGHT);\n    this.setMarginAuto(yoga.EDGE_TOP);\n    this.setMarginAuto(yoga.EDGE_BOTTOM);\n    this.setMarginPercent(yoga.EDGE_ALL, undefined);\n    this.setMarginPercent(yoga.EDGE_LEFT, undefined);\n    this.setMarginPercent(yoga.EDGE_RIGHT, undefined);\n    this.setMarginPercent(yoga.EDGE_TOP, undefined);\n    this.setMarginPercent(yoga.EDGE_BOTTOM, undefined);\n    this.setMaxHeight(NaN);\n    this.setMaxHeightPercent(undefined);\n    this.setMaxWidth(NaN);\n    this.setMaxWidthPercent(undefined);\n    this.setMinHeight(NaN);\n    this.setMinHeightPercent(undefined);\n    this.setMinWidth(NaN);\n    this.setMinWidthPercent(undefined);\n    this.setOverflow(undefined);\n    this.setPadding(yoga.EDGE_ALL, 0);\n    this.setPadding(yoga.EDGE_LEFT, 0);\n    this.setPadding(yoga.EDGE_RIGHT, 0);\n    this.setPadding(yoga.EDGE_TOP, 0);\n    this.setPadding(yoga.EDGE_BOTTOM, 0);\n    this.setPaddingPercent(yoga.EDGE_ALL, undefined);\n    this.setPaddingPercent(yoga.EDGE_LEFT, undefined);\n    this.setPaddingPercent(yoga.EDGE_RIGHT, undefined);\n    this.setPaddingPercent(yoga.EDGE_TOP, undefined);\n    this.setPaddingPercent(yoga.EDGE_BOTTOM, undefined);\n    this.setPositionPercent(yoga.EDGE_LEFT, undefined);\n    this.setPositionPercent(yoga.EDGE_RIGHT, undefined);\n    this.setPositionPercent(yoga.EDGE_TOP, undefined);\n    this.setPositionPercent(yoga.EDGE_BOTTOM, undefined);\n    this.setWidthPercent(undefined);\n  }\n  setAlignContent(alignContent: any) {\n    return this._original.setAlignContent(alignContent);\n  }\n  setAlignItems(alignItems: any) {\n    return this._original.setAlignItems(alignItems);\n  }\n  setAlignSelf(alignSelf: any) {\n    return this._original.setAlignSelf(alignSelf);\n  }\n  setAspectRatio(aspectRatio: any) {\n    return this._original.setAspectRatio(aspectRatio);\n  }\n  setBorder(edge: any, borderWidth: any) {\n    return this._original.setBorder(edge, borderWidth);\n  }\n  setDisplay(display: any) {\n    return this._original.setDisplay(display);\n  }\n  setFlex(flex: any) {\n    this.setFlexShrink(0);\n    this.setFlexBasis(0);\n    // this.setFlexBasisPercent(undefined);\n    return this.setFlexGrow(flex);\n    // return this._original.setFlex(flex);\n  }\n  setFlexBasis(flexBasis: any) {\n    return this._original.setFlexBasis(flexBasis);\n  }\n  setFlexBasisPercent(flexBasis: any) {\n    return this._original.setFlexBasisPercent(flexBasis);\n  }\n  setFlexDirection(flexDirection: any) {\n    return this._original.setFlexDirection(flexDirection);\n  }\n  setFlexGrow(flexGrow: any) {\n    return this._original.setFlexGrow(flexGrow);\n  }\n  setFlexShrink(flexShrink: any) {\n    return this._original.setFlexShrink(flexShrink);\n  }\n  setFlexWrap(flexWrap: any) {\n    return this._original.setFlexWrap(flexWrap);\n  }\n  setHeight(height: any) {\n    this.height = height;\n    return this._original.setHeight(height);\n  }\n  setHeightAuto() {\n    return this._original.setHeightAuto();\n  }\n  setHeightPercent(height: any) {\n    return this._original.setHeightPercent(height);\n  }\n  setJustifyContent(justifyContent: any) {\n    return this._original.setJustifyContent(justifyContent);\n  }\n  setMargin(edge: any, margin: any) {\n    return this._original.setMargin(edge, margin);\n  }\n  setMarginAuto(edge: any) {\n    return this._original.setMarginAuto(edge);\n  }\n  setMarginPercent(edge: any, margin: any) {\n    return this._original.setMarginPercent(edge, margin);\n  }\n  setMaxHeight(maxHeight: any) {\n    return this._original.setMaxHeight(maxHeight);\n  }\n  setMaxHeightPercent(maxHeight: any) {\n    return this._original.setMaxHeightPercent(maxHeight);\n  }\n  setMaxWidth(maxWidth: any) {\n    return this._original.setMaxWidth(maxWidth);\n  }\n  setMaxWidthPercent(maxWidth: any) {\n    return this._original.setMaxWidthPercent(maxWidth);\n  }\n  setMeasureFunc(measureFunc: any) {\n    return this._original.setMeasureFunc(measureFunc);\n  }\n  setMinHeight(minHeight: any) {\n    return this._original.setMinHeight(minHeight);\n  }\n  setMinHeightPercent(minHeight: any) {\n    return this._original.setMinHeightPercent(minHeight);\n  }\n  setMinWidth(minWidth: any) {\n    return this._original.setMinWidth(minWidth);\n  }\n  setMinWidthPercent(minWidth: any) {\n    return this._original.setMinWidthPercent(minWidth);\n  }\n  setOverflow(overflow: any) {\n    return this._original.setOverflow(overflow);\n  }\n  setPadding(edge: any, padding: any) {\n    return this._original.setPadding(edge, padding);\n  }\n  setPaddingPercent(edge: any, padding: any) {\n    return this._original.setPaddingPercent(edge, padding);\n  }\n  setPosition(edge: any, position: any) {\n    return this._original.setPosition(edge, position);\n  }\n  setPositionPercent(edge: any, position: any) {\n    return this._original.setPositionPercent(edge, position);\n  }\n  setPositionType(positionType: any) {\n    return this._original.setPositionType(positionType);\n  }\n  setWidth(width: any) {\n    this.width = width;\n    return this._original.setWidth(width);\n  }\n  setWidthAuto() {\n    return this._original.setWidthAuto();\n  }\n  setWidthPercent(width: any) {\n    return this._original.setWidthPercent(width);\n  }\n  unsetMeasureFun() {\n    return this._original.unsetMeasureFun();\n  }\n}\n\nclass NodeX {\n  static create(config: any) {\n    var node = _Node.create(config);\n    var nodeX = new NodeCreateInstanceX();\n    nodeX.props = { style: {} };\n    nodeX._original = node;\n    return nodeX;\n  }\n}\nclass ConfigX {\n  static create() {\n    var config = _Config.create();\n    return config;\n  }\n}\nexport default {\n  Node: NodeX,\n  Config: ConfigX,\n};\n"],"names":["yoga","require","updateNodePositionalAttributes","yogaNode","key","value","undefined","setHeightAuto","setHeight","setWidthAuto","setWidth","NaN","setPosition","EDGE_LEFT","EDGE_RIGHT","EDGE_TOP","EDGE_BOTTOM","setPositionType","POSITION_TYPE_ABSOLUTE","setFlexGrow","setFlexShrink","setFlex","setAlignProperties","setDisplay","setFlexBasis","setFlexDirection","setFlexWrap","setJustifyContent","setMaxHeight","setMaxWidth","setMinHeight","setMinWidth","indexOf","setBoxModelProperties","setOverflow","isNil","yogaEdge","EDGE_ALL","isArray","forEach","edge","setPadding","setBorder","edges","props","style","splice","setMarginAuto","setMargin","OVERFLOW_HIDDEN","OVERFLOW_SCROLL","OVERFLOW_VISIBLE","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","alignProperty","ALIGN_AUTO","ALIGN_BASELINE","ALIGN_CENTER","ALIGN_FLEX_END","ALIGN_FLEX_START","ALIGN_STRETCH","ALIGN_SPACE_AROUND","ALIGN_SPACE_BETWEEN","setAlignItems","setAlignContent","setAlignSelf","WRAP_WRAP","WRAP_NO_WRAP","WRAP_WRAP_REVERSE","JUSTIFY_CENTER","JUSTIFY_FLEX_END","JUSTIFY_FLEX_START","JUSTIFY_SPACE_AROUND","JUSTIFY_SPACE_BETWEEN","JUSTIFY_SPACE_EVENLY","AntDesign","Entypo","EvilIcons","Feather","FontAwesome","Foundation","Ionicons","MaterialCommunityIcons","MaterialIcons","Octicons","SimpleLineIcons","Zocial","IconFamilies","iconToText","text","name","family1","type","str","String","fromCharCode","family","_Node","Node","_Config","Config","NodeCreateInstanceX","updateNode","reset","nodeStyle","pickBy","map","setType","getType","setProps","setChildren","children","getComputedLayout","layout","_original","calculateLayout","width","height","direction","free","getRootLeft","left","parent","getComputedLeft","getRootTop","top","getComputedTop","isFillWidth","position","getPositionType","right","flexDirection","getFlexDirection","flex","getFlexGrow","isNaN","alignSelf","getAlignSelf","isAutoWidth","get","isAutoHeight","bottom","isAbsolute","done","freeRecursive","getAlignContent","getAlignItems","getAspectRatio","getBorder","getChild","index","getChildCount","getComputedBorder","getComputedBottom","getComputedHeight","getComputedMargin","getComputedPadding","getComputedRight","getComputedWidth","getDisplay","getFlexBasis","getFlexShrink","getFlexWrap","getHeight","getJustifyContent","getMargin","getMaxHeight","getMaxWidth","getMinHeight","getMinWidth","getOverflow","getPadding","getParent","getPosition","getWidth","insertChild","child","isDirty","markDirty","removeChild","indexOfChild","setAspectRatio","setFlexBasisPercent","setHeightPercent","setMarginPercent","setMaxHeightPercent","setMaxWidthPercent","setMinHeightPercent","setMinWidthPercent","setPaddingPercent","setPositionPercent","setWidthPercent","alignContent","alignItems","aspectRatio","borderWidth","display","flexBasis","flexGrow","flexShrink","flexWrap","justifyContent","margin","maxHeight","maxWidth","setMeasureFunc","measureFunc","minHeight","minWidth","overflow","padding","positionType","unsetMeasureFun","NodeX","create","config","node","nodeX","ConfigX"],"mappings":"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"}