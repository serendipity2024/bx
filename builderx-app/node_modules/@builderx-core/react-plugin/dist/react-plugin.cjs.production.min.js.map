{"version":3,"file":"react-plugin.cjs.production.min.js","sources":["../src/react/utils/index.ts","../src/react/constants.ts","../src/react/LayerCodeGen.ts","../src/react/layers/DivCodeGen.ts","../src/react/specialLayers/CenterCodeGen.ts","../src/utils.ts","../src/react/layers/FileCodeGen.ts","../src/react/specialLayers/LiteralCodeGen.ts","../src/react/layers/TextCodeGen.ts","../src/conversions/pathUtils.ts","../src/conversions/toSVGPath.ts","../src/react/layers/ImageCodeGen.ts","../src/react/layers/EllipseCodeGen.ts","../src/react/layers/ScrollViewCodeGen.ts","../src/react/layers/SymbolLayerCodeGen.ts","../src/react/layers/TextInputCodeGen.ts","../src/react/layers/ButtonCodeGen.ts","../src/react/layers/PathCodeGen.ts","../src/react/specialLayers/ExpressionStatementCodeGen.ts","../src/react/specialLayers/BinaryExpressionCodeGen.ts","../src/react/specialLayers/ExpressionCodeGen.ts","../src/react/specialLayers/ConditionalExpressionCodeGen.ts","../src/react/specialLayers/LogicalExpressionCodeGen.ts","../src/react/layers/LoopCodeGen.ts","../src/react/layers/WrapperCodeGen.ts","../src/react/layers/InlineViewCodeGen.ts","../src/react/layers/IconCodeGen.ts","../src/react/layers/LoaderCodeGen.ts","../src/react/layers/MapCodeGen.ts","../src/react/layers/SliderCodeGen.ts","../src/react/layers/SwitchCodeGen.ts","../src/react/BaseCodeGen.ts","../src/react/ReactEngine.ts","../src/CRAFiles/index.ts","../src/ReactCodeGen/index.ts"],"sourcesContent":["import { Context, ExtraParams } from '../types';\nimport { replace, includes, escape, get, forEach } from 'lodash';\nlet switchHighestNumber = 0;\nlet mapHighestNumber = 0;\nlet buttonHighestNumber = 0;\nlet hasButtonLayer = false;\nexport const generateChildren = (\n  layer: any,\n  generateChildCallback: (child: any, extraParams: any) => string,\n  extraParams: any\n) => {\n  let childrenCode = '';\n  layer.children.forEach((child: any) => {\n    if (\n      [\n        'expressionStatement',\n        'binaryExpression',\n        'expression',\n        'conditionalExpression',\n        'logicalExpression',\n      ].includes(child.type)\n    ) {\n      childrenCode += `{${generateChildCallback(child, extraParams)}\n    }`;\n    } else if (layer.styleName.indexOf('carousel') !== -1) {\n      childrenCode += `<Slide>${generateChildCallback(\n        child,\n        extraParams\n      )}</Slide>`;\n    } else {\n      childrenCode += `${generateChildCallback(child, extraParams)}\n    `;\n    }\n  });\n  return childrenCode;\n};\nexport const addImportToContext = (\n  context: Context,\n  layerJSON: any,\n  generateJSLiteralCode?: any\n) => {\n  // console.log(\"Adding imports with json as \", context);\n  if (layerJSON.import.layerName.includes('.')) {\n    return;\n  }\n  if (\n    layerJSON.import.packageName === '@builderx/icons' ||\n    layerJSON.import.packageName === 'VectorIcons'\n  ) {\n    let currentFamily = getCurrentFamily(layerJSON, generateJSLiteralCode);\n    layerJSON.import.packageName = `react-native-vector-icons/dist/${currentFamily}`;\n  }\n  if (layerJSON.import.packageName === 'native') {\n    layerJSON.import.packageName = 'react-native';\n  }\n  if (layerJSON.type === 'symbol') {\n    if (context.filePath.indexOf('screens') !== -1) {\n      layerJSON.import.packageName = `../components/${layerJSON.import.layerName}`;\n    } else if (context.filePath.indexOf('preview') !== -1) {\n      layerJSON.import.packageName = `./components/${layerJSON.import.layerName}`;\n    } else if (\n      context.filePath.indexOf('symbols') !== -1 ||\n      context.filePath.indexOf('components') !== -1\n    ) {\n      layerJSON.import.packageName = `./${layerJSON.import.layerName}`;\n    }\n  }\n  switch (layerJSON.import.layerName) {\n    case 'MapView':\n      layerJSON.import = {\n        ...layerJSON.import,\n        ...{\n          packageName: 'google-map-react',\n          layerName: `GoogleMapReact${\n            context.mapDuplicate.lastNumber === 1\n              ? ''\n              : context.mapDuplicate.lastNumber\n          }`,\n          isDefaultImport: true,\n        },\n      };\n      break;\n    case 'Swiper':\n      layerJSON.import = {\n        ...layerJSON,\n        ...{\n          packageName: 'pure-react-carousel',\n          layerName: 'Carousel',\n        },\n      };\n      context.imports[layerJSON.import.packageName] = {\n        named: [\n          'CarouselProvider',\n          'Slider as CarouselSlider',\n          'Slide',\n          'DotGroup',\n        ],\n        default: false,\n        cssFile: 'pure-react-carousel/dist/react-carousel.es.css',\n      };\n      break;\n    case 'TabView':\n      layerJSON.import = {\n        ...layerJSON,\n        ...{\n          packageName: '@material-ui/core',\n          layerName: 'AppBar',\n        },\n      };\n      context.imports[layerJSON.import.packageName] = {\n        named: ['Tabs', 'Tab as LabelledTab'],\n        default: false,\n      };\n      break;\n    case 'FlatList':\n      layerJSON.import = {\n        ...layerJSON,\n        ...{\n          packageName: 'react-list',\n          layerName: 'ReactList',\n          isDefaultImport: true,\n        },\n      };\n      break;\n    case 'Switch':\n      layerJSON.import = {\n        ...layerJSON,\n        ...{\n          packageName: '@material-ui/core/Switch',\n          layerName:\n            context.switchDuplicate.lastNumber === 1\n              ? 'MaterialUISwitch'\n              : `MaterialUISwitch${context.switchDuplicate.lastNumber}`,\n          isDefaultImport: true,\n        },\n      };\n      break;\n    case 'Slider':\n      layerJSON.import = {\n        ...layerJSON.import,\n        ...{\n          packageName: 'material-ui-slider',\n          layerName: 'Slider',\n        },\n      };\n      break;\n    case 'ActivityIndicator':\n      layerJSON.import = {\n        ...layerJSON.import,\n        ...{\n          packageName: '@material-ui/core/CircularProgress',\n          layerName: 'CircularProgress',\n          isDefaultImport: true,\n        },\n      };\n      break;\n    case 'TouchableOpacity':\n      layerJSON.import = {\n        ...layerJSON.import,\n        ...{\n          packageName: 'react-router-dom',\n          layerName: 'Link',\n        },\n      };\n      break;\n    default:\n      break;\n  }\n  if (!context.imports[layerJSON.import.packageName]) {\n    context.imports[layerJSON.import.packageName] = {\n      named: [],\n      default: false,\n    };\n  }\n  const contextImportObj = context.imports[layerJSON.import.packageName];\n  if (\n    layerJSON.import.packageName.indexOf('react-native-vector-icons') !== -1\n  ) {\n    let currentFamily = getCurrentFamily(layerJSON, generateJSLiteralCode);\n    contextImportObj.default = `${currentFamily}${layerJSON.import.layerName}`;\n  } else if (layerJSON.import.isDefaultImport) {\n    contextImportObj.default = layerJSON.import.layerName;\n  } else {\n    if (contextImportObj.named.indexOf(layerJSON.import.layerName) === -1) {\n      contextImportObj.named.push(layerJSON.import.layerName);\n    }\n  }\n};\nexport const importTabViewFile = (\n  fileName: string,\n  context: Context,\n  layerJSON: any\n) => {\n  //\n};\nexport const isTabViewSpecificStyleProp = (propName: string) => {\n  return (\n    ['tabBarStyle', 'indicatorStyle', 'labelStyle', 'tabStyle'].indexOf(\n      propName\n    ) !== -1\n  );\n};\nexport const escapeTextForJSX = (text: string) => {\n  if (typeof text === 'string') {\n    text = text.trim();\n    text = escape(text);\n  }\n  if (includes(text, '\\n')) {\n    text = replace(text, new RegExp('\\n', 'g'), `{\\\"\\\\n\"}`);\n    text = replace(text, new RegExp('\\t', 'g'), `{\\\"\\\\t\"}`);\n  }\n  return text;\n};\nexport const anyChildIsFlex = (layer: any) => {\n  let hasFlexChild = false;\n  layer.children.forEach((child: any) => {\n    let { flex, ...restStyles } = child.props.style;\n    if (flex) {\n      hasFlexChild = true;\n    }\n  });\n  return hasFlexChild;\n};\nexport const jsonHasButtonLayer = (layer: any, context: Context) => {\n  layer.children.forEach((child: any) => {\n    if (\n      get(child, 'import.layerName', 0) &&\n      child.import.layerName === 'TouchableOpacity'\n    ) {\n      context.buttonDuplicate.exists = true;\n      return;\n    }\n    if (child.children && child.children.length !== 0) {\n      jsonHasButtonLayer(child, context);\n    }\n  });\n  return hasButtonLayer;\n};\nexport const traverseLayersForStyleName = (layer: any, context: Context) => {\n  layer.children.forEach((child: any) => {\n    if (\n      child.styleName &&\n      (child.styleName.startsWith('materialUISwitch') ||\n        child.styleName.startsWith('MaterialUISwitch'))\n    ) {\n      if (typeof child.styleName === 'string') {\n        let followedString = child.styleName.substring(\n          16,\n          child.styleName.length\n        );\n        if (!isNaN(followedString)) {\n          let currentNumber = Number(followedString);\n          if (currentNumber > switchHighestNumber) {\n            switchHighestNumber = currentNumber;\n          } else if (currentNumber === 0) {\n            switchHighestNumber++;\n          }\n        }\n      }\n    }\n    context.switchDuplicate.lastNumber = switchHighestNumber + 1;\n    if (\n      child.styleName &&\n      (child.styleName.startsWith('googleMapReact') ||\n        child.styleName.startsWith('GoogleMapReact'))\n    ) {\n      if (typeof child.styleName === 'string') {\n        let followedString = child.styleName.substring(\n          14,\n          child.styleName.length\n        );\n        if (!isNaN(followedString)) {\n          let currentNumber = Number(followedString);\n          if (currentNumber > mapHighestNumber) {\n            mapHighestNumber = currentNumber;\n          } else if (currentNumber === 0) {\n            mapHighestNumber++;\n          }\n        }\n        if (\n          child.styleName &&\n          (child.styleName === 'googleMapReact' ||\n            child.styleName === 'GoogleMapReact')\n        ) {\n          mapHighestNumber++;\n        }\n      }\n    }\n    context.mapDuplicate.lastNumber = mapHighestNumber + 1;\n    if (\n      child.styleName &&\n      (child.styleName.startsWith('buttonOverlay') ||\n        child.styleName.startsWith('ButtonOverlay'))\n    ) {\n      if (typeof child.styleName === 'string') {\n        let followedString = child.styleName.substring(\n          13,\n          child.styleName.length\n        );\n        doesNumberExist(\n          'buttonOverlay',\n          context.buttonDuplicate.lastNumber,\n          layer,\n          context\n        );\n      }\n    }\n  });\n};\nexport const getCurrentFamily = (\n  layerJSON: any,\n  generateJSLiteralCode: any\n) => {\n  let conditionalStatement = generateJSLiteralCode(layerJSON.props.type);\n  let currentFamily = '';\n  let families = [\n    'Entypo',\n    'EvilIcons',\n    'Feather',\n    'FontAwesome',\n    'MaterialIcons',\n    'MaterialCommunityIcons',\n    'SimpleLineIcons',\n    'Octicons',\n    'Zocial',\n    'Ionicons',\n  ];\n  for (let i = 0; i < families.length; i++) {\n    if (conditionalStatement.indexOf(families[i]) !== -1) {\n      currentFamily = families[i];\n      break;\n    }\n  }\n  return currentFamily;\n};\nconst doesNumberExist = (\n  category: string,\n  num: number,\n  layer: any,\n  context: Context\n): any => {\n  layer.children.forEach((child: any) => {\n    if (typeof child.styleName === 'string') {\n      let compareWith =\n        num === 1\n          ? `${category}`.toLowerCase()\n          : `${category}${num}`.toLowerCase();\n      if (child.styleName.toLowerCase() === compareWith) {\n        context.buttonDuplicate.lastNumber++;\n        doesNumberExist(\n          category,\n          context.buttonDuplicate.lastNumber,\n          layer,\n          context\n        );\n      }\n    }\n    if (child.children && child.children.length !== 0) {\n      doesNumberExist(\n        category,\n        context.buttonDuplicate.lastNumber,\n        layer,\n        context\n      );\n    }\n  });\n  return;\n};\nexport const isContainerLayer = (layer: any) => {\n  let type = get(layer, 'type', undefined);\n  let validTypes = ['view', 'image', 'touchableopacity', 'scrollview'];\n  return type && validTypes.includes(type);\n};\nexport const hasPositionProperty = (layer: any) => {\n  let position = get(layer, 'props.style.position', undefined);\n  return position ? true : false;\n};\nexport const hasAbsolutePosition = (styles: any) => {\n  return styles.position === 'absolute';\n};\nexport const layerHasAbsoluteChild = (layer: any) => {\n  let hasAbsoluteChild = false;\n  for (let i = 0; i < layer.children.length; i++) {\n    if (\n      hasPositionProperty(layer.children[i]) &&\n      hasAbsolutePosition(layer.children[i].props.style)\n    ) {\n      hasAbsoluteChild = true;\n      break;\n    }\n  }\n  return hasAbsoluteChild;\n};\n\nexport const addFlexValuesForScrollViewChildren = (\n  extraParams: ExtraParams,\n  json: any\n) => {\n  let parent = get(extraParams, 'parent', undefined);\n\n  if (parent && parent.type && parent.type.toLowerCase() === 'scrollview') {\n    let parentStyles = get(parent, 'props.style', undefined);\n    if (\n      parentStyles &&\n      parentStyles.display &&\n      parentStyles.display === 'flex'\n    ) {\n      json.props.style = { ...json.props.style, flex: '0 0 auto' };\n    }\n  }\n};\n\nexport const getGradient = (gradient: any, palette?: any) => {\n  let colors: any = [];\n  if (palette) {\n    forEach(palette, (data: any, index: number) => {\n      colors.push(data.color);\n    });\n  } else {\n    forEach(gradient.stops, (data: any, index: number) => {\n      colors.push(data.stopColor);\n    });\n  }\n  let vector;\n  if (gradient.to && gradient.from) {\n    vector = {\n      x: (gradient.to.x as number) - (gradient.from.x as number),\n      y: (gradient.to.y as number) - (gradient.from.y as number),\n    };\n  } else {\n    vector = {\n      x: 0,\n      y: 2,\n    };\n  }\n  const angleRad = Math.atan2(vector.y, vector.x);\n  const angleDeg = (angleRad * 180) / Math.PI + 90;\n\n  let realLocations: any = [];\n  if (palette) {\n    forEach(palette, (data: any, index: number) => {\n      realLocations.push(data.pos);\n    });\n  } else {\n    forEach(gradient.stops, (data: any, index: number) => {\n      realLocations.push(data.offset);\n    });\n  }\n\n  const colorStrings = colors\n    .map(\n      (color: any, i: number) =>\n        `${color} ${Math.round(realLocations[i] * 100)}%`\n    )\n    .join(', ');\n\n  if (gradient.gradientType && gradient.gradientType === 'LinearGradient') {\n    return `linear-gradient(${angleDeg}deg, ${colorStrings})`;\n  } else if (\n    gradient.gradientType &&\n    gradient.gradientType === 'RadialGradient'\n  ) {\n    const dist = Math.sqrt(\n      (gradient.to.x - gradient.from.x) * (gradient.to.x - gradient.from.x) +\n        (gradient.to.y - gradient.from.y) * (gradient.to.y - gradient.from.y)\n    );\n    const maxDist = Math.sqrt(\n      (1 - gradient.from.x) * (1 - gradient.from.x) +\n        (1 - gradient.from.y) * (1 - gradient.from.y)\n    );\n    const radialColorStrings = colors\n      .map(\n        (color: any, i: number) =>\n          `${color} ${Math.round(realLocations[i] * (dist / maxDist) * 100)}%`\n      )\n      .join(', ');\n    return `radial-gradient(circle at ${gradient.from.x * 100}% ${gradient.from\n      .y * 100}%,${radialColorStrings})`;\n  } else if (\n    gradient.gradientType &&\n    gradient.gradientType === 'AngularGradient'\n  ) {\n    return `conic-gradient(${colorStrings})`;\n  } else {\n    return `linear-gradient(${angleDeg}deg, ${colorStrings})`;\n  }\n};\n\nexport const getGradientString = (gradient: any, palette?: any) => {\n  return getGradient(gradient, palette);\n};\n","export const layerNameMap = {\n  View: 'div',\n  TouchableOpacity: 'div',\n  Ellipse: 'svg',\n  Icon: 'i',\n  Image: 'img',\n  ReactList: 'div',\n  GoogleMapReact: 'div',\n  Path: 'svg',\n  ScrollView: 'div',\n  Switch: 'div',\n  TabView: 'div',\n  Text: 'span',\n  TextInput: 'input',\n  Picker: 'select',\n};\n\nexport const ACCEPTED_IMAGE_FORMATS = [\n  'image/gif',\n  'image/png',\n  'image/jpeg',\n  'image/jpg',\n];\nexport const MARGIN_PROPERTIES = [\n  'margin',\n  'marginBottom',\n  'marginHorizontal',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'marginVertical',\n];\nexport const FLEX_PROPERTIES = [\n  'flexDirection',\n  'justifyContent',\n  'alignItems',\n  'alignSelf',\n  'flex',\n];\n\nexport const LAYOUT_PROPERTIES = [\n  'bottom',\n  'direction',\n  'fontSize',\n  'fontFamily',\n  'height',\n  'left',\n  'maxHeight',\n  'maxWidth',\n  'minHeight',\n  'minWidth',\n  'padding',\n  'paddingBottom',\n  'paddingHorizontal',\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingVertical',\n  'position',\n  'right',\n  'rotation',\n  'width',\n  'top',\n  'transform',\n  'lineHeight',\n  'letterSpacing',\n  ...FLEX_PROPERTIES,\n  ...MARGIN_PROPERTIES,\n];\n\nexport const ROUNDABLE_LAYOUT_PROPERTIES = [\n  'bottom',\n  'fontSize',\n  'height',\n  'left',\n  'maxHeight',\n  'maxWidth',\n  'minHeight',\n  'minWidth',\n  'padding',\n  'paddingBottom',\n  'paddingHorizontal',\n  'paddingLeft',\n  'paddingRight',\n  'paddingTop',\n  'paddingVertical',\n  'right',\n  'width',\n  'top',\n  ...MARGIN_PROPERTIES,\n];\n\nexport const ROUNDABLE_TO_TWO_DECIMALS_LAYOUT_PROPERTIES = ['flex'];\n\nexport const LAYOUT_PROPERTIES_RENDER_FILTER = [\n  'bottom',\n  'height',\n  'left',\n  'position',\n  'right',\n  'rotation',\n  'width',\n  'top',\n  'transform',\n  'flexDirection',\n  'justifyContent',\n  'alignItems',\n  'alignSelf',\n  'flex',\n  ...MARGIN_PROPERTIES,\n];\nexport const TAG_NAME_STYLE_NAME_MAPPING = {\n  View: 'rect',\n  Text: 'text',\n  TouchableOpacity: 'button',\n  Image: 'image',\n  Icon: 'icon',\n  TextInput: 'textInput',\n  ScrollView: 'scrollArea',\n  Slider: 'slider',\n  Switch: 'switch',\n  Picker: 'itemPicker',\n  ActivityIndicator: 'activityIndicator',\n  TabView: 'tab',\n  Swiper: 'carousel',\n  FlatList: 'list',\n  Ellipse: 'ellipse',\n  Group: 'group',\n};\nexport const DEBUG_POINTER_EVENTS = false;\nexport const RENDER_WIREFRAME = false;\nexport const START_STORYBOOK =\n  process.env.NODE_ENV === 'production' ? false : false; // Set this true to use testpad\nexport const ENABLE_EXTENSION_LOG = true;\n\n// export { MapStyles } from './MapStyle';\n","import { forEach, get, isEmpty, round } from 'lodash';\nimport { Config, Context, ExtraParams } from './types';\nimport { isTabViewSpecificStyleProp, anyChildIsFlex } from './utils';\nimport * as path from 'path';\nimport {\n  ROUNDABLE_LAYOUT_PROPERTIES,\n  ROUNDABLE_TO_TWO_DECIMALS_LAYOUT_PROPERTIES,\n} from './constants';\nconst pascalCase = require('pascal-case');\nconst toStyleString = require('to-style').string;\ntype JSLiteralTypes =\n  | 'string'\n  | 'number'\n  | 'bigint'\n  | 'boolean'\n  | 'symbol'\n  | 'undefined'\n  | 'object'\n  | 'function'\n  | 'array';\n\nconst flexProperties = [\n  'flex',\n  'justifyContent',\n  'alignItems',\n  'alignSelf',\n  'flexWrap',\n];\nexport default class LayerCodeGen {\n  context: Context;\n  config: Config;\n  generate(json: any, extraParams: ExtraParams): string {\n    return '';\n  }\n\n  generateProps = (json: any, extraParams: ExtraParams) => {\n    let propsCode = '';\n\n    if (json.props) {\n      forEach(json.props, (propValue: any, propName: string) => {\n        if (propName === 'onPress') {\n          if (typeof propValue === 'string') {\n            propsCode = `onClick={${propValue.replace(/;/g, '')}}`;\n          } else {\n            // TODO: Handle conditional navigation\n            propsCode +=\n              '/* Conditional navigation not supported at the moment */';\n          }\n          // TODO: check for all callback props\n        } else if (\n          get(json, 'import.layerName').indexOf('GoogleMapReact') !== -1 &&\n          propName === 'initialRegion'\n        ) {\n          propName = 'defaultCenter';\n          delete propValue.longitude;\n          delete propValue.latitudeDelta;\n          delete propValue.longitudeDelta;\n          Object.assign(propValue, {\n            lat: 20.5937,\n            lng: 78.9629,\n          });\n          propsCode += `${propName}={${this.generateJSLiteralCode(\n            propValue,\n            extraParams\n          )}}`;\n        } else if (\n          get(json, 'import.layerName') === 'ReactList' &&\n          propName === 'renderItem'\n        ) {\n          propName = 'itemRenderer';\n          propsCode += `${propName}={({ item, separators }) => ${this.context.baseCodeGen.generate(\n            propValue,\n            extraParams\n          )}}`;\n        } else if (\n          get(json, 'import.layerName') === 'ReactList' &&\n          (propName === 'ListHeaderComponent' ||\n            propName === 'ListFooterComponent' ||\n            propName === 'ItemSeparatorComponent')\n        ) {\n          propsCode += `${propName}={() => ${this.context.baseCodeGen.generate(\n            propValue,\n            extraParams\n          )}}`;\n        } else if (propName === 'source') {\n          propName = 'src';\n          propsCode += this.generateSourcePropCode(\n            path.basename(propValue.uri)\n          );\n        } else if (\n          !isTabViewSpecificStyleProp(propName) &&\n          propName !== 'style' &&\n          propName !== 'contentContainerStyle'\n        ) {\n          if (typeof propValue === 'string') {\n            propsCode += `${propName}=${this.generateJSLiteralCode(\n              propValue,\n              extraParams\n            )}`;\n          } else {\n            const ellipseProps = ['cx', 'cy', 'rx', 'ry'];\n            if (ellipseProps.includes(propName)) {\n              propValue = round(propValue);\n            }\n            propsCode += `${propName}={${this.generateJSLiteralCode(\n              propValue,\n              extraParams\n            )}}`;\n          }\n        }\n        if (propName === 'style') {\n          for (let prop in json.props.style) {\n            if (\n              typeof json.props.style[prop] !== 'string' &&\n              typeof json.props.style[prop] !== 'number' &&\n              prop.indexOf('shadow') === -1 &&\n              prop.indexOf('transform') === -1\n            ) {\n              propsCode += `${propName}={{${prop}:${this.generateJSLiteralCode(\n                json.props.style[prop],\n                extraParams\n              )}}}`;\n              delete json.props.style[prop];\n            }\n          }\n        }\n      });\n    }\n\n    return propsCode;\n  };\n\n  generateStyle = (\n    json: any,\n    extraParams: ExtraParams,\n    stylePropName: string = 'style'\n  ) => {\n    if (get(json, 'import.layerName') === 'Picker.Item') {\n      return '';\n    }\n    const style = get(json, `props.${stylePropName}`, {});\n    const conditionalStyles: { [key: string]: string } = {};\n    forEach(style, (styleValue: any, styleProperty: any) => {\n      if (\n        styleValue &&\n        [\n          'expressionStatement',\n          'binaryExpression',\n          'expression',\n          'conditionalExpression',\n          'logicalExpression',\n        ].includes(styleValue.type)\n      ) {\n        conditionalStyles[styleProperty] = this.context.baseCodeGen.generate(\n          styleValue,\n          extraParams\n        );\n\n        delete this.context.styles[json.styleName][styleProperty];\n      }\n    });\n\n    if (Object.keys(conditionalStyles).length !== 0) {\n      let conditionalStyleObjCode = '';\n      forEach(\n        conditionalStyles,\n        (code, styleProperty) =>\n          (conditionalStyleObjCode += `${styleProperty}: ${code},`)\n      );\n      return `${stylePropName}={[\n        styles.${json.styleName}${\n        stylePropName !== 'style' ? '_' + stylePropName : ''\n      },\n        {\n          ${conditionalStyleObjCode}\n        }\n      ]}`;\n    }\n    return `${stylePropName}={styles.${json.styleName}${\n      stylePropName !== 'style' ? '_' + stylePropName : ''\n    }}`;\n  };\n\n  generateSourcePropCode(imageName: string, category?: string) {\n    // TODO:Confirm from @HimanshuSatija about JS expressions\n    const assetsRelativePath = this.config.isPreviewFile\n      ? './assets/images/'\n      : '../assets/images/';\n    if (category === 'svgImage') {\n      return `${assetsRelativePath}${imageName}`;\n    }\n    return `src={require(\"${assetsRelativePath}${imageName}\")}`;\n  }\n\n  generateStyleComponentCode = (\n    literal: any,\n    json: any,\n    extraParams: ExtraParams\n  ) => {\n    let code = '';\n    // let restStyles = {};\n    forEach(\n      literal,\n      (\n        element: { style: any; layerName: string; category?: string },\n        key: string\n      ) => {\n        // if (element.hasOwnProperty(\"style\")) {\n        //   let { flex, ...remainingStyles } = element.style;\n        //   restStyles = remainingStyles;\n        // }\n        if (element.category === 'text' || element.category === 'TextInput') {\n          element.style = { fontFamily: 'Arial', ...element.style };\n          let styleCode = this.generateStyleCode(\n            element.style,\n            extraParams,\n            element.category\n          );\n          code += `const ${pascalCase(key)} = styled.${\n            element.layerName\n          }\\`\\n${styleCode}\\`;\\n\\n`;\n        } else if (\n          element.layerName !== 'ThirdParty' &&\n          element.layerName !== 'svg' &&\n          element.layerName !== 'Symbol' &&\n          element.category !== 'Center' &&\n          (element.category !== 'root' ||\n            this.context.filePath.indexOf('symbols') === -1 ||\n            this.context.filePath.indexOf('components') === -1)\n        ) {\n          let styleCode = this.generateStyleCode(\n            element.style,\n            extraParams,\n            element.category,\n            json\n          );\n          // if (\n          //   !isEmpty(restStyles) ||\n          //   this.context.filePath.indexOf(\"symbols\") !== -1 ||\n          //   this.context.filePath.indexOf(\"components\") !== -1\n          // ) {\n          //   // TODO:Condition can be improved\n          //   if (isEmpty(restStyles)) {\n          //     // This is the case of empty object and symbol\n          //     code += `const ${pascalCase(key)} = styled.${\n          //       element.layerName\n          //     }\\`\\``;\n          //   } else {\n          //     code += `const ${pascalCase(key)} = styled.${\n          //       element.layerName\n          //     }\\`\\n${styleCode}\\`;\\n\\n`;\n          //   }\n          // } else {\n          code += `const ${pascalCase(key)} = styled.${\n            element.layerName\n          }\\`\\n${styleCode}\\`\\n\\n`;\n          // }\n        } else if (element.category === 'Center') {\n          code += `const ${pascalCase(key)} = styled.${element.layerName}\\`\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  pointer-events: none;\n\n  \\${props=>\n  ((props.horizontal && !props.vertical)\n  ||(!props.horizontal && !props.vertical)) && css \\`\n      align-items: center;\n  \\`};\n\n\n  \\${props=>\n  ((props.vertical &&!props.horizontal)\n  ||(!props.horizontal&&!props.vertical)) && css \\`\n      justify-content: center;\n  \\`};\n  \\`;\\n\\n`;\n        } else if (\n          element.category === 'root' &&\n          (this.context.filePath.indexOf('symbols') !== -1 ||\n            this.context.filePath.indexOf('components') !== -1)\n        ) {\n          code += `const ${pascalCase(key)}=styled.${element.layerName}(\n            ${this.generateJSLiteralCode(\n              element.style,\n              extraParams,\n              false,\n              element.category\n            )}\n          );`;\n        }\n\n        if (\n          this.context.buttonDuplicate.exists &&\n          !this.context.buttonDuplicate.codeGenerated\n        ) {\n          code += `const ButtonOverlay${\n            this.context.buttonDuplicate.lastNumber !== 1\n              ? this.context.buttonDuplicate.lastNumber\n              : ''\n          } = styled.button\\`\n display: block;\n background: none;\n height: 100%;\n width: 100%;\n border:none\n \\`;`;\n          this.context.buttonDuplicate.codeGenerated = true;\n          this.context.buttonDuplicate.exists = false;\n        }\n      }\n    );\n    return code;\n  };\n  generateStyleCode(\n    obj: any,\n    extraParams: ExtraParams,\n    category?: string,\n    json?: any\n  ) {\n    let flexStyles = get(obj, 'flex');\n    if (category === 'tabView') {\n      obj = { ...obj, position: 'absolute' };\n    }\n\n    if (flexStyles && category !== 'root') {\n      let flexDirection = get(\n        extraParams,\n        'parent.props.style.flexDirection',\n        undefined\n      );\n\n      let flexValue = obj['flex'];\n      let styles = {\n        display: 'flex',\n        flexDirection: obj.flexDirection ? obj.flexDirection : 'column',\n      };\n      if (\n        typeof flexValue === 'number' ||\n        (typeof flexValue === 'string' && flexValue.indexOf(' ') === -1)\n      ) {\n        Object.assign(styles, { flex: `${flexValue} 1 0%` });\n      }\n\n      if (flexDirection) {\n        switch (flexDirection) {\n          case 'row':\n            Object.assign(styles, { width: '100%' });\n            break;\n          case 'column':\n            Object.assign(styles, { height: '100%' });\n            break;\n        }\n      }\n      obj = { ...obj, ...styles };\n    } else if (category === 'root') {\n      let styles = {};\n      if (flexStyles) {\n        delete obj.flex;\n      }\n      let res: Array<string> = [];\n      Object.keys(obj).forEach((key, index) => {\n        if (flexProperties.includes(key)) {\n          res.push(key);\n        }\n      });\n      const hasFlex: boolean = res.length !== 0;\n      if (\n        (obj.hasOwnProperty('backgroundColor') &&\n          this.context.filePath.indexOf('preview') === -1) ||\n        (json && anyChildIsFlex(json.layer)) ||\n        hasFlex\n      ) {\n        // Appending styles to root only we have backgroundColor as one of the property\n        styles = {\n          height: obj.height ? obj.height : '100vh',\n          width: obj.width ? obj.width : '100vw',\n        };\n        obj = { ...obj, ...styles };\n      }\n      if (obj.hasOwnProperty('flexDirection')) {\n        styles = {\n          display: 'flex',\n        };\n        obj = { ...styles, ...obj };\n      }\n      if (\n        this.context.filePath.indexOf('symbols') !== -1 ||\n        this.context.filePath.indexOf('components') !== -1\n      ) {\n        delete obj.height;\n        delete obj.width;\n      } else {\n        obj = { ...obj, ...styles };\n      }\n    }\n    if (obj.hasOwnProperty('shadowOffset')) {\n      obj = {\n        ...obj,\n        boxShadow: `${obj.shadowOffset.width ? obj.shadowOffset.width : 0}px ${\n          obj.shadowOffset.height ? obj.shadowOffset.height : 0\n        }px ${obj.shadowRadius ? obj.shadowRadius : 0}px  ${\n          obj.shadowOpacity ? obj.shadowOpacity : 0\n        }px ${obj.shadowColor && obj.shadowColor} `,\n      };\n      let junk = obj.shadowOffset && delete obj.shadowOffset;\n      junk = obj.shadowColor && delete obj.shadowColor;\n      junk = obj.shadowOpacity && delete obj.shadowOpacity;\n      junk = obj.shadowRadius && delete obj.shadowRadius;\n      junk = obj.elevation && delete obj.elevation;\n    }\n    for (let key in obj) {\n      if (typeof obj[key] !== 'string') {\n        let passVal = obj[key];\n        if (\n          typeof obj[key] === 'number' &&\n          ROUNDABLE_LAYOUT_PROPERTIES.includes(key)\n        ) {\n          passVal = round(passVal);\n        }\n        obj[key] = this.generateJSLiteralCode(passVal, extraParams);\n      }\n    }\n    let style = toStyleString(obj);\n    if (style === '') {\n      return style;\n    }\n    let styleProperties = style.split(';');\n    style = '';\n    let length = styleProperties.length;\n    for (let i = 0; i < length; i++) {\n      if (i === 0 && length > 1) {\n        style = style + `  ${styleProperties[i]};\\n`;\n      } else {\n        style = style + ` ${styleProperties[i]};\\n`;\n      }\n    }\n    return style;\n  }\n  generateSymbolOverrideProps(scopeVariables: any, extraParams: ExtraParams) {\n    let code = '';\n    forEach(scopeVariables, (value: any, key: string) => {\n      if (typeof value === 'string') {\n        code += `${key.replace('this.props.', '')}=${this.generateJSLiteralCode(\n          value,\n          extraParams\n        )}`;\n      } else {\n        code += `${key.replace(\n          'this.props.',\n          ''\n        )}={${this.generateJSLiteralCode(value, extraParams)}}`;\n      }\n    });\n    return code;\n  }\n  generateJSLiteralCode = (\n    literal: any,\n    extraParams: ExtraParams,\n    jsExpression: boolean = false,\n    category?: string\n  ) => {\n    let code = '';\n\n    let literalType: JSLiteralTypes = typeof literal;\n\n    if (literal === null) {\n      literalType = literal; // Handle null literal, otherwise it takes type object\n    }\n\n    if (Array.isArray(literal)) {\n      literalType = 'array';\n    }\n\n    switch (literalType) {\n      case 'object':\n        // TODO:if is not handelled\n        if (\n          [\n            'expressionStatement',\n            'binaryExpression',\n            'expression',\n            'conditionalExpression',\n            'logicalExpression',\n          ].includes(literal.type)\n        ) {\n          code = this.context.baseCodeGen.generate(literal, extraParams);\n        } else {\n          code = `${this.generateJSObjectCode(literal, extraParams, category)}`;\n        }\n        break;\n      case 'array':\n        code = `${this.generateJSArrayCode(literal, extraParams)}`;\n        break;\n      case 'boolean':\n        code = `${literal}`;\n        break;\n      case 'number':\n        code = String(literal); // TODO: consider setValueinInt\n        break;\n      case 'string':\n      default:\n        if (jsExpression) {\n          code = `${literal}`;\n        } else {\n          code = `\"${literal}\"`;\n        }\n    }\n\n    return code;\n  };\n\n  generateJSObjectCode = (\n    obj: any,\n    extraParams: ExtraParams,\n    category?: string\n  ) => {\n    let code = '';\n    if (obj.hasOwnProperty('shadowOffset')) {\n      obj = {\n        ...obj,\n        boxShadow: `${obj.shadowOffset.width ? obj.shadowOffset.width : 0}px ${\n          obj.shadowOffset.height ? obj.shadowOffset.height : 0\n        }px ${obj.shadowRadius ? obj.shadowRadius : 0}px  ${\n          obj.shadowOpacity ? obj.shadowOpacity : 0\n        }px ${obj.shadowColor && obj.shadowColor} `,\n      };\n      let junk = obj.shadowOffset && delete obj.shadowOffset;\n      junk = obj.shadowColor && delete obj.shadowColor;\n      junk = obj.shadowOpacity && delete obj.shadowOpacity;\n      junk = obj.shadowRadius && delete obj.shadowRadius;\n      junk = obj.elevation && delete obj.elevation;\n    }\n    forEach(obj, (value, key) => {\n      if (value !== undefined) {\n        if (key === 'transform') {\n          value = `rotate(${value[0]['rotate']})`;\n        }\n\n        if (key === 'lineHeight') {\n          value = value + 'px';\n        }\n        // if (key === \"fontSize\") {\n        //   value = `${value * 0.5}px`;\n        // }\n\n        if (ROUNDABLE_LAYOUT_PROPERTIES.includes(key)) {\n          if (typeof value === 'number') {\n            value = Math.round(value);\n          } else if (typeof value === 'string' && value.includes('%')) {\n            // For percentage values\n            let numValue = parseFloat(value.replace('%', ''));\n            numValue = Math.round(numValue * 100) / 100;\n            value = numValue + '%';\n          }\n        } else if (ROUNDABLE_TO_TWO_DECIMALS_LAYOUT_PROPERTIES.includes(key)) {\n          if (typeof value === 'number') {\n            value = Math.round(value * 100) / 100;\n          }\n        }\n\n        code += `${key}: ${this.generateJSLiteralCode(value, extraParams)},\n      `;\n      }\n    });\n\n    return `{\n      ${code}\n    }`;\n  };\n\n  generateJSArrayCode = (obj: any, extraParams: ExtraParams) => {\n    let code = '';\n    obj.forEach((value: any) => {\n      code += `${this.generateJSLiteralCode(value, extraParams)},\n      `;\n    });\n\n    return `[\n      ${code}\n    ]`;\n  };\n}\n","import { Context, ExtraParams } from '../types';\nimport {\n  generateChildren,\n  hasAbsolutePosition,\n  hasPositionProperty,\n  layerHasAbsoluteChild,\n  getGradientString,\n} from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport pascalCase from 'pascal-case';\nimport { layerNameMap } from '../constants';\nimport { isEmpty, get } from 'lodash';\nexport default class DivCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n  generate(json: any, extraParams: ExtraParams): any {\n    let gradient = json.props.style.gradient;\n    if (gradient) {\n      const gradientString = getGradientString(gradient);\n      json.props.style.backgroundImage = gradientString;\n      delete json.props.style.backgroundColor;\n      delete json.props.gradientImage;\n    }\n    delete json.props.style.gradient;\n    let propsCode = this.generateProps(json, extraParams);\n\n    // Handling delete opacity in case of gradient(special case for React and not for react native)\n    let { opacity, ...stylesWithoutOpacity } = json.props.style;\n    let smartFlexTransformed = this.context.smartFlexTransformed;\n    let layerStyles = '';\n\n    if (smartFlexTransformed && gradient) {\n      if (layerHasAbsoluteChild(json)) {\n        layerStyles = { ...stylesWithoutOpacity, display: 'flex' };\n      }\n    }\n    if (json.children) {\n      if (json.children.length === 0) {\n        this.context.styles[json.styleName] = {\n          style:\n            smartFlexTransformed && gradient\n              ? stylesWithoutOpacity\n              : json.props.style,\n          layerName: layerNameMap[json.import.layerName],\n          category: json.type === 'root' ? 'root' : undefined,\n        };\n      } else {\n        if (layerHasAbsoluteChild(json)) {\n          json.props.style.position = !(\n            hasPositionProperty(json) && hasAbsolutePosition(json.props.style)\n          )\n            ? 'relative'\n            : json.props.style.position;\n        }\n        this.context.styles[json.styleName] = {\n          style:\n            smartFlexTransformed && gradient\n              ? { ...stylesWithoutOpacity, display: 'flex' }\n              : { ...json.props.style, display: 'flex' },\n          layerName: layerNameMap[json.import.layerName],\n          category: json.type === 'root' ? 'root' : undefined,\n        };\n      }\n    } else {\n      this.context.styles[json.styleName] = {\n        style: json.props.style,\n        layerName: layerNameMap[json.import.layerName],\n        category: json.type === 'root' ? 'root' : undefined,\n      };\n    }\n\n    let { flex, ...restStyles } = json.props.style;\n    let tag =\n      json.type === 'root' && isEmpty(restStyles)\n        ? ''\n        : pascalCase(json.styleName);\n    if (tag === '') {\n      this.context.styles[json.styleName].style = {};\n    }\n    if (\n      json.type === 'root' &&\n      (this.context.filePath.indexOf('symbols') !== -1 ||\n        this.context.filePath.indexOf('components') !== -1)\n    ) {\n      return `<${pascalCase(json.styleName)} {...props} >\n      ${generateChildren(json, this.context.baseCodeGen.generate, {\n        parent: json,\n      })}\n      </${pascalCase(json.styleName)}>`;\n    }\n    //  else if (\n    //   json.type === \"root\" &&\n    //   json.children.length <= 1 &&\n    //   this.context.filePath.indexOf(\"symbols\") === -1 &&\n    //   this.context.filePath.indexOf(\"components\") === -1\n    // ) {\n    //   if (json.children.length === 0) {\n    //     if (!isEmpty(json.props.style)) {\n    //       return `<Container>\n    //     ${generateChildren(json, this.context.baseCodeGen.generate, {\n    //       parent: json\n    //     })}\n    //     </Container>`;\n    //     }\n    //     return `<>\n    //   ${generateChildren(json, this.context.baseCodeGen.generate, {\n    //     parent: json\n    //   })}\n    //   </>`;\n    //   } else {\n    //     this.context.styles[json.styleName].style = {};\n    //     return `${generateChildren(json, this.context.baseCodeGen.generate, {\n    //       parent: json\n    //     })}`;\n    //   }\n    // } else if (\n    //   (this.context.filePath.indexOf(\"symbols\") !== -1 ||\n    //     this.context.filePath.indexOf(\"components\") !== -1) &&\n    //   json.type === \"root\" &&\n    //   json.children.length > 1\n    // ) {\n    //   return `<${tag} style={props.style} ${propsCode} >\n    //   ${generateChildren(json, this.context.baseCodeGen.generate, {\n    //     parent: json\n    //   })}\n    //   </${tag}>`;\n    // }\n    return `<${tag} ${propsCode} >\n      ${generateChildren(json, this.context.baseCodeGen.generate, {\n        parent: json,\n      })}\n      </${tag}>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { hasAbsolutePosition, hasPositionProperty } from '../utils';\nimport { get } from 'lodash';\n\nexport default class CenterCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generateCenterProps(template: any) {\n    if (template.centerVertical && !template.centerHorizontal) {\n      return 'vertical';\n    } else if (!template.centerVertical && template.centerHorizontal) {\n      return 'horizontal';\n    }\n\n    return '';\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    const propsCode = this.generateCenterProps(json.template);\n    this.context.styles = {\n      ...this.context.styles,\n      center: {\n        layerName: 'div',\n        category: 'Center',\n      },\n    };\n    let layer = extraParams.parent;\n    if (\n      (!hasPositionProperty(extraParams.parent) ||\n        (hasPositionProperty(layer) &&\n          !hasAbsolutePosition(layer.props.style))) &&\n      !this.context.smartFlexTransformed\n    ) {\n      this.context.styles[extraParams.parent.styleName].style.position =\n        'relative';\n    }\n    delete json.template.centerHorizontal;\n    delete json.template.centerVertical;\n\n    return `<Center ${propsCode}>\n      ${this.context.baseCodeGen.generate(json, extraParams)}\n    </Center>`;\n    // return this.generateJSLiteralCode({ top: 100 });\n  }\n}\n","import { ExtraParams } from './react/types';\nimport { get, isArray, findIndex, keys, isNil } from 'lodash';\n\nexport const getRandomString = (length: number = 6) => {\n  let text = '';\n  let possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  text = possible.charAt(Math.floor(Math.random() * 52));\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n};\n\nexport function updateWrapperStyleName(json: any, extraParams: ExtraParams) {\n  if (json.type === 'row' || json.type === 'column' || json.type === 'stack') {\n    const firstChildStyleName = get(\n      json,\n      'children.0.styleName',\n      getRandomString(6)\n    );\n    json.styleName =\n      firstChildStyleName +\n      json.type.charAt(0).toUpperCase() +\n      json.type.slice(1);\n  } else if (json.type === 'flexFiller') {\n    const siblingsLength = get(extraParams, 'parent.children.length', 1);\n    const previousSiblingStyleName = get(\n      extraParams,\n      'parent.children.0.styleName'\n    );\n    if (previousSiblingStyleName && previousSiblingStyleName !== 'flexFiller') {\n      json.styleName = previousSiblingStyleName + 'Filler';\n    } else {\n      json.styleName =\n        get(\n          extraParams,\n          `parent.children.${siblingsLength - 1}.styleName`,\n          getRandomString(6)\n        ) + 'Filler';\n    }\n    // const previousSiblingStyleName = get(\n    //   extraParams,\n    //   \"parent.children.0.styleName\",\n    // );\n    // json.styleName = previousSiblingStyleName + \"Filler\";\n  }\n}\n\nexport function isSymbolFile(filePath: string) {\n  // this.context.filePath.indexOf(\"symbols\") === -1 &&\n  //     this.context.filePath.indexOf(\"components\") === -1\n  return filePath.includes('symbols') || filePath.includes('components');\n}\n\nexport function getRotation(transform: any) {\n  let rotation = 0;\n  if (transform) {\n    const transformValue = isArray(transform) ? transform : transform['value'];\n\n    let index = findIndex(transformValue, (item: any) => {\n      let rotate = keys(item).indexOf('rotate');\n      return rotate !== -1 && !isNil(item['rotate']);\n    });\n    if (index > -1) {\n      let value: any =\n        transformValue[index]['rotate'] && transformValue[index]['rotate'].type\n          ? transformValue[index]['rotate'].value\n          : transformValue[index]['rotate'];\n      if (value && value.indexOf) {\n        if (value.indexOf('rad') > -1) {\n          value = parseFloat(value.slice(0, -3));\n          rotation = (value * 180) / Math.PI;\n        } else {\n          value = parseFloat(value.slice(0, -3));\n          rotation = value;\n        }\n      }\n    }\n  }\n  return rotation;\n}\n","import { Context, ExtraParams } from '../types';\nimport { forEach, isEmpty } from 'lodash';\nimport LayerCodeGen from '../LayerCodeGen';\nimport generate from '@babel/generator';\nimport { isSymbolFile } from '../../utils';\nimport { generateChildren, anyChildIsFlex } from '../utils';\n\nexport default class FileCodeGen extends LayerCodeGen {\n  context: Context;\n\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generateStyleNames(json: any, extraParams: ExtraParams) {\n    return this.generateStyleComponentCode(\n      this.context.styles,\n      json,\n      extraParams\n    );\n  }\n  generateConditionalVariables() {\n    let conditionalVariables = '';\n    for (let i = 0; i < this.context.conditionals.length; i++) {\n      conditionalVariables += `let ${this.context.conditionals[i]}=true;`;\n    }\n    return conditionalVariables;\n  }\n\n  generateImports() {\n    let importsCode = '';\n\n    forEach(this.context.imports, (importObj, packageName) => {\n      let defaultImportCode = '';\n\n      if (importObj.default) {\n        defaultImportCode =\n          importObj.named.length > 0\n            ? `${importObj.default},`\n            : importObj.default;\n      }\n\n      let namedImportsCode = ' ';\n\n      forEach(importObj.named, (layerName: any, index) => {\n        if (index === 0) {\n          namedImportsCode += '{ ';\n        }\n        if (typeof layerName === 'object') {\n          if (\n            layerName.hasOwnProperty('name') &&\n            layerName.hasOwnProperty('asName')\n          ) {\n            namedImportsCode += `${layerName.name} as ${layerName.asName},`;\n          }\n        } else {\n          namedImportsCode += `${layerName}, `;\n        }\n        if (index === importObj.named.length - 1) {\n          namedImportsCode += '}';\n        }\n      });\n\n      if (importObj.named.length > 0 || importObj.default) {\n        importsCode += `import ${defaultImportCode} ${namedImportsCode} from \"${packageName}\";`;\n        if (importObj.cssFile !== undefined) {\n          importsCode += `import \"${importObj.cssFile}\";`;\n        }\n      }\n    });\n\n    return importsCode;\n  }\n  isFileComponent = (): boolean => {\n    if (\n      this.context.filePath.indexOf('component') !== -1 ||\n      this.context.filePath.indexOf('symbol') !== -1\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  generate(json: any, extraParams: ExtraParams): string {\n    let {\n      flex,\n      display,\n      flexDirection,\n      ...restStyles\n    } = json.layer.props.style;\n\n    const containerHasDefaultStyles =\n      isEmpty(restStyles) &&\n      (!display || display === 'flex') &&\n      (!flexDirection || flexDirection === 'column');\n    if (json.smartFlexTransformed) {\n      this.context.smartFlexTransformed = true;\n    }\n    let className = json.path;\n    this.context['filePath'] = json.path;\n    className = className.substring(\n      className.lastIndexOf('/') + 1,\n      className.lastIndexOf('.')\n    );\n\n    let layersCode;\n\n    if (\n      json.layer.children.length === 0 &&\n      containerHasDefaultStyles &&\n      !isSymbolFile(this.context.filePath)\n    ) {\n      layersCode = '<></>';\n    } else {\n      if (!isSymbolFile(json.path) && containerHasDefaultStyles) {\n        if (\n          json.layer.children.length === 1 &&\n          json.layer.children[0].type !== 'symbol'\n        ) {\n          json.layer.children[0].type = 'root';\n          layersCode = this.context.baseCodeGen.generate(\n            json.layer.children[0],\n            {\n              parent: json,\n            }\n          );\n        } else if (!anyChildIsFlex(json.layer)) {\n          layersCode = `<>${generateChildren(\n            json.layer,\n            this.context.baseCodeGen.generate,\n            {\n              parent: json,\n            }\n          )}</>`;\n        } else {\n          layersCode = this.context.baseCodeGen.generate(json.layer, {\n            parent: json,\n          });\n        }\n      } else if (\n        this.config.isPreviewFile &&\n        json.layer.children.length === 1\n      ) {\n        layersCode = this.context.baseCodeGen.generate(json.layer.children[0], {\n          parent: json,\n        });\n      } else {\n        layersCode = this.context.baseCodeGen.generate(json.layer, {\n          parent: json,\n        });\n      }\n    }\n    const stylesCode = this.generateStyleNames(json, {\n      parent: json,\n    });\n    this.context.buttonDuplicate.exists = false;\n    this.context.buttonDuplicate.codeGenerated = false;\n    return `${this.generateImports()}\n\n    ${this.context.isPlatformConditional ? `let Platform={OS:\"Web\"}` : ''};\n   ${this.generateConditionalVariables()}\n\n   function ${className}(props) {\n        ${this.context.fileHasTabView ? `let value=0;` : ''}\n        return ${layersCode};\n    }\n\n    ${stylesCode}\n\n    export default ${className}`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { get, replace } from 'lodash';\nimport { escapeTextForJSX } from './../utils';\n\nexport default class LiteralCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    if (get(json, 'value.type', '') === 'unknown') {\n      return 'null';\n    } else if (json.value && json.value.type) {\n      return this.context.baseCodeGen.generate(json.value, extraParams);\n    }\n\n    if (typeof json.value === 'string') {\n      if (extraParams && !extraParams.textLiteral) {\n        json.value = escapeTextForJSX(json.value);\n      } else {\n        const newLine = '\\\\' + 'n';\n        json.value = replace(json.value, new RegExp('\\n', 'g'), newLine);\n        const tab = '\\\\' + 't';\n        json.value = replace(json.value, new RegExp('\\t', 'g'), tab);\n      }\n\n      // Only replace opening curly braces `{` with `{\"{\"} and `\n      if (extraParams && !extraParams.textLiteral) {\n        json.value = json.value.replace(/(\\{+)([^\"])/g, `{\"$1\"}$2`);\n      }\n\n      return this.generateJSLiteralCode(\n        json.value,\n        extraParams,\n        extraParams && typeof extraParams.textLiteral === 'boolean'\n          ? !extraParams.textLiteral\n          : false\n      );\n    } else {\n      //   const errorMessage = `json.value should be string but received ${JSON.stringify(\n      //     json.value\n      //   )} for ${this.context.filePath}`;\n      //   console.error(errorMessage);\n      //   this.context.baseCodeGen.ipc.executeCommand(\"captureErrorForSentry\", [\n      //     new Error(errorMessage)\n      //   ]);\n      //   if (json.value.toString) {\n      //     json.value = json.value.toString();\n      //   } else {\n      //     json.value = \"\";\n      //   }\n      // } else {\n      //   const errorMessage = `json.value should be string but received ${JSON.stringify(\n      //     json.value\n      //   )} for ${this.context.filePath}`;\n      //   console.error(errorMessage);\n      //   this.context.baseCodeGen.ipc.executeCommand(\"captureErrorForSentry\", [\n      //     new Error(errorMessage)\n      //   ]);\n      //   json.value = \"\";\n\n      return this.generateJSLiteralCode(json.value, extraParams, true);\n    }\n\n    // return json.value;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { layerNameMap } from '../constants';\nconst pascalCase = require('pascal-case');\n\nexport default class TextCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    delete json.props.style.fontPostscriptName;\n\n    this.context.styles[json.styleName] = {\n      style: json.props.style,\n      layerName: layerNameMap[json.import.layerName],\n      category: 'text',\n    };\n\n    console.log(\n      `${generateChildren(json, this.context.baseCodeGen.generate, {\n        ...extraParams,\n        parent: json,\n        textLiteral: false,\n      })}`,\n      'hello here &&&&'\n    );\n    return `<${pascalCase(json.styleName)} ${this.generateProps(\n      json,\n      extraParams\n    )}>\n      ${generateChildren(json, this.context.baseCodeGen.generate, {\n        ...extraParams,\n        parent: json,\n        textLiteral: false,\n      })}\n    </${pascalCase(json.styleName)}>`;\n  }\n}\n","import { Point, Coordinate } from './types';\n\nfunction getManipulatedPath(layer: any, paperPath: any) {\n  // TODO: keep this order, otherwise malfunctions\n  // adds roatation\n  if (layer.rotation) {\n    paperPath.rotate(-layer.rotation);\n  }\n  // checks for flip\n  if (layer.isFlippedHorizontal || layer.isFlippedVertical) {\n    paperPath.scale(\n      layer.isFlippedHorizontal ? -1 : 1,\n      layer.isFlippedVertical ? -1 : 1\n    );\n  }\n  paperPath.closed = layer.isClosed;\n  return paperPath;\n}\n\nfunction convertPointsArrayBool(\n  points: any,\n  frame: any,\n  referenceFrame: any,\n  scalingFactor: number\n) {\n  let newPoints = [];\n  if (points && points.length > 0) {\n    let pointsApplied =\n      points[0].point !== points[points.length - 1].point\n        ? points\n        : getValidPoints(points);\n    for (let i = 0; i < pointsApplied.length; i++) {\n      let tempPoint: any = {};\n      tempPoint.cornerRadius = pointsApplied[i].cornerRadius;\n      tempPoint.curveMode = pointsApplied[i].curveMode;\n      tempPoint.hasCurveTo = pointsApplied[i].hasCurveTo;\n      tempPoint.hasCurveFrom = pointsApplied[i].hasCurveFrom;\n      tempPoint.curveFrom = convertPointBool(\n        pointsApplied[i].curveFrom,\n        frame,\n        referenceFrame,\n        scalingFactor\n      );\n      tempPoint.curveTo = convertPointBool(\n        pointsApplied[i].curveTo,\n        frame,\n        referenceFrame,\n        scalingFactor\n      );\n      tempPoint.point = convertPointBool(\n        pointsApplied[i].point,\n        frame,\n        referenceFrame,\n        scalingFactor\n      );\n      newPoints.push(tempPoint);\n    }\n  }\n  return newPoints;\n}\n\nfunction convertPointBool(\n  point: any,\n  frame: any,\n  referenceFrame: any,\n  scalingFactor: any\n) {\n  let tempP1 = point.split(',');\n  let px = tempP1[0].slice(1);\n  let py = tempP1[1].slice(0, -1);\n  px = (px * frame.width + frame.x) * scalingFactor;\n  py = (py * frame.height + frame.y) * scalingFactor;\n\n  return {\n    x: parseFloat(px.toFixed(4)),\n    y: parseFloat(py.toFixed(4)),\n  };\n}\n\n// function to convert Sketch points json to Bx json\nexport function convertPointsArray(\n  points: any,\n  frame: any,\n  referenceFrame: any,\n  maskingDisplacement: any,\n  scalingFactor: number\n) {\n  let newPoints = [];\n  if (points && points.length > 0) {\n    for (let i = 0; i < points.length; i++) {\n      let tempPoint: any = {};\n      tempPoint.cornerRadius = points[i].cornerRadius;\n      tempPoint.curveMode = points[i].curveMode;\n      tempPoint.hasCurveTo = points[i].hasCurveTo;\n      tempPoint.hasCurveFrom = points[i].hasCurveFrom;\n      tempPoint.curveFrom = convertPoint(\n        points[i].curveFrom,\n        frame,\n        referenceFrame,\n        maskingDisplacement,\n        scalingFactor\n      );\n      tempPoint.curveTo = convertPoint(\n        points[i].curveTo,\n        frame,\n        referenceFrame,\n        maskingDisplacement,\n        scalingFactor\n      );\n      tempPoint.point = convertPoint(\n        points[i].point,\n        frame,\n        referenceFrame,\n        maskingDisplacement,\n        scalingFactor\n      );\n      newPoints.push(tempPoint);\n    }\n  }\n  return newPoints;\n}\n\nfunction convertPoint(\n  point: any,\n  frame: any,\n  referenceFrame: any,\n  maskingDisplacement: any,\n  scalingFactor: number\n) {\n  let tempP1 = point.split(',');\n  let px = tempP1[0].slice(1);\n  let py = tempP1[1].slice(0, -1);\n  px =\n    ((px * frame.width + maskingDisplacement.x) * frame.width * scalingFactor) /\n    referenceFrame.width;\n  py =\n    ((py * frame.height + maskingDisplacement.y) *\n      frame.height *\n      scalingFactor) /\n    referenceFrame.height;\n\n  return {\n    x: parseFloat(px.toFixed(4)),\n    y: parseFloat(py.toFixed(4)),\n  };\n}\n\nfunction getValidPoints(points: any) {\n  let newPoints = points.slice(1, points.length - 1);\n  let obj = {\n    _class: 'curvePoint',\n    cornerRadius: points[0].cornerRadius,\n    curveMode: points[0].curveMode,\n    curveTo: points[0].hasCurveTo\n      ? points[0].curveTo\n      : points[points.length - 1].curveTo,\n    curveFrom: points[0].hasCurveFrom\n      ? points[0].curveFrom\n      : points[points.length - 1].curveFrom,\n    hasCurveFrom: points[0].hasCurveFrom\n      ? true\n      : points[points.length - 1].hasCurveFrom,\n    hasCurveTo: points[0].hasCurveTo\n      ? true\n      : points[points.length - 1].hasCurveTo,\n    point: points[0].point,\n  };\n  newPoints.unshift(obj);\n  return newPoints;\n}\n\nexport function getRadiusAdjustment(\n  pointsArray: Array<Point>,\n  currentIndex: number,\n  nextIndex: number,\n  maxRadius: number\n): Coordinate {\n  if (!pointsArray[currentIndex] || !pointsArray[nextIndex]) {\n    return { x: 0, y: 0 };\n  }\n  const radius =\n    maxRadius > pointsArray[currentIndex].cornerRadius\n      ? pointsArray[currentIndex].cornerRadius\n      : maxRadius;\n  const x0 = pointsArray[currentIndex].point.x;\n  const y0 = pointsArray[currentIndex].point.y;\n  const x1 = pointsArray[nextIndex].point.x;\n  const y1 = pointsArray[nextIndex].point.y;\n  if (x1 === x0 && y1 === y0) {\n    return { x: 0, y: 0 };\n  } else if (x1 === x0) {\n    return {\n      x: 0,\n      y: y1 > y0 ? radius : -radius,\n    };\n  } else {\n    let angle: any = Math.atan2(y1 - y0, x1 - x0);\n    return {\n      x: Math.cos(angle) * radius,\n      y: Math.sin(angle) * radius,\n    };\n  }\n}\n","import { Point, Coordinate } from './types';\nimport { getRadiusAdjustment } from './pathUtils';\nexport default function generateSVGPath(\n  pointsArray: Array<Point>,\n  strokeWidthOffset: number,\n  isClosed: boolean,\n  viewBox: string\n) {\n  let generatedPath = '';\n  if (!pointsArray) {\n    return '';\n  }\n  const dims: Array<any> =\n    viewBox && viewBox.split ? viewBox.split(' ') : [0, 0, 100, 100];\n  const maxRadius = Math.min(dims[2] - dims[0], dims[3] - dims[1]) / 2;\n  strokeWidthOffset = strokeWidthOffset <= 1 ? 0 : strokeWidthOffset / 2;\n  let initialIndex = 0; // Maintains track of each shape start after combining\n  let d1: Coordinate = { x: 0, y: 0 }; // Distance with radius\n  for (let i = 0; i < pointsArray.length; i++) {\n    if (i === initialIndex) {\n      // Moving to initial points with \"M\"\n      let xy0 = pointsArray[i].point;\n      if (pointsArray[i].cornerRadius) {\n        d1 = getRadiusAdjustment(pointsArray, i, i + 1, maxRadius);\n      }\n      let x0 = (strokeWidthOffset + xy0.x + d1.x).toFixed(2);\n      let y0 = (strokeWidthOffset + xy0.y + d1.y).toFixed(2);\n      generatedPath += 'M' + x0 + ' ' + y0 + ' ';\n      generatedPath += getNextPathPoint(\n        pointsArray,\n        i,\n        strokeWidthOffset,\n        initialIndex,\n        maxRadius\n      );\n    } else if (isFillerCondition(pointsArray[i])) {\n      initialIndex = i + 1;\n      if (i !== pointsArray.length - 1 && isFillerClosed(pointsArray[i])) {\n        generatedPath += 'Z ';\n      }\n    } else if (\n      i === pointsArray.length - 1 ||\n      (i !== pointsArray.length - 1 && isFillerCondition(pointsArray[i + 1]))\n    ) {\n      // adding additional point in the end of string\n      if (\n        isClosed &&\n        pointsArray[i].point.x !== pointsArray[initialIndex].point.x &&\n        pointsArray[i].point.y !== pointsArray[initialIndex].point.y\n      ) {\n        let pointTo = pointsArray[initialIndex].point;\n        let radiusPoint;\n        if (pointsArray[i].cornerRadius) {\n          d1 = getRadiusAdjustment(pointsArray, i, initialIndex, maxRadius);\n          const passedPointIndex = pointsArray[initialIndex + 1]\n            ? initialIndex + 1\n            : initialIndex;\n          let d2 = getRadiusAdjustment(\n            pointsArray,\n            initialIndex,\n            passedPointIndex,\n            maxRadius\n          );\n          let px0 = (strokeWidthOffset + pointTo.x + d2.x).toFixed(2);\n          let py0 = (strokeWidthOffset + pointTo.y + d2.y).toFixed(2);\n          let curveFromX0 = (strokeWidthOffset + pointTo.x - d1.x / 2).toFixed(\n            2\n          );\n          let curveFromY0 = (strokeWidthOffset + pointTo.y - d1.y / 2).toFixed(\n            2\n          );\n          let curveToX0 = (strokeWidthOffset + pointTo.x + d2.x / 2).toFixed(2);\n          let curveToY0 = (strokeWidthOffset + pointTo.y + d2.y / 2).toFixed(2);\n          radiusPoint =\n            'C' +\n            curveFromX0 +\n            ' ' +\n            curveFromY0 +\n            ' ' +\n            curveToX0 +\n            ' ' +\n            curveToY0 +\n            ' ' +\n            px0 +\n            ' ' +\n            py0 +\n            ' ';\n        }\n        let px = (strokeWidthOffset + pointTo.x - d1.x).toFixed(2);\n        let py = (strokeWidthOffset + pointTo.y - d1.y).toFixed(2);\n        let curveFromPoint = pointsArray[i].curveFrom;\n        let curveFromX = (strokeWidthOffset + curveFromPoint.x).toFixed(2);\n        let curveFromY = (strokeWidthOffset + curveFromPoint.y).toFixed(2);\n        let curveTo = pointsArray[initialIndex].curveTo;\n        let curveToX = (strokeWidthOffset + curveTo.x).toFixed(2);\n        let curveToY = (strokeWidthOffset + curveTo.y).toFixed(2);\n        if (\n          (pointsArray[initialIndex] && pointsArray[initialIndex].hasCurveTo) ||\n          pointsArray[i].hasCurveFrom\n        ) {\n          generatedPath +=\n            'C' +\n            curveFromX +\n            ' ' +\n            curveFromY +\n            ' ' +\n            curveToX +\n            ' ' +\n            curveToY +\n            ' ' +\n            px +\n            ' ' +\n            py +\n            ' ' +\n            (radiusPoint || '');\n        } else {\n          generatedPath += 'L' + px + ' ' + py + ' ' + (radiusPoint || '');\n        }\n      }\n    } else {\n      generatedPath += getNextPathPoint(\n        pointsArray,\n        i,\n        strokeWidthOffset,\n        initialIndex,\n        maxRadius\n      );\n    }\n  }\n  if (isClosed) {\n    generatedPath += 'Z';\n  }\n  // console.log(\"*** generatedPath\", generatedPath);\n  return generatedPath;\n}\n\nfunction getNextPathPoint(\n  pointsArray: Array<Point>,\n  i: number,\n  strokeWidthOffset: number,\n  initialIndex: number,\n  maxRadius: number\n) {\n  if (i + 1 >= pointsArray.length) {\n    return '';\n  }\n  let nextPoint = '';\n  let pointTo = pointsArray[i + 1].point;\n  let d1: Coordinate = { x: 0, y: 0 };\n  let radiusPoint;\n  if (pointsArray[i].cornerRadius) {\n    d1 = getRadiusAdjustment(pointsArray, i, i + 1, maxRadius);\n    const passedPointIndex = pointsArray[i + 2] ? i + 2 : initialIndex;\n    const d2 = getRadiusAdjustment(\n      pointsArray,\n      i + 1,\n      passedPointIndex,\n      maxRadius\n    );\n    let px0 = (strokeWidthOffset + pointTo.x + d2.x).toFixed(2);\n    let py0 = (strokeWidthOffset + pointTo.y + d2.y).toFixed(2);\n    let curveFromX0 = (strokeWidthOffset + pointTo.x - d1.x / 2).toFixed(2);\n    let curveFromY0 = (strokeWidthOffset + pointTo.y - d1.y / 2).toFixed(2);\n    let curveToX0 = (strokeWidthOffset + pointTo.x + d2.x / 2).toFixed(2);\n    let curveToY0 = (strokeWidthOffset + pointTo.y + d2.y / 2).toFixed(2);\n    radiusPoint =\n      'C' +\n      curveFromX0 +\n      ' ' +\n      curveFromY0 +\n      ' ' +\n      curveToX0 +\n      ' ' +\n      curveToY0 +\n      ' ' +\n      px0 +\n      ' ' +\n      py0 +\n      ' ';\n  }\n  let px = (strokeWidthOffset + pointTo.x - d1.x).toFixed(2);\n  let py = (strokeWidthOffset + pointTo.y - d1.y).toFixed(2);\n\n  let curveFromPoint = pointsArray[i].curveFrom;\n  let curveFromX = (strokeWidthOffset + curveFromPoint.x).toFixed(2);\n  let curveFromY = (strokeWidthOffset + curveFromPoint.y).toFixed(2);\n\n  let curveTo = pointsArray[i + 1].curveTo;\n  let curveToX = (strokeWidthOffset + curveTo.x).toFixed(2);\n  let curveToY = (strokeWidthOffset + curveTo.y).toFixed(2);\n  if (\n    (pointsArray[i + 1] && pointsArray[i + 1].hasCurveTo) ||\n    pointsArray[i].hasCurveFrom\n  ) {\n    nextPoint +=\n      'C' +\n      curveFromX +\n      ' ' +\n      curveFromY +\n      ' ' +\n      curveToX +\n      ' ' +\n      curveToY +\n      ' ' +\n      px +\n      ' ' +\n      py +\n      ' ' +\n      (radiusPoint || '');\n  } else {\n    nextPoint += 'L' + px + ' ' + py + ' ' + (radiusPoint || '');\n  }\n  return nextPoint;\n}\n\nfunction isFillerCondition(point: any): boolean {\n  return (\n    (point.cornerRadius === 777 && point.curveMode === 777) ||\n    (point.cornerRadius === 776 && point.curveMode === 776)\n  );\n}\nfunction isFillerClosed(point: any): boolean {\n  return point.cornerRadius === 776 && point.curveMode === 776;\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren, addImportToContext } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { layerNameMap } from '../constants';\nimport { generateSVGPath } from './../../conversions';\nimport * as path from 'path';\nimport { get } from 'lodash';\nconst pascalCase = require('pascal-case');\n\nexport default class ImageCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n  getRandomString() {\n    let text = '';\n    let possible =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    text = possible.charAt(Math.floor(Math.random() * 52));\n    for (let i = 0; i < 6; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n  generateDefs(json: any, maskId: string) {\n    let defsCode = '';\n    let maskCode = '';\n    let maskPathCode = `<path fill=\"white\" d={\"${generateSVGPath(\n      json.props.mask,\n      0,\n      true,\n      json.props.viewBox\n    )}\"}/>`;\n    // const viewBox = json.props.viewBox.split(\" \");\n    maskCode = `<mask id=\"${maskId}\" x={0} y={0}>\n      ${maskPathCode}\n      </mask>`;\n\n    if (maskCode) {\n      defsCode = `<defs>\n    ${maskCode}\n    </defs>`;\n    }\n    return defsCode;\n  }\n  generate(json: any, extraParams: ExtraParams): string {\n    let flexDirection = get(\n      extraParams,\n      'parent.props.style.flexDirection',\n      undefined\n    );\n\n    if (flexDirection) {\n      switch (flexDirection) {\n        case 'row':\n          Object.assign(json.props.style, { width: '100%' });\n          break;\n        case 'column':\n          Object.assign(json.props.style, { height: '100%' });\n          break;\n      }\n    }\n    if (json.props.mask) {\n      const { viewBox, style } = json.props;\n      this.context.styles[json.styleName] = {\n        style: json.props.style,\n        layerName: layerNameMap[json.import.layerName],\n        category: 'svgImage',\n      };\n      const svgJson = { ...json, props: { viewBox, style } };\n      const maskId = this.getRandomString();\n      return `<svg ${this.generateProps(\n        svgJson,\n        extraParams\n      )} style={${this.generateJSLiteralCode(json.props.style, extraParams)}}>\n      ${this.generateDefs(json, maskId)}\n      <image href={require(\"${this.generateSourcePropCode(\n        path.basename(json.props.source.uri),\n        'svgImage'\n      )}\")} x={${json.props.svgDims.x}} y={${json.props.svgDims.y}} width={${\n        json.props.svgDims.width\n      }} height={${json.props.svgDims.height}} mask={\"url(#${maskId})\"}>\n      ${generateChildren(json, this.context.baseCodeGen.generate, {\n        parent: json,\n      })}\n      </image>\n      </svg>`;\n    }\n    if (json.props.hasOwnProperty('resizeMode')) {\n      json.props.style = {\n        ...json.props.style,\n        objectFit: json.props['resizeMode'],\n      };\n      delete json.props.resizeMode;\n    }\n    if (json.children.length !== 0) {\n      json.import.layerName = 'View';\n\n      if (!json.props.style.gradient) {\n        const assetsRelativePath = this.config.isPreviewFile\n          ? './assets/images/'\n          : '../assets/images/';\n        const pathName =\n          assetsRelativePath + path.basename(json.props.source.uri);\n        json.props.style.backgroundImage =\n          \"url(${require('\" + pathName + \"')})\";\n        json.props.style.backgroundSize = 'cover';\n        if (json.props.style.objectFit) {\n          delete json.props.style.objectFit;\n        }\n      }\n      delete json.props.source;\n    }\n    this.context.styles[json.styleName] = {\n      style: json.props.style,\n      layerName: layerNameMap[json.import.layerName],\n    };\n    return `<${pascalCase(json.styleName)} ${this.generateProps(\n      json,\n      extraParams\n    )} >\n    ${generateChildren(json, this.context.baseCodeGen.generate, {\n      parent: json,\n    })}\n    </${pascalCase(json.styleName)}>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { layerNameMap } from '../constants';\n\nexport default class EllipseCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    json.props.viewBox = json.props.viewBox\n      .split(' ')\n      .map((v: string) => Math.round(parseFloat(v) * 100) / 100)\n      .join(' ');\n    this.context.styles[json.styleName] = {\n      style: json.props.style,\n      layerName: layerNameMap[json.import.layerName],\n    };\n    const { viewBox, style, ...ellipseProps } = json.props;\n    const ellipseJson = { ...json, props: ellipseProps };\n    const svgJson = { ...json, props: { viewBox, style } };\n\n    return `<svg ${this.generateProps(\n      svgJson,\n      extraParams\n    )} style={${this.generateJSLiteralCode(json.props.style, extraParams)}}>\n    <ellipse ${this.generateProps(ellipseJson, extraParams)}>\n      ${generateChildren(json, this.context.baseCodeGen.generate, {\n        parent: json,\n      })}\n    </ellipse>\n    </svg>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { layerNameMap } from '../constants';\nconst pascalCase = require('pascal-case');\nexport default class ScrollViewCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    // let layerSpecificStyles = \"\";\n\n    // layerSpecificStyles += `${this.generateStyle(\n    //   json,\n    //   extraParams,\n    //   \"contentContainerStyle\"\n    // )}`;\n    let { horizontal } = json.props;\n    let scrollDirection = horizontal ? 'overflowX' : 'overflowY';\n    const style = {\n      [scrollDirection]: 'scroll',\n      // ...json.props.contentContainerStyle,\n      ...json.props.style,\n      display: 'flex',\n    };\n\n    this.context.styles[json.styleName] = {\n      style,\n      layerName: layerNameMap[json.import.layerName],\n    };\n    delete json.props.horizontal;\n    return `<${pascalCase(json.styleName)} ${this.generateProps(\n      json,\n      extraParams\n    )} >\n      ${generateChildren(json, this.context.baseCodeGen.generate, {\n        parent: json,\n      })}\n    </${pascalCase(json.styleName)}>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren, addImportToContext } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\n\nexport default class SymbolLayerCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    this.context.styles[json.styleName] = {\n      style: json.props.style,\n      layerName: 'Symbol',\n    };\n    addImportToContext(this.context, json);\n\n    const tagName = json.import.layerName;\n\n    return `<${tagName} ${this.generateProps(\n      json,\n      extraParams\n    )} style={${this.generateJSLiteralCode(\n      json.props.style,\n      extraParams\n    )}} ${this.generateSymbolOverrideProps(json.scopeVariables, extraParams)}>\n      ${generateChildren(json, this.context.baseCodeGen.generate, {\n        parent: json,\n      })}\n    </${tagName}>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { includes, replace } from 'lodash';\nimport { layerNameMap } from '../constants';\nconst pascalCase = require('pascal-case');\n\nexport default class TextInputCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    delete json.props.style.fontPostscriptName;\n    let textInputStyles = { ...json.props.style, background: 'transparent' };\n    if (\n      !json.props.style.hasOwnProperty('border') &&\n      !json.props.style.hasOwnProperty('borderWidth')\n    ) {\n      textInputStyles = {\n        ...json.props.style,\n        ...{ border: 'none', background: 'transparent' },\n      };\n    }\n    let {\n      textBreakStrategy,\n      clearButtonMode,\n      dataDetector,\n      keyboardAppearance,\n      ...restProps\n    } = json.props;\n    json.props = { ...restProps };\n    this.context.styles[json.styleName] = {\n      style: textInputStyles,\n      layerName: layerNameMap[json.import.layerName],\n      category: 'TextInput',\n    };\n    if (includes(json.props.placeholder, '\\n')) {\n      json.props.placeholder = replace(\n        json.props.placeholder,\n        new RegExp('\\n', 'g'),\n        ' '\n      );\n      json.props.placeholder = replace(\n        json.props.placeholder,\n        new RegExp('\\t', 'g'),\n        ' '\n      );\n    }\n    delete json.props.value;\n\n    let junk =\n      json.props.placeholderTextColor && delete json.props.placeholderTextColor;\n    junk = json.props.selectionColor && delete json.props.selectionColor;\n    junk =\n      json.props.underlineColorAndroid &&\n      delete json.props.underlineColorAndroid;\n    junk = json.props.blurOnSubmit && delete json.props.blurOnSubmit;\n    junk = json.props.caretHidden && delete json.props.caretHidden;\n    junk = json.props.editable && delete json.props.editable;\n    junk = json.props.multiline && delete json.props.multiline;\n    junk = json.props.secureTextEntry && delete json.props.secureTextEntry;\n    junk =\n      json.props.disableFullscreenUI && delete json.props.disableFullscreenUI;\n    junk = json.props.clearTextOnFocus && delete json.props.clearTextOnFocus;\n    junk =\n      json.props.enablesReturnKeyAutomatically &&\n      delete json.props.enablesReturnKeyAutomatically;\n    junk = json.props.keyboardType && delete json.props.keyboardType;\n    junk = json.props.returnKeyType && delete json.props.returnKeyType;\n    junk = json.props.autoCapitalize && delete json.props.autoCapitalize;\n\n    return `<${pascalCase(json.styleName)} ${this.generateProps(\n      json,\n      extraParams\n    )}>\n      ${generateChildren(json, this.context.baseCodeGen.generate, {\n        parent: json,\n      })}\n    </${pascalCase(json.styleName)}>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren, addImportToContext } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { layerNameMap } from '../constants';\n\nconst pascalCase = require('pascal-case');\n\nexport default class ButtonCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n  getButtonTag = (json: any, extraParams: ExtraParams) => {\n    let suffix =\n      this.context.buttonDuplicate.lastNumber > 1\n        ? this.context.buttonDuplicate.lastNumber\n        : '';\n    return `<${pascalCase(json.styleName)}>\n    <ButtonOverlay${suffix} ${this.generateProps(json, extraParams)} ${\n      json.navigateTo && json.navigateTo === 'Go Back'\n        ? `onClick = {() => props.history.goBack()}`\n        : ''\n    }>\n      ${generateChildren(json, this.context.baseCodeGen.generate, {\n        parent: json,\n      })}\n    </ButtonOverlay${suffix}>\n    </${pascalCase(json.styleName)}>`;\n  };\n\n  generate(json: any, extraParams: ExtraParams): string {\n    let buttonStyles = { ...json.props.style };\n    if (\n      !json.props.style.hasOwnProperty('border') &&\n      !json.props.style.hasOwnProperty('borderWidth')\n    ) {\n      buttonStyles = { ...json.props.style, border: 'none' };\n    }\n    this.context.styles[json.styleName] = {\n      style: buttonStyles,\n      layerName: layerNameMap[json.import.layerName],\n    };\n    if (json.navigateTo && json.navigateTo !== 'Go Back') {\n      addImportToContext(this.context, json);\n    }\n    return `${\n      json.navigateTo && json.navigateTo !== 'Go Back'\n        ? `<Link to=\"/${json.navigateTo}\">\n            ${this.getButtonTag(json, extraParams)}\n          </Link>`\n        : this.getButtonTag(json, extraParams)\n    }`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { generateSVGPath } from './../../conversions';\nimport { forEach, get } from 'lodash';\nimport { layerNameMap } from '../constants';\nimport { getRandomString } from '../../utils';\n\nexport default class PathCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generateDefs(json: any) {\n    let defsCode = '';\n    let gradId, maskId;\n\n    let gradientCode = '';\n    const gradient = json.props.style.gradient;\n    delete json.props.style.gradient;\n\n    if (gradient && gradient.gradientType === 'LinearGradient') {\n      let x1 = gradient.from.x;\n      x1 = typeof x1 === 'number' ? x1 * 100 : parseFloat(x1) * 100;\n\n      let y1 = gradient.from.y;\n      y1 = typeof y1 === 'number' ? y1 * 100 : parseFloat(y1) * 100;\n\n      let x2 = gradient.to.x;\n      x2 = typeof x2 === 'number' ? x2 * 100 : parseFloat(x2) * 100;\n\n      let y2 = gradient.to.y;\n      y2 = typeof y2 === 'number' ? y2 * 100 : parseFloat(y2) * 100;\n\n      gradId = getRandomString(6);\n\n      const linearGradProps = `id=\"${gradId}\" x1=\"${x1}%\" x2=\"${x2}%\" y1=\"${y1}%\" y2=\"${y2}%\"`;\n\n      let stopsCode = '';\n\n      forEach(gradient.stops, (stop: any) => {\n        if (typeof stop.offset === 'string') {\n          stop.offset = parseFloat(stop.offset);\n        }\n\n        stopsCode += `<stop offset=\"${stop.offset\n          .toFixed(2)\n          .toString()}\" stopColor=\"${stop.stopColor}\" />`;\n      });\n\n      gradientCode = `<linearGradient ${linearGradProps}>\n      ${stopsCode}\n      </linearGradient>`;\n    }\n\n    let maskCode = '';\n    if (json.props.mask) {\n      let maskPathD = generateSVGPath(\n        json.props.mask,\n        1,\n        true,\n        json.props.viewBox\n      );\n\n      let maskPathCode = `<path d=\"${maskPathD}\" fill=\"white\" />`;\n\n      let viewBox = ['0', '0', json.rcDims.width + '', json.rcDims.height + ''];\n\n      if (json.props.viewBox) {\n        // TODO: We're getting props.viewBox undeifned in some case which should never happen\n        viewBox = json.props.viewBox.split(' ');\n      }\n\n      maskId = getRandomString(6);\n      maskCode = `<mask id=\"${maskId}\" x={0} y={0} width={${parseInt(\n        viewBox[2],\n        10\n      )}} height={${parseInt(viewBox[3], 10)}}>\n      ${maskPathCode}\n      </mask>`;\n    }\n\n    if (gradientCode || maskCode) {\n      defsCode = `<defs>\n    ${gradientCode}\n    ${maskCode}\n    </defs>`;\n    }\n    return {\n      code: defsCode,\n      gradId,\n      maskId,\n    };\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    json.props.viewBox = json.props.viewBox\n      .split(' ')\n      .map((v: string) => Math.round(parseFloat(v) * 100) / 100)\n      .join(' ');\n    delete json.props.gradientImage;\n    this.context.styles[json.styleName] = {\n      style: json.props.style,\n      layerName: layerNameMap[json.import.layerName],\n    };\n    const { viewBox, style, points, isClosed, ...pathProps } = json.props;\n    const svgPath = generateSVGPath(\n      points,\n      json.props.strokeWidth || 0,\n      isClosed,\n      viewBox\n    );\n    const pathJson = { ...json, props: { ...pathProps, d: svgPath } };\n    const svgJson = { ...json, props: { viewBox, style } };\n\n    const { gradId, maskId, code: defsCode } = this.generateDefs(json);\n\n    if (gradId) {\n      pathJson.props.fill = `url(#${gradId})`;\n    }\n    if (maskId) {\n      pathJson.props.mask = `url(#${maskId})`;\n    }\n\n    return `<svg ${this.generateProps(\n      svgJson,\n      extraParams\n    )} style={${this.generateJSLiteralCode(json.props.style, extraParams)}} >\n    ${defsCode}\n    <path ${this.generateProps(pathJson, extraParams)}>\n      ${generateChildren(json, this.context.baseCodeGen.generate, {\n        parent: json,\n      })}\n    </path>\n    </svg>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport LayerCodeGen from '../LayerCodeGen';\n\nexport default class ExpressionStatementCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  getCondtionalASTFromJSON(conditionJSON: any, fileId: string): any {\n    //\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    return this.context.baseCodeGen.generate(json.expression, {\n      ...extraParams,\n      textLiteral: true,\n    });\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { generateChildren, addImportToContext } from '../utils';\nexport default class BinaryExpressionCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  getCondtionalASTFromJSON(conditionJSON: any, fileId: string): any {\n    //\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    // console.log(\"In binary expression is \", json);\n    if (json.left.expression === 'platform') {\n      // console.log(\"Hanji hai expression to binary\");\n      this.context.isPlatformConditional = true;\n    }\n    if (extraParams && extraParams.textLiteral) {\n      extraParams.textLiteral = false;\n    }\n    // addImportToContext(this.context, {\n    //   import: {\n    //     isDefaultImport: false,\n    //     layerName: \"Platform\",\n    //     packageName: \"react-native\"\n    //   }\n    // });\n    return `\n      ${this.context.baseCodeGen.generate(json.left, extraParams)}\n        ${json.operator}\n        ${this.context.baseCodeGen.generate(json.right, extraParams)}\n      `;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren, addImportToContext } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\n\nexport default class ExpressionCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  getCondtionalASTFromJSON(conditionJSON: any, fileId: string): any {\n    //\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    // console.log(\"In expression code gen with json as \", json);\n    let expression = json.expression;\n    // console.log(\"Expression in expression statement is \", expression);\n    if (expression !== 'platform' && expression.indexOf('.') === -1) {\n      this.context.conditionals.push(expression);\n    }\n    if (expression === 'platform') {\n      this.context.isPlatformConditional = true;\n\n      // addImportToContext(this.context, {\n      //   import: {\n      //     isDefaultImport: false,\n      //     layerName: \"Platform\",\n      //     packageName: \"react-native\"\n      //   }\n      // });\n\n      expression = 'Platform.OS';\n    }\n    // console.log(\"Context in expression\", this.context);\n\n    return this.generateJSLiteralCode(expression, extraParams, true);\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport LayerCodeGen from '../LayerCodeGen';\n\nexport default class ConditionalExpressionCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  getCondtionalASTFromJSON(conditionJSON: any, fileId: string): any {\n    //\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    return `${this.context.baseCodeGen.generate(json.test, {\n      ...extraParams,\n      textLiteral: false,\n    })} ?\n    ${this.context.baseCodeGen.generate(json.consequent, {\n      ...extraParams,\n      textLiteral: true,\n    })} : ${this.context.baseCodeGen.generate(json.alternate, {\n      ...extraParams,\n      textLiteral: true,\n    })}`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport LayerCodeGen from '../LayerCodeGen';\n\nexport default class LogicalExpressionCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  getCondtionalASTFromJSON(conditionJSON: any, fileId: string): any {\n    //\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    if (extraParams && extraParams.textLiteral) {\n      extraParams.textLiteral = false;\n    }\n    let leftExp = this.context.baseCodeGen.generate(json.left, extraParams);\n    if (leftExp.indexOf('this.props') !== -1) {\n      leftExp = leftExp.replace('this.props', 'props');\n    }\n    const rightExp = this.context.baseCodeGen.generate(json.right, {\n      ...extraParams,\n      textLiteral: true,\n    });\n\n    return `\n      (${leftExp})\n      ${json.operator}\n        (${rightExp})\n      `;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { addImportToContext } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\n\nexport default class LoopCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    addImportToContext(this.context, {\n      import: {\n        isDefaultImport: false,\n        layerName: 'times',\n        packageName: 'lodash',\n      },\n    });\n    return ` {times(${\n      json.template.repetitions\n    }, () =>  ${this.context.baseCodeGen.generate(\n      json.children[0],\n      extraParams\n    )})}`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport pascalCase from 'pascal-case';\nimport { layerNameMap } from '../constants';\nimport { updateWrapperStyleName } from '../../utils';\n\nexport default class WrapperCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    const childrenCode = generateChildren(\n      json,\n      this.context.baseCodeGen.generate,\n      {\n        parent: json,\n      }\n    );\n\n    if (json.type === 'row' || json.type === 'column') {\n      json.props.style.display = 'flex';\n    }\n\n    updateWrapperStyleName(json, extraParams);\n\n    this.context.styles[json.styleName] = {\n      style: json.props.style,\n      layerName: layerNameMap[json.import.layerName],\n    };\n    return `<${pascalCase(json.styleName)} ${this.generateProps(\n      json,\n      extraParams\n    )}>\n      ${childrenCode}\n      </${pascalCase(json.styleName)}>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport pascalCase from 'pascal-case';\nimport { layerNameMap } from '../constants';\n\nexport default class InlineViewCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n\n  generate(json: any, extraParams: ExtraParams): string {\n    return `<div ${this.generateProps(\n      json,\n      extraParams\n    )} style={${this.generateJSLiteralCode(json.props.style, extraParams)}}>\n      ${generateChildren(json, this.context.baseCodeGen.generate, {\n        parent: json,\n      })}\n      </div>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport {\n  generateChildren,\n  addImportToContext,\n  getCurrentFamily,\n} from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\n// const pascalCase = require(\"pascal-case\");\n\nexport default class IconCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n  generate(json: any, extraParams: ExtraParams): string {\n    this.context.styles[json.styleName] = {\n      style: json.props.style,\n      layerName: 'ThirdParty',\n    };\n    // let layerSpecificStyles = \"\";\n    let styles = {};\n    if (json.props.type !== 'Zocial') {\n      styles = {\n        height: json.props.style.fontSize ? json.props.style.fontSize : 40,\n        width: json.props.style.fontSize ? json.props.style.fontSize : 40,\n      };\n    }\n\n    let { type, name, ...remainingProps } = json.props;\n\n    // let iconClass = \"\";\n    // let value = undefined;\n    addImportToContext(this.context, json, this.generateJSLiteralCode);\n\n    // const propsCode = this.generateProps(json, extraParams);\n    // let materialChildCode = \"\";\n    // let tagName = `${json.props.type}${pascalCase(json.styleName)} `;\n    let currentFamily = getCurrentFamily(json, this.generateJSLiteralCode);\n    if (json.props.type) {\n      delete json.props.type;\n    }\n    return `<${currentFamily}Icon ${this.generateProps(\n      json,\n      extraParams\n    )} style={${this.generateJSLiteralCode(json.props.style, extraParams)}}>\n    ${generateChildren(json, this.context.baseCodeGen.generate, {\n      parent: json,\n    })}\n    </${currentFamily}Icon>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren, addImportToContext } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\n\nexport default class LoaderCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n  generate(json: any, extraParams: ExtraParams): string {\n    this.context.styles[json.styleName] = {\n      style: json.props.style,\n      layerName: 'ThirdParty',\n    };\n    addImportToContext(this.context, json);\n    return `<CircularProgress style={${this.generateJSLiteralCode(\n      json.props.style,\n      extraParams\n    )}}>\n        ${generateChildren(json, this.context.baseCodeGen.generate, {\n          parent: json,\n        })}\n        </CircularProgress>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren, addImportToContext } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { layerNameMap } from '../constants';\nconst pascalCase = require('pascal-case');\n\nexport default class MapCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n  generate(json: any, extraParams: ExtraParams): string {\n    addImportToContext(this.context, json);\n    this.context.styles[json.styleName] = {\n      style: json.props.style,\n      layerName: 'div',\n    };\n    let mapStyle =\n      this.context.mapDuplicate.lastNumber === 1\n        ? 'GoogleMapReact'\n        : `GoogleMapReact${this.context.mapDuplicate.lastNumber}`;\n    return `<${pascalCase(json.styleName)}  >\n          <${mapStyle}\n          bootstrapURLKeys={{key:\"YOUR_API_KEY\"}}\n          defaultZoom={4}\n          ${this.generateProps(json, extraParams)}\n          />\n          ${generateChildren(json, this.context.baseCodeGen.generate, {\n            parent: json,\n          })}\n        </${pascalCase(json.styleName)}>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { addImportToContext } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\n\nexport default class SliderCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n  generate(json: any, extraParams: ExtraParams): string {\n    this.context.styles[json.styleName] = {\n      style: json.props.style,\n      layerName: 'ThirdParty',\n    };\n\n    addImportToContext(this.context, json);\n    Object.assign(json.props, {\n      min: json.props.minimumValue ? json.props.minimumValue : '0',\n    });\n    Object.assign(json.props, {\n      max: json.props.maximumValue ? json.props.maximumValue : '100',\n    });\n    delete json.props.minimumValue;\n    delete json.props.maximumValue;\n    return `<Slider defaultValue={50} style={${this.generateJSLiteralCode(\n      json.props.style,\n      extraParams\n    )}}/>`;\n  }\n}\n","import { Context, ExtraParams } from '../types';\nimport { generateChildren, addImportToContext } from '../utils';\nimport LayerCodeGen from '../LayerCodeGen';\nimport { layerNameMap } from '../constants';\nconst pascalCase = require('pascal-case');\n\nexport default class SwitchCodeGen extends LayerCodeGen {\n  context: Context;\n  constructor(context: Context) {\n    super();\n    this.context = context;\n  }\n  generate(json: any, extraParams: ExtraParams): string {\n    this.context.styles[json.styleName] = {\n      style: json.props.style,\n      layerName: layerNameMap[json.import.layerName],\n      category: 'switch',\n    };\n    let {\n      onTintColor,\n      tintColor,\n      value,\n      thumbTintColor,\n      ...remainingProps\n    } = json.props;\n    json.props = {\n      ...remainingProps,\n      checked: json.props.value,\n    };\n    let tag =\n      this.context.switchDuplicate.lastNumber === 1\n        ? 'MaterialUISwitch'\n        : `MaterialUISwitch${this.context.switchDuplicate.lastNumber}`;\n    addImportToContext(this.context, json);\n    return `<${pascalCase(json.styleName)}>\n  <${tag}  color=\"primary\" ${this.generateProps(json, extraParams)} ${\n      thumbTintColor ? `style={{color:\"${thumbTintColor}\"}}` : ''\n    } >\n  ${generateChildren(json, this.context.baseCodeGen.generate, { parent: json })}\n   </${tag}>\n   </${pascalCase(json.styleName)}>`;\n  }\n}\n","import { entries, get } from 'lodash';\nimport { Context, ExtraParams } from './types';\nimport LayerCodeGen from './LayerCodeGen';\nimport DivCodeGen from './layers/DivCodeGen';\nimport CenterCodeGen from './specialLayers/CenterCodeGen';\nimport FileCodeGen from './layers/FileCodeGen';\nimport LiteralCodeGen from './specialLayers/LiteralCodeGen';\nimport TextCodeGen from './layers/TextCodeGen';\nimport ImageCodeGen from './layers/ImageCodeGen';\nimport EllipseCodeGen from './layers/EllipseCodeGen';\nimport ScrollViewCodeGen from './layers/ScrollViewCodeGen';\nimport SymbolLayerCodeGen from './layers/SymbolLayerCodeGen';\nimport TextInputCodeGen from './layers/TextInputCodeGen';\nimport ButtonCodeGen from './layers/ButtonCodeGen';\nimport PathCodeGen from './layers/PathCodeGen';\nimport ExpressionStatementCodeGen from './specialLayers/ExpressionStatementCodeGen';\nimport BinaryExpressionCodeGen from './specialLayers/BinaryExpressionCodeGen';\nimport ExpressionCodeGen from './specialLayers/ExpressionCodeGen';\nimport ConditionalExpressionCodeGen from './specialLayers/ConditionalExpressionCodeGen';\nimport LogicalExpressionCodeGen from './specialLayers/LogicalExpressionCodeGen';\nimport LoopCodeGen from './layers/LoopCodeGen';\nimport WrapperCodeGen from './layers/WrapperCodeGen';\nimport InlineViewCodeGen from './layers/InlineViewCodeGen';\nimport {\n  traverseLayersForStyleName,\n  jsonHasButtonLayer,\n  addFlexValuesForScrollViewChildren,\n} from './utils';\nimport IconCodeGen from './layers/IconCodeGen';\nimport LoaderCodeGen from './layers/LoaderCodeGen';\nimport MapCodeGen from './layers/MapCodeGen';\nimport SliderCodeGen from './layers/SliderCodeGen';\nimport SwitchCodeGen from './layers/SwitchCodeGen';\nimport { getRotation } from '../utils';\n\nexport default class BaseCodeGen extends LayerCodeGen {\n  context: Context = {\n    styles: {},\n    imports: {\n      react: {\n        named: ['Component'],\n        default: 'React',\n        cssFile: undefined,\n      },\n      'styled-components': {\n        named: ['css'],\n        default: 'styled',\n        cssFile: undefined,\n      },\n    },\n    filePath: '',\n    conditionals: [],\n    isPlatformConditional: false,\n    fileHasTabView: false,\n    baseCodeGen: this,\n    smartFlexTransformed: false,\n    switchDuplicate: {\n      isDuplicate: false,\n      lastNumber: 1,\n    },\n    mapDuplicate: {\n      isDuplicate: false,\n      lastNumber: 1,\n    },\n    buttonDuplicate: {\n      isDuplicate: false,\n      lastNumber: 1,\n      exists: false,\n      codeGenerated: false,\n    },\n  };\n\n  componentCodeGenMap = new Map<string, any>(\n    entries({\n      view: DivCodeGen,\n      root: DivCodeGen,\n      file: FileCodeGen,\n      text: TextCodeGen,\n      image: ImageCodeGen,\n      ellipse: EllipseCodeGen,\n      scrollView: ScrollViewCodeGen,\n      symbol: SymbolLayerCodeGen,\n      textInput: TextInputCodeGen,\n      touchableOpacity: ButtonCodeGen,\n      path: PathCodeGen,\n      literal: LiteralCodeGen,\n      // thirdParty: ThirdPartyCodeGen,\n      icon: IconCodeGen,\n      activityIndicator: LoaderCodeGen,\n      mapView: MapCodeGen,\n      slider: SliderCodeGen,\n      switch: SwitchCodeGen,\n      expressionStatement: ExpressionStatementCodeGen,\n      binaryExpression: BinaryExpressionCodeGen,\n      expression: ExpressionCodeGen,\n      conditionalExpression: ConditionalExpressionCodeGen,\n      logicalExpression: LogicalExpressionCodeGen,\n      loop: LoopCodeGen,\n      stack: WrapperCodeGen,\n      row: WrapperCodeGen,\n      column: WrapperCodeGen,\n      body: WrapperCodeGen,\n      flexFiller: WrapperCodeGen,\n      inlineView: InlineViewCodeGen,\n    })\n  );\n\n  generate = (json: any, extraParams: ExtraParams) => {\n    if (json.type === 'file') {\n      this.context.buttonDuplicate.exists = false;\n      traverseLayersForStyleName(json.layer, this.context);\n      jsonHasButtonLayer(json.layer, this.context);\n    }\n    addFlexValuesForScrollViewChildren(extraParams, json);\n    let lastSlash = this.context.filePath.lastIndexOf('/');\n    let fileName = this.context.filePath.substring(\n      lastSlash + 1,\n      this.context.filePath.length - 3\n    );\n    if (json.styleName) {\n      if (json.styleName.toLowerCase() === fileName.toLowerCase()) {\n        json.styleName = `${json.styleName}Style`;\n      }\n    }\n\n    const LayerCodeGenClass = this.componentCodeGenMap.get(json.type);\n    if (json.type === 'statusBar') {\n      return '';\n    }\n    if (json.props) {\n      if (\n        json.props.style.hasOwnProperty('borderWidth') &&\n        !json.props.style.hasOwnProperty('borderStyle')\n      ) {\n        json.props.style = { ...json.props.style, borderStyle: 'solid' };\n      }\n\n      if (\n        json.props.style['position'] === 'absolute' &&\n        get(extraParams, 'parent.type') !== 'root' &&\n        get(extraParams, 'parent.props.style') &&\n        !get(extraParams, 'parent.props.style.position')\n      ) {\n        extraParams.parent.props.style.position = 'relative';\n      }\n\n      if (\n        get(json, 'props.style.position') !== 'absolute' &&\n        get(extraParams, 'parent.props.style')\n      ) {\n        extraParams.parent.props.style.display = 'flex';\n      }\n    }\n\n    let opacity = get(json, 'props.style.opacity', undefined);\n    if (opacity === 1) {\n      delete json.props.style.opacity;\n    }\n\n    let borderRadius = get(json, 'props.style.borderRadius', undefined);\n    if (borderRadius === 0) {\n      delete json.props.style.borderRadius;\n    }\n\n    let transform = get(json, 'props.style.transform', undefined);\n    if (transform) {\n      const rotation = getRotation(transform);\n      if (rotation) {\n        json.props.style.transform = `rotate(${rotation.toFixed(2)}deg)`;\n      } else {\n        delete json.props.style.transform;\n      }\n    }\n\n    // Deleting source_local field for image layer\n    // source_local to store local image url\n    let sourceLocal = get(json, 'props.source_local', undefined);\n    if (sourceLocal) {\n      delete json.props.source_local;\n    }\n\n    console.log(json, 'json here');\n    if (\n      get(json, 'template.centerVertical') ||\n      get(json, 'template.centerHorizontal')\n    ) {\n      const centerCodeGen = new CenterCodeGen(this.context);\n      centerCodeGen.config = this.config;\n      return centerCodeGen.generate(json, extraParams);\n    }\n    if (LayerCodeGenClass) {\n      const layerCodeGen = new LayerCodeGenClass(this.context);\n      layerCodeGen.config = this.config;\n      return layerCodeGen.generate(json, extraParams);\n    } else {\n      console.error(json.type + ' layer not handled');\n    }\n\n    return '';\n  };\n}\n","import BaseCodeGen from './BaseCodeGen';\nimport prettier from 'prettier/standalone';\nimport prettierBabylon from 'prettier/parser-babylon';\nimport Engine from '../types/Engine';\nimport { Config } from './types';\nimport { forEach } from 'lodash';\nimport * as path from 'path';\n\nexport default class ReactEngine implements Engine {\n  static engineName = 'react';\n  getFileCode(fileJSON: any, config: Config) {\n    // console.log(fileJSON, \"codeengine*\");\n    const baseCodeGen = new BaseCodeGen();\n    baseCodeGen.config = config;\n    let code = baseCodeGen.generate(fileJSON, { parent: fileJSON });\n    // TODO: Temporary Fix in case if this.props is still present in the code\n    code = code.replace(/this.props/g, 'props');\n    code = prettier.format(code, {\n      plugins: [prettierBabylon],\n      parser: 'babylon',\n    });\n\n    return code;\n  }\n  getAppFiles(files: { artboards: string[]; assets: string[] }) {\n    let router = '';\n    let imports = '';\n    forEach(files.artboards, (artboard: any, index: number) => {\n      if (index === 0) {\n        router += `<Route path=\"/\" exact component={${artboard}} />`;\n      }\n      router += `<Route path=\"/${artboard +\n        '/'}\" exact component={${artboard}} />`;\n\n      imports += `import ${artboard} from \"./screens/${artboard}\";`;\n    });\n\n    const appJSCode = `import React from \"react\";\n    import { BrowserRouter as Router, Route } from \"react-router-dom\";\n    import \"./icons.js\";\n    ${imports}\n    ${files.assets.length > 0 ? `import \"./style.css\";` : ''}\n\n    function App() {\n      return (\n        <Router>\n          <div>\n            ${router}\n         </div>\n        </Router>\n      );\n    }\n\n    export default App;`;\n\n    let styleCSSCode = ``;\n    forEach(files.assets, (asset: any) => {\n      const fontName = path.basename(asset, path.extname(asset));\n      styleCSSCode += `@font-face {\n        font-family: \"${fontName}\";\n        src: url(\"${asset.replace('/src', '.')}\") format(\"truetype\");\n      }\\n`;\n    });\n\n    return [\n      {\n        path: '/src/App.js',\n        content: prettier.format(appJSCode, {\n          plugins: [prettierBabylon],\n          parser: 'babylon',\n        }),\n      },\n      {\n        path: '/src/style.css',\n        content: styleCSSCode,\n      },\n    ];\n  }\n  getIndexWithFont(assets: string[]) {\n    const indexFileCode = `import React from \"react\";\n    import \"./style.css\";\n    import Index from \"./index.js\";\n    function IndexWithFont() {\n      return (\n        <Index/>\n      );\n    }\n    export default IndexWithFont;`;\n\n    let styleCSSCode = ``;\n    forEach(assets, (asset: any) => {\n      const fontName = path.basename(asset, path.extname(asset));\n\n      let type = path.extname(asset).substr(1);\n      if (type === 'ttf') {\n        type = 'truetype';\n      }\n\n      styleCSSCode += `@font-face {\n        font-family: \"${fontName}\";\n        src: url(\".${asset}\") format(\"${type}\");\n      }\\n`;\n    });\n\n    return [\n      {\n        path: './indexWithFont.js',\n        content: prettier.format(indexFileCode, {\n          plugins: [prettierBabylon],\n          parser: 'babylon',\n        }),\n      },\n      {\n        path: './style.css',\n        content: styleCSSCode,\n      },\n    ];\n  }\n}\n","export const packageJSON = {\n  name: 'bx-app',\n  version: '0.1.0',\n  private: true,\n  dependencies: {\n    '@material-ui/core': '^4.2.1',\n    'google-map-react': '^1.1.4',\n    'material-ui-slider': '^3.0.8',\n    'pure-react-carousel': '^1.21.1',\n    react: '^16.8.6',\n    'react-dom': '^16.8.6',\n    'react-list': '^0.8.11',\n    'react-router-dom': '^5.0.1',\n    'react-scripts': '3.0.1',\n    'styled-components': '^4.3.2',\n    'react-app-rewired': '2.1.3',\n    'react-native-vector-icons': '6.6.0',\n    'react-native-web': '0.11.7',\n  },\n  scripts: {\n    start: 'react-app-rewired start',\n    build: 'react-app-rewired build',\n    test: 'react-app-rewired test',\n    eject: 'react-app-rewired eject',\n  },\n  eslintConfig: {\n    extends: 'react-app',\n  },\n  browserslist: {\n    production: ['>0.2%', 'not dead', 'not op_mini all'],\n    development: [\n      'last 1 chrome version',\n      'last 1 firefox version',\n      'last 1 safari version',\n    ],\n  },\n};\n\nexport const appTestJS = `import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nit('renders without crashing', () => {\n  const div = document.createElement('div');\n  ReactDOM.render(<App />, div);\n  ReactDOM.unmountComponentAtNode(div);\n});\n`;\n\nexport const indexJS = `import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n`;\n\nexport const indexCSS = `body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n    \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\",\n    monospace;\n}`;\n\nexport const publicManifest = {\n  short_name: 'React App',\n  name: 'Create React App Sample',\n  icons: [\n    {\n      src: 'favicon.ico',\n      sizes: '64x64 32x32 24x24 16x16',\n      type: 'image/x-icon',\n    },\n  ],\n  start_url: '.',\n  display: 'standalone',\n  theme_color: '#000000',\n  background_color: '#ffffff',\n};\n\nexport const serviceWorkerJSContent =\n  `// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (` +\n  'process.env.NODE_ENV === \"production\"' +\n  `&& 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = \"./service-worker.js\";\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}`;\n\nexport const indexHTML = `<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"shortcut icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <link\n      href=\"https://unpkg.com/ionicons@4.5.10-1/dist/css/ionicons.min.css\"\n      rel=\"stylesheet\"\n    />\n    <link\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/entypo/2.0/entypo-social.eot\"\n      rel=\"stylesheet\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n    />\n    <link\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\"\n    />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdn.jsdelivr.net/npm/evil-icons@1.9.0/assets/evil-icons.min.css\"\n    />\n    <script src=\"https://cdn.jsdelivr.net/npm/evil-icons@1.9.0/assets/evil-icons.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js\"></script>\n    <link\n      rel=\"stylesheet\"\n      type=\"text/css\"\n      href=\"//at.alicdn.com/t/font_o5hd5vvqpoqiwwmi.css\"\n    />\n    <link\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/octicons/4.4.0/font/octicons.min.css\"\n      rel=\"stylesheet\"\n    />\n    <link\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/simple-line-icons/2.4.1/css/simple-line-icons.css\"\n      rel=\"stylesheet\"\n    />\n    <link\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/css-social-buttons/1.3.0/css/zocial.css\"\n      rel=\"stylesheet\"\n    />\n    <link\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/material-design-icons/3.0.1/iconfont/material-icons.min.css\"\n      rel=\"stylesheet\"\n    />\n    <script src=\"https://code.iconify.design/1/1.0.2/iconify.min.js\"></script>\n    <link\n      href=\"https://cdn.materialdesignicons.com/3.6.95/css/materialdesignicons.min.css\"\n      rel=\"stylesheet\"\n    />\n    <link\n      href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      rel=\"stylesheet\"\n    />\n    <!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the \"public\" folder during the build.\n      Only files inside the \"public\" folder can be referenced from the HTML.\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running \"npm run build\".\n    -->\n    <title>React App</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n      To begin the development, run \"npm start\" or \"yarn start\".\n      To create a production bundle, use \"npm run build\" or \"yarn build\".\n    -->\n  </body>\n</html>\n`;\nexport const gitIgnoreContent = `# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n\n# dependencies\n/node_modules\n/.pnp\n.pnp.js\n\n# testing\n/coverage\n\n# production\n/build\n\n# misc\n.DS_Store\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local\n\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n`;\n// tslint:disable: max-line-length\nexport const componentReadme = `This component was created with [BuilderX](https://cloud.builderx.io/).\n\n## BuilderX uses third party libraries for some of the react components such as\n\n\\`\\`\\`\n@material-ui/core@4.2.1\ngoogle-map-react@1.1.4\nmaterial-ui-slider@3.0.8\npure-react-carousel@1.21.1\nreact-list@0.8.11\nreact-router-dom@5.0.1\nstyled-components@4.3.2\nreact-native-vector-icons\n\\`\\`\\`\n\nYou can add these packages by running \\`yarn add [packageName]\\` or \\`npm install [packageName]\\`\n\n## Please add the extracted component folder in your project and import the component folder.\n\nEg import Component from \\`[folder path]\\`\n\n**Note: You might need to load custom fonts that has been used in the component. Font files are available in the \\`assets/fonts\\` folder.**\n\n- Create style.css at the root of you project\n- Add each font like this\n\n\\`\\`\\`\n@font-face {\n  font-family: <fontName>;\n  src: url(<relative-path-to-font-file>) format(<file-format>);\n}\n\\`\\`\\`\n\n- import style.css in your index.js file\n`;\n\nexport const projectReadme = `This project was created with [BuilderX](https://builderx.io/).\n\n## BuilderX uses third party libraries for some of the react components such as\n\n\\`\\`\\`\n@material-ui/core@4.2.1\ngoogle-map-react@1.1.4\nmaterial-ui-slider@3.0.8\nreact-router-dom@5.0.1\nstyled-components@4.3.2\nreact-native-vector-icons\n\\`\\`\\`\n\nThese packages are included as dependencies in package.json file.\n\n## Steps to run project\n\nIn the project directory, you can run:\n\n### \\`yarn\\` or \\`npm install\\`\n\nThis will add the dependencies required to run the project.\n\n### \\`yarn start\\` or \\`npm start\\`\n\nThis will start the project.\n`;\n\nexport const favicon = `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`;\nexport const projectConfig = `const path = require(\"path\");\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function override(config, env) {\n  config.module.rules.push({\n    test: /\\.ttf$/,\n    loader: \"file-loader\",\n    include: path.resolve(__dirname, \"./static/media/[name].[ext]\")\n  });\n\n  return config;\n};\n`;\nexport const iconsJS = `/* eslint-disable camelcase */\nimport FontAwesome_ttf from \"react-native-vector-icons/Fonts/FontAwesome.ttf\";\nimport Entypo_ttf from \"react-native-vector-icons/Fonts/Entypo.ttf\";\nimport Octicons_ttf from \"react-native-vector-icons/Fonts/Octicons.ttf\";\nimport SimpleLineIcons_ttf from \"react-native-vector-icons/Fonts/SimpleLineIcons.ttf\";\nimport MaterialIcons_ttf from \"react-native-vector-icons/Fonts/MaterialIcons.ttf\";\nimport EvilIcons_ttf from \"react-native-vector-icons/Fonts/EvilIcons.ttf\";\nimport Feather_ttf from \"react-native-vector-icons/Fonts/Feather.ttf\";\nimport Ionicons_ttf from \"react-native-vector-icons/Fonts/Ionicons.ttf\";\nimport MaterialCommunityIcons_ttf from \"react-native-vector-icons/Fonts/MaterialCommunityIcons.ttf\";\nconst IconsCSS = \\`\n@font-face {\n  src: url(\\${FontAwesome_ttf});\n  font-family: FontAwesome;\n}\n@font-face {\n  src: url(\\${Entypo_ttf});\n  font-family: Entypo;\n}\n@font-face {\n  src: url(\\${Octicons_ttf});\n  font-family: Octicons;\n}\n@font-face {\n  src: url(\\${SimpleLineIcons_ttf});\n  font-family: SimpleLineIcons;\n}\n@font-face {\n  src: url(\\${MaterialIcons_ttf});\n  font-family: MaterialIcons;\n}\n@font-face {\n  src: url(\\${EvilIcons_ttf});\n  font-family: EvilIcons;\n}\n@font-face {\n  src: url(\\${Feather_ttf});\n  font-family: Feather;\n}\n@font-face {\n  src: url(\\${Ionicons_ttf});\n  font-family: Ionicons;\n}\n@font-face {\n  src: url(\\${MaterialCommunityIcons_ttf});\n  font-family: MaterialCommunityIcons;\n}\n\\`;\n\nconst style = document.createElement(\"style\");\nstyle.type = \"text/css\";\nif (style.styleSheet) style.styleSheet.cssText = IconsCSS;\nelse style.appendChild(document.createTextNode(IconsCSS));\n\ndocument.head.appendChild(style);\n`;\n","import ReactEngine from '../react/ReactEngine';\nimport * as CRAFiles from './../CRAFiles';\n\nclass ReactCodeEngine {\n  reactEngine: ReactEngine = new ReactEngine();\n\n  constructor() {}\n  meta: any = {\n    name: 'React',\n    displayName: 'React',\n    icon:\n      'https://pre-cloud.builderx.io/assets/plugins/component/icons/React.svg',\n  };\n  execute: any = (fileJSON: any, config: any) => {\n    return this.reactEngine.getFileCode(fileJSON, config);\n  };\n\n  getFiles: any = () => {\n    return CRAFiles;\n  };\n\n  getFilesToWrite: any = () => {\n    const filesMap = new Map();\n\n    filesMap.set('/package.json', {\n      content: JSON.stringify(CRAFiles.packageJSON, null, 2),\n    });\n    filesMap.set('/.gitignore', { content: CRAFiles.gitIgnoreContent });\n    filesMap.set('/src/serviceWorker.js', {\n      content: CRAFiles.serviceWorkerJSContent,\n    });\n    filesMap.set('/src/index.js', { content: CRAFiles.indexJS });\n    filesMap.set('/src/index.css', { content: CRAFiles.indexCSS });\n    filesMap.set('/src/App.test.js', { content: CRAFiles.appTestJS });\n    filesMap.set('/public/index.html', { content: CRAFiles.indexHTML });\n    filesMap.set(\n      '/public/manifest.json',\n      JSON.stringify(CRAFiles.publicManifest, null, 2)\n    );\n    filesMap.set('/public/favicon.ico', {\n      content: CRAFiles.favicon,\n      config: {\n        base64: true,\n      },\n    });\n    filesMap.set('/config-overrides.js', { content: CRAFiles.projectConfig });\n    filesMap.set('/src/icons.js', { content: CRAFiles.iconsJS });\n    filesMap.set('/README.md', { content: CRAFiles.projectReadme });\n\n    return filesMap;\n  };\n  writeFiles: any = (zip: any) => {\n    zip.file('/package.json', JSON.stringify(CRAFiles.packageJSON, null, 2));\n    zip.file('/.gitignore', CRAFiles.gitIgnoreContent);\n    zip.file('/src/serviceWorker.js', CRAFiles.serviceWorkerJSContent);\n    zip.file('/src/index.js', CRAFiles.indexJS);\n    zip.file('/src/index.css', CRAFiles.indexCSS);\n    zip.file('/src/App.test.js', CRAFiles.appTestJS);\n    zip.file('/public/index.html', CRAFiles.indexHTML);\n    zip.file(\n      '/public/manifest.json',\n      JSON.stringify(CRAFiles.publicManifest, null, 2)\n    );\n    zip.file('/public/favicon.ico', CRAFiles.favicon, { base64: true });\n    zip.file('/config-overrides.js', CRAFiles.projectConfig);\n    zip.file('/src/icons.js', CRAFiles.iconsJS);\n    zip.file('/README.md', CRAFiles.projectReadme);\n  };\n}\n\nexport default class ReactCodeGen {\n  name = 'ReactCodeGen';\n  session: any;\n  init(session: any) {\n    this.session = session;\n  }\n  activate() {\n    const codeEngine = new ReactCodeEngine();\n    this.session.addCodeEngine(codeEngine);\n  }\n\n  deactivate() {}\n\n  logSession() {\n    this.session.executeFunction('logSession');\n  }\n}\n"],"names":["switchHighestNumber","mapHighestNumber","generateChildren","layer","generateChildCallback","extraParams","childrenCode","children","forEach","child","includes","type","styleName","indexOf","addImportToContext","context","layerJSON","generateJSLiteralCode","layerName","packageName","currentFamily","getCurrentFamily","filePath","mapDuplicate","lastNumber","isDefaultImport","imports","named","cssFile","switchDuplicate","contextImportObj","push","anyChildIsFlex","hasFlexChild","props","style","flex","jsonHasButtonLayer","get","buttonDuplicate","exists","length","traverseLayersForStyleName","startsWith","followedString","substring","isNaN","currentNumber","Number","doesNumberExist","conditionalStatement","families","i","category","num","compareWith","toLowerCase","hasPositionProperty","undefined","hasAbsolutePosition","styles","position","layerHasAbsoluteChild","hasAbsoluteChild","addFlexValuesForScrollViewChildren","json","parent","parentStyles","display","layerNameMap","View","TouchableOpacity","Ellipse","Icon","Image","ReactList","GoogleMapReact","Path","ScrollView","Switch","TabView","Text","TextInput","Picker","ROUNDABLE_LAYOUT_PROPERTIES","ROUNDABLE_TO_TWO_DECIMALS_LAYOUT_PROPERTIES","pascalCase","require","toStyleString","string","flexProperties","LayerCodeGen","propsCode","propValue","propName","replace","longitude","latitudeDelta","longitudeDelta","Object","assign","lat","lng","_this","baseCodeGen","generate","generateSourcePropCode","path","uri","isTabViewSpecificStyleProp","round","prop","stylePropName","conditionalStyles","styleValue","styleProperty","keys","conditionalStyleObjCode","code","literal","element","key","fontFamily","styleCode","generateStyleCode","codeGenerated","jsExpression","literalType","Array","isArray","generateJSObjectCode","generateJSArrayCode","String","obj","hasOwnProperty","boxShadow","shadowOffset","width","height","shadowRadius","shadowOpacity","shadowColor","elevation","value","Math","numValue","parseFloat","imageName","assetsRelativePath","this","config","isPreviewFile","flexStyles","flexDirection","flexValue","res","index","hasFlex","passVal","styleProperties","split","generateSymbolOverrideProps","scopeVariables","_this2","DivCodeGen","gradient","gradientString","palette","vector","colors","stops","data","stopColor","to","from","x","y","angleDeg","atan2","PI","realLocations","offset","colorStrings","map","color","join","gradientType","dist","sqrt","maxDist","radialColorStrings","getGradient","getGradientString","backgroundImage","backgroundColor","gradientImage","generateProps","stylesWithoutOpacity","smartFlexTransformed","restStyles","tag","isEmpty","CenterCodeGen","generateCenterProps","template","centerVertical","centerHorizontal","center","getRandomString","text","possible","charAt","floor","random","isSymbolFile","getRotation","transform","rotation","transformValue","findIndex","item","isNil","slice","FileCodeGen","generateStyleNames","generateStyleComponentCode","generateConditionalVariables","conditionalVariables","conditionals","generateImports","importsCode","importObj","defaultImportCode","namedImportsCode","name","asName","containerHasDefaultStyles","layersCode","className","lastIndexOf","stylesCode","isPlatformConditional","fileHasTabView","LiteralCodeGen","textLiteral","trim","escape","RegExp","TextCodeGen","fontPostscriptName","console","log","getRadiusAdjustment","pointsArray","currentIndex","nextIndex","maxRadius","radius","cornerRadius","x0","point","y0","x1","y1","angle","cos","sin","generateSVGPath","strokeWidthOffset","isClosed","viewBox","generatedPath","dims","min","initialIndex","d1","xy0","toFixed","getNextPathPoint","isFillerCondition","curveMode","pointTo","radiusPoint","d2","px0","py0","px","py","curveFromPoint","curveFrom","curveFromX","curveFromY","curveTo","curveToX","curveToY","hasCurveTo","hasCurveFrom","ImageCodeGen","generateDefs","maskId","maskCode","defsCode","mask","svgJson","source","svgDims","objectFit","resizeMode","pathName","backgroundSize","EllipseCodeGen","v","ellipseJson","ScrollViewCodeGen","horizontal","SymbolLayerCodeGen","tagName","TextInputCodeGen","textInputStyles","background","border","textBreakStrategy","restProps","placeholder","placeholderTextColor","selectionColor","underlineColorAndroid","blurOnSubmit","caretHidden","editable","multiline","secureTextEntry","disableFullscreenUI","clearTextOnFocus","enablesReturnKeyAutomatically","keyboardType","returnKeyType","autoCapitalize","ButtonCodeGen","suffix","navigateTo","buttonStyles","getButtonTag","PathCodeGen","gradId","gradientCode","x2","y2","linearGradProps","stopsCode","stop","toString","maskPathCode","rcDims","parseInt","points","pathJson","d","strokeWidth","fill","ExpressionStatementCodeGen","getCondtionalASTFromJSON","conditionJSON","fileId","expression","BinaryExpressionCodeGen","left","operator","right","ExpressionCodeGen","ConditionalExpressionCodeGen","test","consequent","alternate","LogicalExpressionCodeGen","leftExp","rightExp","LoopCodeGen","repetitions","WrapperCodeGen","firstChildStyleName","toUpperCase","siblingsLength","previousSiblingStyleName","updateWrapperStyleName","InlineViewCodeGen","IconCodeGen","LoaderCodeGen","MapCodeGen","mapStyle","SliderCodeGen","minimumValue","max","maximumValue","SwitchCodeGen","onTintColor","thumbTintColor","remainingProps","checked","BaseCodeGen","react","isDuplicate","Map","entries","view","root","file","image","ellipse","scrollView","symbol","textInput","touchableOpacity","icon","activityIndicator","mapView","slider","expressionStatement","binaryExpression","conditionalExpression","logicalExpression","loop","stack","row","column","body","flexFiller","inlineView","lastSlash","fileName","LayerCodeGenClass","componentCodeGenMap","borderStyle","opacity","borderRadius","source_local","centerCodeGen","layerCodeGen","error","ReactEngine","getFileCode","fileJSON","prettier","format","plugins","prettierBabylon","parser","getAppFiles","files","router","artboards","artboard","appJSCode","assets","styleCSSCode","asset","fontName","content","getIndexWithFont","substr","packageJSON","version","dependencies","scripts","start","build","eject","eslintConfig","browserslist","production","development","appTestJS","indexJS","indexCSS","publicManifest","short_name","icons","src","sizes","start_url","theme_color","background_color","serviceWorkerJSContent","indexHTML","gitIgnoreContent","projectReadme","favicon","projectConfig","iconsJS","ReactCodeEngine","displayName","reactEngine","CRAFiles","filesMap","set","JSON","stringify","base64","zip","init","session","activate","codeEngine","addCodeEngine","deactivate","logSession","executeFunction"],"mappings":"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"}