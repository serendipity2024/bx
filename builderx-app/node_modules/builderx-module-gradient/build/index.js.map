{"version":3,"sources":["../../webpack/bootstrap 020a818ac1d29ef45db4","GradientFinder.tsx","GradientImage.tsx","../../node_modules/dom-to-image/src/dom-to-image.js","../../node_modules/random-string/lib/random-string.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","gradientJSON","vector","colors","stops","forEach","data","index","push","stopColor","to","from","x","y","angleDeg","Math","atan2","PI","realLocations","offset","colorStrings","map","color","round","join","gradientType","elementDims","Promise","resolve","reject","gradientString","__WEBPACK_IMPORTED_MODULE_1____","newDiv","document","createElement","setAttribute","style","backgroundImage","width","height","zIndex","position","wrapperDiv","getElementById","overflow","body","prepend","__WEBPACK_IMPORTED_MODULE_0_dom_to_image___default","a","toPng","then","dataUrl","removeChild","childElementCount","catch","error","console","global","util","escape","string","replace","parseExtension","mimeType","url","extension","toLowerCase","WOFF","woff","woff2","ttf","eot","png","jpg","jpeg","gif","tiff","svg","dataAsUrl","content","type","isDataUrl","search","canvasToBlob","canvas","toBlob","binaryString","window","atob","toDataURL","split","length","binaryArray","Uint8Array","charCodeAt","Blob","resolveUrl","baseUrl","doc","implementation","createHTMLDocument","base","head","appendChild","href","getAndEncode","TIMEOUT","domtoimage","impl","options","cacheBust","test","Date","getTime","placeholder","request","XMLHttpRequest","onreadystatechange","readyState","status","fail","encoder","FileReader","onloadend","result","readAsDataURL","response","ontimeout","responseType","timeout","open","send","imagePlaceholder","message","uid","random","pow","toString","slice","delay","ms","arg","setTimeout","asArray","arrayLike","array","escapeXhtml","makeImage","uri","image","Image","onload","onerror","src","node","leftBorder","px","rightBorder","scrollWidth","topBorder","bottomBorder","scrollHeight","match","exec","styleProperty","value","getComputedStyle","getPropertyValue","parseFloat","newUtil","inliner","URL_REGEX","inlineAll","shouldProcess","readUrls","urls","done","inline","filter","RegExp","urlAsRegex","newInliner","fontFaces","resolveAll","readAll","webFonts","all","webFont","cssStrings","styleSheets","cssRules","sheet","bind","e","log","rule","CSSRule","FONT_FACE_RULE","rules","newWebFont","webFontRule","parentStyleSheet","cssText","newFontFaces","images","Element","background","inlined","setProperty","getPropertyPriority","inlineBackground","HTMLImageElement","newImage","childNodes","child","element","newImages","defaultOptions","undefined","toSvg","draw","toJpeg","quality","toPixelData","getContext","getImageData","copyOptions","root","HTMLCanvasElement","cloneNode","clone","original","children","parent","childClone","cloneChildrenInOrder","cloneChildren","source","target","copyProperties","className","styleElement","selector","formatCssText","formatCssProperties","createTextNode","formatPseudoElementStyle","clonePseudoElement","HTMLTextAreaElement","innerHTML","HTMLInputElement","SVGElement","SVGRectElement","attribute","getAttribute","processClone","embedFonts","inlineImages","bgcolor","backgroundColor","keys","XMLSerializer","serializeToString","xhtml","foreignObject","makeSvgDataUri","domNode","ctx","fillStyle","fillRect","newCanvas","drawImage","makeNodeCopy","copyStyle","cloneStyle","clonePseudoElements","formatProperty","copyUserInput","fixSvg","styleNode","numbers","letters","specials","opts","rn","rnd","len","numeric","special","exclude","Array","isArray","_defaults","randomChars","chars","_buildChars","substring","floor"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 020a818ac1d29ef45db4","type coords = {\n  x: number;\n  y: number;\n};\n\ntype stop = {\n  stopColor: string;\n  offset: number;\n};\n\ntype gradientJSONType = {\n  gradientType: string;\n  from: coords;\n  to: coords;\n  stops: stop[];\n  shouldSmoothenOpacity: boolean;\n  activeIndex: number;\n};\n\nexport default function getGradientValue(gradientJSON: gradientJSONType) {\n  let colors: string[] = [];\n\n  gradientJSON.stops.forEach((data: stop, index: number) => {\n    colors.push(data.stopColor);\n  });\n  let vector;\n  if (gradientJSON.to && gradientJSON.from) {\n    vector = {\n      x: (gradientJSON.to.x as number) - (gradientJSON.from.x as number),\n      y: (gradientJSON.to.y as number) - (gradientJSON.from.y as number)\n    };\n  } else {\n    vector = {\n      x: 0,\n      y: 2\n    };\n  }\n  const angleRad = Math.atan2(vector.y, vector.x);\n  const angleDeg = (angleRad * 180) / Math.PI;\n\n  let realLocations: number[] = [];\n\n  gradientJSON.stops.forEach((data: any, index: number) => {\n    realLocations.push(data.offset);\n  });\n\n  const colorStrings: string = colors\n    .map(\n      (color: any, i: number) =>\n        `${color} ${Math.round(realLocations[i] * 100)}%`\n    )\n    .join(\", \");\n\n  if (\n    gradientJSON.gradientType &&\n    gradientJSON.gradientType === \"LinearGradient\"\n  ) {\n    return `linear-gradient(${angleDeg}deg, ${colorStrings})`;\n  } else if (\n    gradientJSON.gradientType &&\n    gradientJSON.gradientType === \"RadialGradient\"\n  ) {\n    return `radial-gradient(${colorStrings})`;\n  } else if (\n    gradientJSON.gradientType &&\n    gradientJSON.gradientType === \"AngularGradient\"\n  ) {\n    return `conic-gradient(${colorStrings})`;\n  } else {\n    return `linear-gradient(${angleDeg}deg, ${colorStrings})`;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/GradientFinder.tsx","import domtoimage from \"dom-to-image\";\nimport { getGradientValue } from \"./\";\nconst randomString = require(\"random-string\");\n\ntype coords = {\n  x: number;\n  y: number;\n};\n\ntype stop = {\n  stopColor: string;\n  offset: number;\n};\n\ntype gradientJSONType = {\n  gradientType: string;\n  from: coords;\n  to: coords;\n  stops: stop[];\n  shouldSmoothenOpacity: boolean;\n  activeIndex: number;\n};\n\ntype dimensionType = {\n  height: number | string;\n  width: number | string;\n};\n\nexport default function getGradientImage(\n  gradientJSON: gradientJSONType,\n  elementDims: dimensionType\n): Promise<string> {\n  // use dom-to-image package for converting div to image\n  return new Promise((resolve, reject) => {\n    const gradientString = getGradientValue(gradientJSON);\n    const newDiv = document.createElement(\"div\");\n    newDiv.setAttribute(\"style\", \"\");\n    newDiv.style.backgroundImage = gradientString;\n    newDiv.style.width = elementDims.width ? elementDims.width + \"px\" : \"100px\";\n    newDiv.style.height = elementDims.height\n      ? elementDims.height + \"px\"\n      : \"100px\";\n\n    newDiv.style.zIndex = \"-999\";\n    newDiv.style.position = \"absolute\";\n\n    let wrapperDiv = document.getElementById(\"wrapperDiv\");\n    if (!wrapperDiv) {\n      wrapperDiv = document.createElement(\"div\");\n      wrapperDiv.setAttribute(\"style\", \"\");\n      wrapperDiv.setAttribute(\"id\", \"wrapperDiv\");\n      wrapperDiv.style.overflow = \"hidden\";\n      document.body.prepend(wrapperDiv);\n    }\n    wrapperDiv.prepend(newDiv);\n    domtoimage\n      .toPng(newDiv)\n      .then((dataUrl: string) => {\n        if (wrapperDiv) {\n          wrapperDiv.removeChild(newDiv);\n          if (wrapperDiv.childElementCount === 0) {\n            document.body.removeChild(wrapperDiv);\n          }\n        }\n        resolve(dataUrl);\n      })\n      .catch((error: any) => {\n        console.error(\"oops, something went wrong!\", error);\n      });\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/GradientImage.tsx","(function (global) {\n    'use strict';\n\n    var util = newUtil();\n    var inliner = newInliner();\n    var fontFaces = newFontFaces();\n    var images = newImages();\n\n    // Default impl options\n    var defaultOptions = {\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false\n    };\n\n    var domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            options: {}\n        }\n    };\n\n    if (typeof module !== 'undefined')\n        module.exports = domtoimage;\n    else\n        global.domtoimage = domtoimage;\n\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        options = options || {};\n        copyOptions(options);\n        return Promise.resolve(node)\n            .then(function (node) {\n                return cloneNode(node, options.filter, true);\n            })\n            .then(embedFonts)\n            .then(inlineImages)\n            .then(applyOptions)\n            .then(function (clone) {\n                return makeSvgDataUri(clone,\n                    options.width || util.width(node),\n                    options.height || util.height(node)\n                );\n            });\n\n        function applyOptions(clone) {\n            if (options.bgcolor) clone.style.backgroundColor = options.bgcolor;\n\n            if (options.width) clone.style.width = options.width + 'px';\n            if (options.height) clone.style.height = options.height + 'px';\n\n            if (options.style)\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n\n            return clone;\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.getContext('2d').getImageData(\n                    0,\n                    0,\n                    util.width(node),\n                    util.height(node)\n                ).data;\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options || {})\n            .then(function (canvas) {\n                return canvas.toDataURL();\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        options = options || {};\n        return draw(node, options)\n            .then(function (canvas) {\n                return canvas.toDataURL('image/jpeg', options.quality || 1.0);\n            });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options || {})\n            .then(util.canvasToBlob);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if(typeof(options.imagePlaceholder) === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if(typeof(options.cacheBust) === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n    }\n\n    function draw(domNode, options) {\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(util.delay(100))\n            .then(function (image) {\n                var canvas = newCanvas(domNode);\n                canvas.getContext('2d').drawImage(image, 0, 0);\n                return canvas;\n            });\n\n        function newCanvas(domNode) {\n            var canvas = document.createElement('canvas');\n            canvas.width = options.width || util.width(domNode);\n            canvas.height = options.height || util.height(domNode);\n\n            if (options.bgcolor) {\n                var ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    function cloneNode(node, filter, root) {\n        if (!root && filter && !filter(node)) return Promise.resolve();\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(function (clone) {\n                return cloneChildren(node, clone, filter);\n            })\n            .then(function (clone) {\n                return processClone(node, clone);\n            });\n\n        function makeNodeCopy(node) {\n            if (node instanceof HTMLCanvasElement) return util.makeImage(node.toDataURL());\n            return node.cloneNode(false);\n        }\n\n        function cloneChildren(original, clone, filter) {\n            var children = original.childNodes;\n            if (children.length === 0) return Promise.resolve(clone);\n\n            return cloneChildrenInOrder(clone, util.asArray(children), filter)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneChildrenInOrder(parent, children, filter) {\n                var done = Promise.resolve();\n                children.forEach(function (child) {\n                    done = done\n                        .then(function () {\n                            return cloneNode(child, filter);\n                        })\n                        .then(function (childClone) {\n                            if (childClone) parent.appendChild(childClone);\n                        });\n                });\n                return done;\n            }\n        }\n\n        function processClone(original, clone) {\n            if (!(clone instanceof Element)) return clone;\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(function () {\n                    return clone;\n                });\n\n            function cloneStyle() {\n                copyStyle(window.getComputedStyle(original), clone.style);\n\n                function copyStyle(source, target) {\n                    if (source.cssText) target.cssText = source.cssText;\n                    else copyProperties(source, target);\n\n                    function copyProperties(source, target) {\n                        util.asArray(source).forEach(function (name) {\n                            target.setProperty(\n                                name,\n                                source.getPropertyValue(name),\n                                source.getPropertyPriority(name)\n                            );\n                        });\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    var style = window.getComputedStyle(original, element);\n                    var content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') return;\n\n                    var className = util.uid();\n                    clone.className = clone.className + ' ' + className;\n                    var styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle(className, element, style));\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle(className, element, style) {\n                        var selector = '.' + className + ':' + element;\n                        var cssText = style.cssText ? formatCssText(style) : formatCssProperties(style);\n                        return document.createTextNode(selector + '{' + cssText + '}');\n\n                        function formatCssText(style) {\n                            var content = style.getPropertyValue('content');\n                            return style.cssText + ' content: ' + content + ';';\n                        }\n\n                        function formatCssProperties(style) {\n\n                            return util.asArray(style)\n                                .map(formatProperty)\n                                .join('; ') + ';';\n\n                            function formatProperty(name) {\n                                return name + ': ' +\n                                    style.getPropertyValue(name) +\n                                    (style.getPropertyPriority(name) ? ' !important' : '');\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (original instanceof HTMLTextAreaElement) clone.innerHTML = original.value;\n                if (original instanceof HTMLInputElement) clone.setAttribute(\"value\", original.value);\n            }\n\n            function fixSvg() {\n                if (!(clone instanceof SVGElement)) return;\n                clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                if (!(clone instanceof SVGRectElement)) return;\n                ['width', 'height'].forEach(function (attribute) {\n                    var value = clone.getAttribute(attribute);\n                    if (!value) return;\n\n                    clone.style.setProperty(attribute, value);\n                });\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll()\n            .then(function (cssText) {\n                var styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n                return node;\n            });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node)\n            .then(function () {\n                return node;\n            });\n    }\n\n    function makeSvgDataUri(node, width, height) {\n        return Promise.resolve(node)\n            .then(function (node) {\n                node.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                return new XMLSerializer().serializeToString(node);\n            })\n            .then(util.escapeXhtml)\n            .then(function (xhtml) {\n                return '<foreignObject x=\"0\" y=\"0\" width=\"100%\" height=\"100%\">' + xhtml + '</foreignObject>';\n            })\n            .then(function (foreignObject) {\n                return '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + width + '\" height=\"' + height + '\">' +\n                    foreignObject + '</svg>';\n            })\n            .then(function (svg) {\n                return 'data:image/svg+xml;charset=utf-8,' + svg;\n            });\n    }\n\n    function newUtil() {\n        return {\n            escape: escape,\n            parseExtension: parseExtension,\n            mimeType: mimeType,\n            dataAsUrl: dataAsUrl,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid(),\n            delay: delay,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height\n        };\n\n        function mimes() {\n            /*\n             * Only WOFF and EOT mime types for fonts are 'real'\n             * see http://www.iana.org/assignments/media-types/media-types.xhtml\n             */\n            var WOFF = 'application/font-woff';\n            var JPEG = 'image/jpeg';\n\n            return {\n                'woff': WOFF,\n                'woff2': WOFF,\n                'ttf': 'application/font-truetype',\n                'eot': 'application/vnd.ms-fontobject',\n                'png': 'image/png',\n                'jpg': JPEG,\n                'jpeg': JPEG,\n                'gif': 'image/gif',\n                'tiff': 'image/tiff',\n                'svg': 'image/svg+xml'\n            };\n        }\n\n        function parseExtension(url) {\n            var match = /\\.([^\\.\\/]*?)$/g.exec(url);\n            if (match) return match[1];\n            else return '';\n        }\n\n        function mimeType(url) {\n            var extension = parseExtension(url).toLowerCase();\n            return mimes()[extension] || '';\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function toBlob(canvas) {\n            return new Promise(function (resolve) {\n                var binaryString = window.atob(canvas.toDataURL().split(',')[1]);\n                var length = binaryString.length;\n                var binaryArray = new Uint8Array(length);\n\n                for (var i = 0; i < length; i++)\n                    binaryArray[i] = binaryString.charCodeAt(i);\n\n                resolve(new Blob([binaryArray], {\n                    type: 'image/png'\n                }));\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob)\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n\n            return toBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            var doc = document.implementation.createHTMLDocument();\n            var base = doc.createElement('base');\n            doc.head.appendChild(base);\n            var a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            var index = 0;\n\n            return function () {\n                return 'u' + fourRandomChars() + index++;\n\n                function fourRandomChars() {\n                    /* see http://stackoverflow.com/a/6248722/2519373 */\n                    return ('0000' + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4);\n                }\n            };\n        }\n\n        function makeImage(uri) {\n            return new Promise(function (resolve, reject) {\n                var image = new Image();\n                image.onload = function () {\n                    resolve(image);\n                };\n                image.onerror = reject;\n                image.src = uri;\n            });\n        }\n\n        function getAndEncode(url) {\n            var TIMEOUT = 30000;\n            if(domtoimage.impl.options.cacheBust) {\n                // Cache bypass so we dont have CORS issues with cached images\n                // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                url += ((/\\?/).test(url) ? \"&\" : \"?\") + (new Date()).getTime();\n            }\n\n            return new Promise(function (resolve) {\n                var request = new XMLHttpRequest();\n\n                request.onreadystatechange = done;\n                request.ontimeout = timeout;\n                request.responseType = 'blob';\n                request.timeout = TIMEOUT;\n                request.open('GET', url, true);\n                request.send();\n\n                var placeholder;\n                if(domtoimage.impl.options.imagePlaceholder) {\n                    var split = domtoimage.impl.options.imagePlaceholder.split(/,/);\n                    if(split && split[1]) {\n                        placeholder = split[1];\n                    }\n                }\n\n                function done() {\n                    if (request.readyState !== 4) return;\n\n                    if (request.status !== 200) {\n                        if(placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('cannot fetch resource: ' + url + ', status: ' + request.status);\n                        }\n\n                        return;\n                    }\n\n                    var encoder = new FileReader();\n                    encoder.onloadend = function () {\n                        var content = encoder.result.split(/,/)[1];\n                        resolve(content);\n                    };\n                    encoder.readAsDataURL(request.response);\n                }\n\n                function timeout() {\n                    if(placeholder) {\n                        resolve(placeholder);\n                    } else {\n                        fail('timeout of ' + TIMEOUT + 'ms occured while fetching resource: ' + url);\n                    }\n                }\n\n                function fail(message) {\n                    console.error(message);\n                    resolve('');\n                }\n            });\n        }\n\n        function dataAsUrl(content, type) {\n            return 'data:' + type + ';base64,' + content;\n        }\n\n        function escape(string) {\n            return string.replace(/([.*+?^${}()|\\[\\]\\/\\\\])/g, '\\\\$1');\n        }\n\n        function delay(ms) {\n            return function (arg) {\n                return new Promise(function (resolve) {\n                    setTimeout(function () {\n                        resolve(arg);\n                    }, ms);\n                });\n            };\n        }\n\n        function asArray(arrayLike) {\n            var array = [];\n            var length = arrayLike.length;\n            for (var i = 0; i < length; i++) array.push(arrayLike[i]);\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            var leftBorder = px(node, 'border-left-width');\n            var rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            var topBorder = px(node, 'border-top-width');\n            var bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            var value = window.getComputedStyle(node).getPropertyValue(styleProperty);\n            return parseFloat(value.replace('px', ''));\n        }\n    }\n\n    function newInliner() {\n        var URL_REGEX = /url\\(['\"]?([^'\"]+?)['\"]?\\)/g;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline\n            }\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            var result = [];\n            var match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[1]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (url) {\n                    return baseUrl ? util.resolveUrl(url, baseUrl) : url;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (data) {\n                    return util.dataAsUrl(data, util.mimeType(url));\n                })\n                .then(function (dataUrl) {\n                    return string.replace(urlAsRegex(url), '$1' + dataUrl + '$3');\n                });\n\n            function urlAsRegex(url) {\n                return new RegExp('(url\\\\([\\'\"]?)(' + util.escape(url) + ')([\\'\"]?\\\\))', 'g');\n            }\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) return Promise.resolve(string);\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    var done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (string) {\n                            return inline(string, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll\n            }\n        };\n\n        function resolveAll() {\n            return readAll(document)\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                var cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    try {\n                        util.asArray(sheet.cssRules || []).forEach(cssRules.push.bind(cssRules));\n                    } catch (e) {\n                        console.log('Error while reading CSS rules from ' + sheet.href, e.toString());\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        var baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    }\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage\n            }\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) return Promise.resolve();\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (data) {\n                        return util.dataAsUrl(data, util.mimeType(element.src));\n                    })\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve, reject) {\n                            element.onload = resolve;\n                            element.onerror = reject;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!(node instanceof Element)) return Promise.resolve(node);\n\n            return inlineBackground(node)\n                .then(function () {\n                    if (node instanceof HTMLImageElement)\n                        return newImage(node).inline();\n                    else\n                        return Promise.all(\n                            util.asArray(node.childNodes).map(function (child) {\n                                return inlineAll(child);\n                            })\n                        );\n                });\n\n            function inlineBackground(node) {\n                var background = node.style.getPropertyValue('background');\n\n                if (!background) return Promise.resolve(node);\n\n                return inliner.inlineAll(background)\n                    .then(function (inlined) {\n                        node.style.setProperty(\n                            'background',\n                            inlined,\n                            node.style.getPropertyPriority('background')\n                        );\n                    })\n                    .then(function () {\n                        return node;\n                    });\n            }\n        }\n    }\n})(this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom-to-image/src/dom-to-image.js\n// module id = 3\n// module chunks = 0","/*\n * random-string\n * https://github.com/valiton/node-random-string\n *\n * Copyright (c) 2013 Valiton GmbH, Bastian 'hereandnow' Behrens\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nvar numbers = '0123456789',\n    letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n    specials = '!$%^&*()_+|~-=`{}[]:;<>?,./';\n\n\nfunction _defaults (opts) {\n  opts || (opts = {});\n  return {\n    length: opts.length || 8,\n    numeric: typeof opts.numeric === 'boolean' ? opts.numeric : true,\n    letters: typeof opts.letters === 'boolean' ? opts.letters : true,\n    special: typeof opts.special === 'boolean' ? opts.special : false,\n    exclude: Array.isArray(opts.exclude)       ? opts.exclude : []\n  };\n}\n\nfunction _buildChars (opts) {\n  var chars = '';\n  if (opts.numeric) { chars += numbers; }\n  if (opts.letters) { chars += letters; }\n  if (opts.special) { chars += specials; }\n  for (var i = 0; i <= opts.exclude.length; i++){\n    chars = chars.replace(opts.exclude[i], \"\");\n  }\n  return chars;\n}\n\nmodule.exports = function randomString(opts) {\n  opts = _defaults(opts);\n  var i, rn,\n      rnd = '',\n      len = opts.length,\n      exclude = opts.exclude,\n      randomChars = _buildChars(opts);\n  for (i = 1; i <= len; i++) {\n    rnd += randomChars.substring(rn = Math.floor(Math.random() * randomChars.length), rn + 1);\n  }\n  return rnd;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/random-string/lib/random-string.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}